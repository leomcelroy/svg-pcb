{
  "version": 3,
  "sources": ["../../build/_snowpack/pkg/lit-html.js", "../../build/libs/gram-js.js", "../../build/js/view.js", "../../build/js/components-names.js", "../../build/js/events/download.js", "../../build/js/views/drawImportItems.js", "../../build/js/views/renderPreviewFootprint.js", "../../build/js/views/drawGrid.js", "../../build/js/views/drawPath.js", "../../build/js/Turtle.js", "../../build/js/views/drawHandles.js", "../../build/js/views/svgViewer.js", "../../build/js/views/renderFootprint.js", "../../build/_snowpack/pkg/common/_commonjsHelpers-8c19dec8.js", "../../build/_snowpack/pkg/esprima.js", "../../build/js/events/addTranslateHandle.js", "../../build/js/events/addVerticalBarDrag.js", "../../build/js/events/addImgPanZoom.js", "../../build/js/events/addDropUpload.js", "../../build/js/events/addSelectBox.js", "../../build/js/events/addNumberDragging.js", "../../build/js/getFileSection.js", "../../build/js/events/addImportDrag.js", "../../build/js/events.js", "../../build/js/pcb_helpers.js", "../../build/js/wire.js", "../../build/js/pcb.js", "../../build/js/s-expression-parser.js", "../../build/js/ki_cad_parser.js", "../../build/_snowpack/pkg/astring.js", "../../build/js/getFootprints.js", "../../build/js/dispatch.js", "../../build/js/main.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t;const i=globalThis.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=`lit$${(Math.random()+\"\").slice(9)}$`,o=\"?\"+e,n=`<${o}>`,l=document,h=(t=\"\")=>l.createComment(t),r=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,d=Array.isArray,u=t=>{var i;return d(t)||\"function\"==typeof(null===(i=t)||void 0===i?void 0:i[Symbol.iterator])},c=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,a=/>/g,f=/>|[ \t\\n\f\\r](?:([^\\s\"'>=/]+)([ \t\\n\f\\r]*=[ \t\\n\f\\r]*(?:[^ \t\\n\f\\r\"'`<>=]|(\"|')|))|$)/g,_=/'/g,m=/\"/g,g=/^(?:script|style|textarea|title)$/i,p=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),$=p(1),y=p(2),b=Symbol.for(\"lit-noChange\"),w=Symbol.for(\"lit-nothing\"),T=new WeakMap,x=(t,i,s)=>{var e,o;const n=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let l=n._$litPart$;if(void 0===l){const t=null!==(o=null==s?void 0:s.renderBefore)&&void 0!==o?o:null;n._$litPart$=l=new N(i.insertBefore(h(),t),t,void 0,null!=s?s:{});}return l._$AI(t),l},A=l.createTreeWalker(l,129,null,!1),C=(t,i)=>{const o=t.length-1,l=[];let h,r=2===i?\"<svg>\":\"\",d=c;for(let i=0;i<o;i++){const s=t[i];let o,u,p=-1,$=0;for(;$<s.length&&(d.lastIndex=$,u=d.exec(s),null!==u);)$=d.lastIndex,d===c?\"!--\"===u[1]?d=v:void 0!==u[1]?d=a:void 0!==u[2]?(g.test(u[2])&&(h=RegExp(\"</\"+u[2],\"g\")),d=f):void 0!==u[3]&&(d=f):d===f?\">\"===u[0]?(d=null!=h?h:c,p=-1):void 0===u[1]?p=-2:(p=d.lastIndex-u[2].length,o=u[1],d=void 0===u[3]?f:'\"'===u[3]?m:_):d===m||d===_?d=f:d===v||d===a?d=c:(d=f,h=void 0);const y=d===f&&t[i+1].startsWith(\"/>\")?\" \":\"\";r+=d===c?s+n:p>=0?(l.push(o),s.slice(0,p)+\"$lit$\"+s.slice(p)+e+y):s+e+(-2===p?(l.push(void 0),i):y);}const u=r+(t[o]||\"<?>\")+(2===i?\"</svg>\":\"\");if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return [void 0!==s?s.createHTML(u):u,l]};class E{constructor({strings:t,_$litType$:s},n){let l;this.parts=[];let r=0,d=0;const u=t.length-1,c=this.parts,[v,a]=C(t,s);if(this.el=E.createElement(v,n),A.currentNode=this.el.content,2===s){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes);}for(;null!==(l=A.nextNode())&&c.length<u;){if(1===l.nodeType){if(l.hasAttributes()){const t=[];for(const i of l.getAttributeNames())if(i.endsWith(\"$lit$\")||i.startsWith(e)){const s=a[d++];if(t.push(i),void 0!==s){const t=l.getAttribute(s.toLowerCase()+\"$lit$\").split(e),i=/([.?@])?(.*)/.exec(s);c.push({type:1,index:r,name:i[2],strings:t,ctor:\".\"===i[1]?M:\"?\"===i[1]?H:\"@\"===i[1]?I:S});}else c.push({type:6,index:r});}for(const i of t)l.removeAttribute(i);}if(g.test(l.tagName)){const t=l.textContent.split(e),s=t.length-1;if(s>0){l.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)l.append(t[i],h()),A.nextNode(),c.push({type:2,index:++r});l.append(t[s],h());}}}else if(8===l.nodeType)if(l.data===o)c.push({type:2,index:r});else {let t=-1;for(;-1!==(t=l.data.indexOf(e,t+1));)c.push({type:7,index:r}),t+=e.length-1;}r++;}}static createElement(t,i){const s=l.createElement(\"template\");return s.innerHTML=t,s}}function P(t,i,s=t,e){var o,n,l,h;if(i===b)return i;let d=void 0!==e?null===(o=s._$Cl)||void 0===o?void 0:o[e]:s._$Cu;const u=r(i)?void 0:i._$litDirective$;return (null==d?void 0:d.constructor)!==u&&(null===(n=null==d?void 0:d._$AO)||void 0===n||n.call(d,!1),void 0===u?d=void 0:(d=new u(t),d._$AT(t,s,e)),void 0!==e?(null!==(l=(h=s)._$Cl)&&void 0!==l?l:h._$Cl=[])[e]=d:s._$Cu=d),void 0!==d&&(i=P(t,d._$AS(t,i.values),d,e)),i}class V{constructor(t,i){this.v=[],this._$AN=void 0,this._$AD=t,this._$AM=i;}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}p(t){var i;const{el:{content:s},parts:e}=this._$AD,o=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:l).importNode(s,!0);A.currentNode=o;let n=A.nextNode(),h=0,r=0,d=e[0];for(;void 0!==d;){if(h===d.index){let i;2===d.type?i=new N(n,n.nextSibling,this,t):1===d.type?i=new d.ctor(n,d.name,d.strings,this,t):6===d.type&&(i=new L(n,this,t)),this.v.push(i),d=e[++r];}h!==(null==d?void 0:d.index)&&(n=A.nextNode(),h++);}return o}m(t){let i=0;for(const s of this.v)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++;}}class N{constructor(t,i,s,e){var o;this.type=2,this._$AH=w,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cg=null===(o=null==e?void 0:e.isConnected)||void 0===o||o;}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cg}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=P(this,t,i),r(t)?t===w||null==t||\"\"===t?(this._$AH!==w&&this._$AR(),this._$AH=w):t!==this._$AH&&t!==b&&this.$(t):void 0!==t._$litType$?this.T(t):void 0!==t.nodeType?this.k(t):u(t)?this.S(t):this.$(t);}M(t,i=this._$AB){return this._$AA.parentNode.insertBefore(t,i)}k(t){this._$AH!==t&&(this._$AR(),this._$AH=this.M(t));}$(t){this._$AH!==w&&r(this._$AH)?this._$AA.nextSibling.data=t:this.k(l.createTextNode(t)),this._$AH=t;}T(t){var i;const{values:s,_$litType$:e}=t,o=\"number\"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=E.createElement(e.h,this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===o)this._$AH.m(s);else {const t=new V(o,this),i=t.p(this.options);t.m(s),this.k(i),this._$AH=t;}}_$AC(t){let i=T.get(t.strings);return void 0===i&&T.set(t.strings,i=new E(t)),i}S(t){d(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const o of t)e===i.length?i.push(s=new N(this.M(h()),this.M(h()),this,this.options)):s=i[e],s._$AI(o),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e);}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i;}}setConnected(t){var i;void 0===this._$AM&&(this._$Cg=t,null===(i=this._$AP)||void 0===i||i.call(this,t));}}class S{constructor(t,i,s,e,o){this.type=1,this._$AH=w,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=o,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=w;}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const o=this.strings;let n=!1;if(void 0===o)t=P(this,t,i,0),n=!r(t)||t!==this._$AH&&t!==b,n&&(this._$AH=t);else {const e=t;let l,h;for(t=o[0],l=0;l<o.length-1;l++)h=P(this,e[s+l],i,l),h===b&&(h=this._$AH[l]),n||(n=!r(h)||h!==this._$AH[l]),h===w?t=w:t!==w&&(t+=(null!=h?h:\"\")+o[l+1]),this._$AH[l]=h;}n&&!e&&this.C(t);}C(t){t===w?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:\"\");}}class M extends S{constructor(){super(...arguments),this.type=3;}C(t){this.element[this.name]=t===w?void 0:t;}}const k=i?i.emptyScript:\"\";class H extends S{constructor(){super(...arguments),this.type=4;}C(t){t&&t!==w?this.element.setAttribute(this.name,k):this.element.removeAttribute(this.name);}}class I extends S{constructor(t,i,s,e,o){super(t,i,s,e,o),this.type=5;}_$AI(t,i=this){var s;if((t=null!==(s=P(this,t,i,0))&&void 0!==s?s:w)===b)return;const e=this._$AH,o=t===w&&e!==w||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,n=t!==w&&(e===w||o);o&&this.element.removeEventListener(this.name,this,e),n&&this.element.addEventListener(this.name,this,t),this._$AH=t;}handleEvent(t){var i,s;\"function\"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t);}}class L{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s;}get _$AU(){return this._$AM._$AU}_$AI(t){P(this,t);}}const z=window.litHtmlPolyfillSupport;null==z||z(E,N),(null!==(t=globalThis.litHtmlVersions)&&void 0!==t?t:globalThis.litHtmlVersions=[]).push(\"2.2.2\");\n\nexport { $ as html, x as render, y as svg };\n", "var Node1 = function() {\n    function Node2(key, data) {\n        this.next = null;\n        this.key = key;\n        this.data = data;\n        this.left = null;\n        this.right = null;\n    }\n    return Node2;\n}();\nfunction DEFAULT_COMPARE(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\nfunction splay(i, t, comparator) {\n    var N = new Node1(null, null);\n    var l = N;\n    var r = N;\n    while(true){\n        var cmp = comparator(i, t.key);\n        if (cmp < 0) {\n            if (t.left === null) break;\n            if (comparator(i, t.left.key) < 0) {\n                var y = t.left;\n                t.left = y.right;\n                y.right = t;\n                t = y;\n                if (t.left === null) break;\n            }\n            r.left = t;\n            r = t;\n            t = t.left;\n        } else if (cmp > 0) {\n            if (t.right === null) break;\n            if (comparator(i, t.right.key) > 0) {\n                var y = t.right;\n                t.right = y.left;\n                y.left = t;\n                t = y;\n                if (t.right === null) break;\n            }\n            l.right = t;\n            l = t;\n            t = t.right;\n        } else break;\n    }\n    l.right = t.left;\n    r.left = t.right;\n    t.left = N.right;\n    t.right = N.left;\n    return t;\n}\nfunction insert(i, data, t, comparator) {\n    var node = new Node1(i, data);\n    if (t === null) {\n        node.left = node.right = null;\n        return node;\n    }\n    t = splay(i, t, comparator);\n    var cmp = comparator(i, t.key);\n    if (cmp < 0) {\n        node.left = t.left;\n        node.right = t;\n        t.left = null;\n    } else if (cmp >= 0) {\n        node.right = t.right;\n        node.left = t;\n        t.right = null;\n    }\n    return node;\n}\nfunction split(key, v, comparator) {\n    var left = null;\n    var right = null;\n    if (v) {\n        v = splay(key, v, comparator);\n        var cmp = comparator(v.key, key);\n        if (cmp === 0) {\n            left = v.left;\n            right = v.right;\n        } else if (cmp < 0) {\n            right = v.right;\n            v.right = null;\n            left = v;\n        } else {\n            left = v.left;\n            v.left = null;\n            right = v;\n        }\n    }\n    return {\n        left,\n        right\n    };\n}\nfunction merge1(left, right, comparator) {\n    if (right === null) return left;\n    if (left === null) return right;\n    right = splay(left.key, right, comparator);\n    right.left = left;\n    return right;\n}\nfunction printRow(root, prefix, isTail, out, printNode) {\n    if (root) {\n        out(\"\" + prefix + (isTail ? \"\\u2514\\u2500\\u2500 \" : \"\\u251C\\u2500\\u2500 \") + printNode(root) + \"\\n\");\n        var indent = prefix + (isTail ? \"    \" : \"\\u2502   \");\n        if (root.left) printRow(root.left, indent, false, out, printNode);\n        if (root.right) printRow(root.right, indent, true, out, printNode);\n    }\n}\nvar Tree = function() {\n    function Tree2(comparator) {\n        if (comparator === void 0) {\n            comparator = DEFAULT_COMPARE;\n        }\n        this._root = null;\n        this._size = 0;\n        this._comparator = comparator;\n    }\n    Tree2.prototype.insert = function(key, data) {\n        this._size++;\n        return this._root = insert(key, data, this._root, this._comparator);\n    };\n    Tree2.prototype.add = function(key, data) {\n        var node = new Node1(key, data);\n        if (this._root === null) {\n            node.left = node.right = null;\n            this._size++;\n            this._root = node;\n        }\n        var comparator = this._comparator;\n        var t = splay(key, this._root, comparator);\n        var cmp = comparator(key, t.key);\n        if (cmp === 0) this._root = t;\n        else {\n            if (cmp < 0) {\n                node.left = t.left;\n                node.right = t;\n                t.left = null;\n            } else if (cmp > 0) {\n                node.right = t.right;\n                node.left = t;\n                t.right = null;\n            }\n            this._size++;\n            this._root = node;\n        }\n        return this._root;\n    };\n    Tree2.prototype.remove = function(key) {\n        this._root = this._remove(key, this._root, this._comparator);\n    };\n    Tree2.prototype._remove = function(i, t, comparator) {\n        var x;\n        if (t === null) return null;\n        t = splay(i, t, comparator);\n        var cmp = comparator(i, t.key);\n        if (cmp === 0) {\n            if (t.left === null) {\n                x = t.right;\n            } else {\n                x = splay(i, t.left, comparator);\n                x.right = t.right;\n            }\n            this._size--;\n            return x;\n        }\n        return t;\n    };\n    Tree2.prototype.pop = function() {\n        var node = this._root;\n        if (node) {\n            while(node.left)node = node.left;\n            this._root = splay(node.key, this._root, this._comparator);\n            this._root = this._remove(node.key, this._root, this._comparator);\n            return {\n                key: node.key,\n                data: node.data\n            };\n        }\n        return null;\n    };\n    Tree2.prototype.findStatic = function(key) {\n        var current = this._root;\n        var compare = this._comparator;\n        while(current){\n            var cmp = compare(key, current.key);\n            if (cmp === 0) return current;\n            else if (cmp < 0) current = current.left;\n            else current = current.right;\n        }\n        return null;\n    };\n    Tree2.prototype.find = function(key) {\n        if (this._root) {\n            this._root = splay(key, this._root, this._comparator);\n            if (this._comparator(key, this._root.key) !== 0) return null;\n        }\n        return this._root;\n    };\n    Tree2.prototype.contains = function(key) {\n        var current = this._root;\n        var compare = this._comparator;\n        while(current){\n            var cmp = compare(key, current.key);\n            if (cmp === 0) return true;\n            else if (cmp < 0) current = current.left;\n            else current = current.right;\n        }\n        return false;\n    };\n    Tree2.prototype.forEach = function(visitor, ctx) {\n        var current = this._root;\n        var Q = [];\n        var done = false;\n        while(!done){\n            if (current !== null) {\n                Q.push(current);\n                current = current.left;\n            } else {\n                if (Q.length !== 0) {\n                    current = Q.pop();\n                    visitor.call(ctx, current);\n                    current = current.right;\n                } else done = true;\n            }\n        }\n        return this;\n    };\n    Tree2.prototype.range = function(low, high, fn, ctx) {\n        var Q = [];\n        var compare = this._comparator;\n        var node = this._root;\n        var cmp;\n        while(Q.length !== 0 || node){\n            if (node) {\n                Q.push(node);\n                node = node.left;\n            } else {\n                node = Q.pop();\n                cmp = compare(node.key, high);\n                if (cmp > 0) {\n                    break;\n                } else if (compare(node.key, low) >= 0) {\n                    if (fn.call(ctx, node)) return this;\n                }\n                node = node.right;\n            }\n        }\n        return this;\n    };\n    Tree2.prototype.keys = function() {\n        var keys = [];\n        this.forEach(function(_a) {\n            var key = _a.key;\n            return keys.push(key);\n        });\n        return keys;\n    };\n    Tree2.prototype.values = function() {\n        var values = [];\n        this.forEach(function(_a) {\n            var data = _a.data;\n            return values.push(data);\n        });\n        return values;\n    };\n    Tree2.prototype.min = function() {\n        if (this._root) return this.minNode(this._root).key;\n        return null;\n    };\n    Tree2.prototype.max = function() {\n        if (this._root) return this.maxNode(this._root).key;\n        return null;\n    };\n    Tree2.prototype.minNode = function(t) {\n        if (t === void 0) {\n            t = this._root;\n        }\n        if (t) while(t.left)t = t.left;\n        return t;\n    };\n    Tree2.prototype.maxNode = function(t) {\n        if (t === void 0) {\n            t = this._root;\n        }\n        if (t) while(t.right)t = t.right;\n        return t;\n    };\n    Tree2.prototype.at = function(index) {\n        var current = this._root;\n        var done = false;\n        var i = 0;\n        var Q = [];\n        while(!done){\n            if (current) {\n                Q.push(current);\n                current = current.left;\n            } else {\n                if (Q.length > 0) {\n                    current = Q.pop();\n                    if (i === index) return current;\n                    i++;\n                    current = current.right;\n                } else done = true;\n            }\n        }\n        return null;\n    };\n    Tree2.prototype.next = function(d) {\n        var root = this._root;\n        var successor = null;\n        if (d.right) {\n            successor = d.right;\n            while(successor.left)successor = successor.left;\n            return successor;\n        }\n        var comparator = this._comparator;\n        while(root){\n            var cmp = comparator(d.key, root.key);\n            if (cmp === 0) break;\n            else if (cmp < 0) {\n                successor = root;\n                root = root.left;\n            } else root = root.right;\n        }\n        return successor;\n    };\n    Tree2.prototype.prev = function(d) {\n        var root = this._root;\n        var predecessor = null;\n        if (d.left !== null) {\n            predecessor = d.left;\n            while(predecessor.right)predecessor = predecessor.right;\n            return predecessor;\n        }\n        var comparator = this._comparator;\n        while(root){\n            var cmp = comparator(d.key, root.key);\n            if (cmp === 0) break;\n            else if (cmp < 0) root = root.left;\n            else {\n                predecessor = root;\n                root = root.right;\n            }\n        }\n        return predecessor;\n    };\n    Tree2.prototype.clear = function() {\n        this._root = null;\n        this._size = 0;\n        return this;\n    };\n    Tree2.prototype.toList = function() {\n        return toList(this._root);\n    };\n    Tree2.prototype.load = function(keys, values, presort) {\n        if (values === void 0) {\n            values = [];\n        }\n        if (presort === void 0) {\n            presort = false;\n        }\n        var size = keys.length;\n        var comparator = this._comparator;\n        if (presort) sort(keys, values, 0, size - 1, comparator);\n        if (this._root === null) {\n            this._root = loadRecursive(keys, values, 0, size);\n            this._size = size;\n        } else {\n            var mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n            size = this._size + size;\n            this._root = sortedListToBST({\n                head: mergedList\n            }, 0, size);\n        }\n        return this;\n    };\n    Tree2.prototype.isEmpty = function() {\n        return this._root === null;\n    };\n    Object.defineProperty(Tree2.prototype, \"size\", {\n        get: function() {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tree2.prototype, \"root\", {\n        get: function() {\n            return this._root;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tree2.prototype.toString = function(printNode) {\n        if (printNode === void 0) {\n            printNode = function(n) {\n                return String(n.key);\n            };\n        }\n        var out = [];\n        printRow(this._root, \"\", true, function(v) {\n            return out.push(v);\n        }, printNode);\n        return out.join(\"\");\n    };\n    Tree2.prototype.update = function(key, newKey, newData) {\n        var comparator = this._comparator;\n        var _a = split(key, this._root, comparator), left = _a.left, right = _a.right;\n        if (comparator(key, newKey) < 0) {\n            right = insert(newKey, newData, right, comparator);\n        } else {\n            left = insert(newKey, newData, left, comparator);\n        }\n        this._root = merge1(left, right, comparator);\n    };\n    Tree2.prototype.split = function(key) {\n        return split(key, this._root, this._comparator);\n    };\n    return Tree2;\n}();\nfunction loadRecursive(keys, values, start, end) {\n    var size = end - start;\n    if (size > 0) {\n        var middle = start + Math.floor(size / 2);\n        var key = keys[middle];\n        var data = values[middle];\n        var node = new Node1(key, data);\n        node.left = loadRecursive(keys, values, start, middle);\n        node.right = loadRecursive(keys, values, middle + 1, end);\n        return node;\n    }\n    return null;\n}\nfunction createList(keys, values) {\n    var head = new Node1(null, null);\n    var p = head;\n    for(var i = 0; i < keys.length; i++){\n        p = p.next = new Node1(keys[i], values[i]);\n    }\n    p.next = null;\n    return head.next;\n}\nfunction toList(root) {\n    var current = root;\n    var Q = [];\n    var done = false;\n    var head = new Node1(null, null);\n    var p = head;\n    while(!done){\n        if (current) {\n            Q.push(current);\n            current = current.left;\n        } else {\n            if (Q.length > 0) {\n                current = p = p.next = Q.pop();\n                current = current.right;\n            } else done = true;\n        }\n    }\n    p.next = null;\n    return head.next;\n}\nfunction sortedListToBST(list, start, end) {\n    var size = end - start;\n    if (size > 0) {\n        var middle = start + Math.floor(size / 2);\n        var left = sortedListToBST(list, start, middle);\n        var root = list.head;\n        root.left = left;\n        list.head = list.head.next;\n        root.right = sortedListToBST(list, middle + 1, end);\n        return root;\n    }\n    return null;\n}\nfunction mergeLists(l1, l2, compare) {\n    var head = new Node1(null, null);\n    var p = head;\n    var p1 = l1;\n    var p2 = l2;\n    while(p1 !== null && p2 !== null){\n        if (compare(p1.key, p2.key) < 0) {\n            p.next = p1;\n            p1 = p1.next;\n        } else {\n            p.next = p2;\n            p2 = p2.next;\n        }\n        p = p.next;\n    }\n    if (p1 !== null) {\n        p.next = p1;\n    } else if (p2 !== null) {\n        p.next = p2;\n    }\n    return head.next;\n}\nfunction sort(keys, values, left, right, compare) {\n    if (left >= right) return;\n    var pivot = keys[left + right >> 1];\n    var i = left - 1;\n    var j = right + 1;\n    while(true){\n        do i++;\n        while (compare(keys[i], pivot) < 0)\n        do j--;\n        while (compare(keys[j], pivot) > 0)\n        if (i >= j) break;\n        var tmp = keys[i];\n        keys[i] = keys[j];\n        keys[j] = tmp;\n        tmp = values[i];\n        values[i] = values[j];\n        values[j] = tmp;\n    }\n    sort(keys, values, left, j, compare);\n    sort(keys, values, j + 1, right, compare);\n}\nfunction defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nvar globalContext;\nif (typeof window !== \"undefined\") {\n    globalContext = window;\n} else if (typeof self !== \"undefined\") {\n    globalContext = self;\n} else {\n    globalContext = {\n    };\n}\nif (typeof globalContext.setTimeout === \"function\") {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof globalContext.clearTimeout === \"function\") {\n    cachedClearTimeout = clearTimeout;\n}\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        return setTimeout(fun, 0);\n    }\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e2) {\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        return clearTimeout(marker);\n    }\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            return cachedClearTimeout.call(null, marker);\n        } catch (e2) {\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n    while(len){\n        currentQueue = queue;\n        queue = [];\n        while((++queueIndex) < len){\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for(var i = 1; i < arguments.length; i++){\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\nvar title = \"browser\";\nvar platform = \"browser\";\nvar browser = true;\nvar argv = [];\nvar version = \"\";\nvar versions = {\n};\nvar release = {\n};\nvar config = {\n};\nfunction noop() {\n}\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\nfunction binding(name) {\n    throw new Error(\"process.binding is not supported\");\n}\nfunction cwd() {\n    return \"/\";\n}\nfunction chdir(dir) {\n    throw new Error(\"process.chdir is not supported\");\n}\nfunction umask() {\n    return 0;\n}\nvar performance = globalContext.performance || {\n};\nvar performanceNow = performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow || function() {\n    return new Date().getTime();\n};\nfunction hrtime(previousTimestamp) {\n    var clocktime = performanceNow.call(performance) * 0.001;\n    var seconds = Math.floor(clocktime);\n    var nanoseconds = Math.floor(clocktime % 1 * 1000000000);\n    if (previousTimestamp) {\n        seconds = seconds - previousTimestamp[0];\n        nanoseconds = nanoseconds - previousTimestamp[1];\n        if (nanoseconds < 0) {\n            seconds--;\n            nanoseconds += 1000000000;\n        }\n    }\n    return [\n        seconds,\n        nanoseconds\n    ];\n}\nvar startTime = new Date();\nfunction uptime() {\n    var currentTime = new Date();\n    var dif = currentTime - startTime;\n    return dif / 1000;\n}\nvar process = {\n    nextTick,\n    title,\n    browser,\n    env: {\n        NODE_ENV: \"production\"\n    },\n    argv,\n    version,\n    versions,\n    on,\n    addListener,\n    once,\n    off,\n    removeListener,\n    removeAllListeners,\n    emit,\n    binding,\n    cwd,\n    chdir,\n    umask,\n    hrtime,\n    platform,\n    release,\n    config,\n    uptime\n};\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nvar isInBbox = function isInBbox2(bbox, point) {\n    return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\nvar getBboxOverlap = function getBboxOverlap2(b1, b2) {\n    if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null;\n    var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n    var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x;\n    var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n    var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y;\n    return {\n        ll: {\n            x: lowerX,\n            y: lowerY\n        },\n        ur: {\n            x: upperX,\n            y: upperY\n        }\n    };\n};\nvar epsilon = Number.EPSILON;\nif (epsilon === void 0) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\nvar cmp = function cmp2(a, b) {\n    if (-epsilon < a && a < epsilon) {\n        if (-epsilon < b && b < epsilon) {\n            return 0;\n        }\n    }\n    var ab = a - b;\n    if (ab * ab < EPSILON_SQ * a * b) {\n        return 0;\n    }\n    return a < b ? -1 : 1;\n};\nvar PtRounder = function() {\n    function PtRounder2() {\n        _classCallCheck(this, PtRounder2);\n        this.reset();\n    }\n    _createClass(PtRounder2, [\n        {\n            key: \"reset\",\n            value: function reset() {\n                this.xRounder = new CoordRounder();\n                this.yRounder = new CoordRounder();\n            }\n        },\n        {\n            key: \"round\",\n            value: function round(x, y) {\n                return {\n                    x: this.xRounder.round(x),\n                    y: this.yRounder.round(y)\n                };\n            }\n        }\n    ]);\n    return PtRounder2;\n}();\nvar CoordRounder = function() {\n    function CoordRounder2() {\n        _classCallCheck(this, CoordRounder2);\n        this.tree = new Tree();\n        this.round(0);\n    }\n    _createClass(CoordRounder2, [\n        {\n            key: \"round\",\n            value: function round(coord) {\n                var node = this.tree.add(coord);\n                var prevNode = this.tree.prev(node);\n                if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n                    this.tree.remove(coord);\n                    return prevNode.key;\n                }\n                var nextNode = this.tree.next(node);\n                if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n                    this.tree.remove(coord);\n                    return nextNode.key;\n                }\n                return coord;\n            }\n        }\n    ]);\n    return CoordRounder2;\n}();\nvar rounder = new PtRounder();\nvar crossProduct = function crossProduct2(a, b) {\n    return a.x * b.y - a.y * b.x;\n};\nvar dotProduct = function dotProduct2(a, b) {\n    return a.x * b.x + a.y * b.y;\n};\nvar compareVectorAngles = function compareVectorAngles2(basePt, endPt1, endPt2) {\n    var v1 = {\n        x: endPt1.x - basePt.x,\n        y: endPt1.y - basePt.y\n    };\n    var v2 = {\n        x: endPt2.x - basePt.x,\n        y: endPt2.y - basePt.y\n    };\n    var kross = crossProduct(v1, v2);\n    return cmp(kross, 0);\n};\nvar length = function length2(v) {\n    return Math.sqrt(dotProduct(v, v));\n};\nvar sineOfAngle = function sineOfAngle2(pShared, pBase, pAngle) {\n    var vBase = {\n        x: pBase.x - pShared.x,\n        y: pBase.y - pShared.y\n    };\n    var vAngle = {\n        x: pAngle.x - pShared.x,\n        y: pAngle.y - pShared.y\n    };\n    return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\nvar cosineOfAngle = function cosineOfAngle2(pShared, pBase, pAngle) {\n    var vBase = {\n        x: pBase.x - pShared.x,\n        y: pBase.y - pShared.y\n    };\n    var vAngle = {\n        x: pAngle.x - pShared.x,\n        y: pAngle.y - pShared.y\n    };\n    return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\nvar horizontalIntersection = function horizontalIntersection2(pt, v, y) {\n    if (v.y === 0) return null;\n    return {\n        x: pt.x + v.x / v.y * (y - pt.y),\n        y\n    };\n};\nvar verticalIntersection = function verticalIntersection2(pt, v, x) {\n    if (v.x === 0) return null;\n    return {\n        x,\n        y: pt.y + v.y / v.x * (x - pt.x)\n    };\n};\nvar intersection = function intersection2(pt1, v1, pt2, v2) {\n    if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n    if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n    if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n    if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y);\n    var kross = crossProduct(v1, v2);\n    if (kross == 0) return null;\n    var ve = {\n        x: pt2.x - pt1.x,\n        y: pt2.y - pt1.y\n    };\n    var d1 = crossProduct(ve, v1) / kross;\n    var d2 = crossProduct(ve, v2) / kross;\n    var x1 = pt1.x + d2 * v1.x, x2 = pt2.x + d1 * v2.x;\n    var y1 = pt1.y + d2 * v1.y, y2 = pt2.y + d1 * v2.y;\n    var x = (x1 + x2) / 2;\n    var y = (y1 + y2) / 2;\n    return {\n        x,\n        y\n    };\n};\nvar SweepEvent = function() {\n    _createClass(SweepEvent2, null, [\n        {\n            key: \"compare\",\n            value: function compare(a, b) {\n                var ptCmp = SweepEvent2.comparePoints(a.point, b.point);\n                if (ptCmp !== 0) return ptCmp;\n                if (a.point !== b.point) a.link(b);\n                if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1;\n                return Segment.compare(a.segment, b.segment);\n            }\n        },\n        {\n            key: \"comparePoints\",\n            value: function comparePoints(aPt, bPt) {\n                if (aPt.x < bPt.x) return -1;\n                if (aPt.x > bPt.x) return 1;\n                if (aPt.y < bPt.y) return -1;\n                if (aPt.y > bPt.y) return 1;\n                return 0;\n            }\n        }\n    ]);\n    function SweepEvent2(point, isLeft) {\n        _classCallCheck(this, SweepEvent2);\n        if (point.events === void 0) point.events = [\n            this\n        ];\n        else point.events.push(this);\n        this.point = point;\n        this.isLeft = isLeft;\n    }\n    _createClass(SweepEvent2, [\n        {\n            key: \"link\",\n            value: function link(other) {\n                if (other.point === this.point) {\n                    throw new Error(\"Tried to link already linked events\");\n                }\n                var otherEvents = other.point.events;\n                for(var i = 0, iMax = otherEvents.length; i < iMax; i++){\n                    var evt = otherEvents[i];\n                    this.point.events.push(evt);\n                    evt.point = this.point;\n                }\n                this.checkForConsuming();\n            }\n        },\n        {\n            key: \"checkForConsuming\",\n            value: function checkForConsuming() {\n                var numEvents = this.point.events.length;\n                for(var i = 0; i < numEvents; i++){\n                    var evt1 = this.point.events[i];\n                    if (evt1.segment.consumedBy !== void 0) continue;\n                    for(var j = i + 1; j < numEvents; j++){\n                        var evt2 = this.point.events[j];\n                        if (evt2.consumedBy !== void 0) continue;\n                        if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n                        evt1.segment.consume(evt2.segment);\n                    }\n                }\n            }\n        },\n        {\n            key: \"getAvailableLinkedEvents\",\n            value: function getAvailableLinkedEvents() {\n                var events = [];\n                for(var i = 0, iMax = this.point.events.length; i < iMax; i++){\n                    var evt = this.point.events[i];\n                    if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n                        events.push(evt);\n                    }\n                }\n                return events;\n            }\n        },\n        {\n            key: \"getLeftmostComparator\",\n            value: function getLeftmostComparator(baseEvent) {\n                var _this = this;\n                var cache = new Map();\n                var fillCache = function fillCache2(linkedEvent) {\n                    var nextEvent = linkedEvent.otherSE;\n                    cache.set(linkedEvent, {\n                        sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n                        cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n                    });\n                };\n                return function(a, b) {\n                    if (!cache.has(a)) fillCache(a);\n                    if (!cache.has(b)) fillCache(b);\n                    var _cache$get = cache.get(a), asine = _cache$get.sine, acosine = _cache$get.cosine;\n                    var _cache$get2 = cache.get(b), bsine = _cache$get2.sine, bcosine = _cache$get2.cosine;\n                    if (asine >= 0 && bsine >= 0) {\n                        if (acosine < bcosine) return 1;\n                        if (acosine > bcosine) return -1;\n                        return 0;\n                    }\n                    if (asine < 0 && bsine < 0) {\n                        if (acosine < bcosine) return -1;\n                        if (acosine > bcosine) return 1;\n                        return 0;\n                    }\n                    if (bsine < asine) return -1;\n                    if (bsine > asine) return 1;\n                    return 0;\n                };\n            }\n        }\n    ]);\n    return SweepEvent2;\n}();\nvar segmentId = 0;\nvar Segment = function() {\n    _createClass(Segment2, null, [\n        {\n            key: \"compare\",\n            value: function compare(a, b) {\n                var alx = a.leftSE.point.x;\n                var blx = b.leftSE.point.x;\n                var arx = a.rightSE.point.x;\n                var brx = b.rightSE.point.x;\n                if (brx < alx) return 1;\n                if (arx < blx) return -1;\n                var aly = a.leftSE.point.y;\n                var bly = b.leftSE.point.y;\n                var ary = a.rightSE.point.y;\n                var bry = b.rightSE.point.y;\n                if (alx < blx) {\n                    if (bly < aly && bly < ary) return 1;\n                    if (bly > aly && bly > ary) return -1;\n                    var aCmpBLeft = a.comparePoint(b.leftSE.point);\n                    if (aCmpBLeft < 0) return 1;\n                    if (aCmpBLeft > 0) return -1;\n                    var bCmpARight = b.comparePoint(a.rightSE.point);\n                    if (bCmpARight !== 0) return bCmpARight;\n                    return -1;\n                }\n                if (alx > blx) {\n                    if (aly < bly && aly < bry) return -1;\n                    if (aly > bly && aly > bry) return 1;\n                    var bCmpALeft = b.comparePoint(a.leftSE.point);\n                    if (bCmpALeft !== 0) return bCmpALeft;\n                    var aCmpBRight = a.comparePoint(b.rightSE.point);\n                    if (aCmpBRight < 0) return 1;\n                    if (aCmpBRight > 0) return -1;\n                    return 1;\n                }\n                if (aly < bly) return -1;\n                if (aly > bly) return 1;\n                if (arx < brx) {\n                    var _bCmpARight = b.comparePoint(a.rightSE.point);\n                    if (_bCmpARight !== 0) return _bCmpARight;\n                }\n                if (arx > brx) {\n                    var _aCmpBRight = a.comparePoint(b.rightSE.point);\n                    if (_aCmpBRight < 0) return 1;\n                    if (_aCmpBRight > 0) return -1;\n                }\n                if (arx !== brx) {\n                    var ay = ary - aly;\n                    var ax = arx - alx;\n                    var by = bry - bly;\n                    var bx = brx - blx;\n                    if (ay > ax && by < bx) return 1;\n                    if (ay < ax && by > bx) return -1;\n                }\n                if (arx > brx) return 1;\n                if (arx < brx) return -1;\n                if (ary < bry) return -1;\n                if (ary > bry) return 1;\n                if (a.id < b.id) return -1;\n                if (a.id > b.id) return 1;\n                return 0;\n            }\n        }\n    ]);\n    function Segment2(leftSE, rightSE, rings, windings) {\n        _classCallCheck(this, Segment2);\n        this.id = ++segmentId;\n        this.leftSE = leftSE;\n        leftSE.segment = this;\n        leftSE.otherSE = rightSE;\n        this.rightSE = rightSE;\n        rightSE.segment = this;\n        rightSE.otherSE = leftSE;\n        this.rings = rings;\n        this.windings = windings;\n    }\n    _createClass(Segment2, [\n        {\n            key: \"replaceRightSE\",\n            value: function replaceRightSE(newRightSE) {\n                this.rightSE = newRightSE;\n                this.rightSE.segment = this;\n                this.rightSE.otherSE = this.leftSE;\n                this.leftSE.otherSE = this.rightSE;\n            }\n        },\n        {\n            key: \"bbox\",\n            value: function bbox() {\n                var y1 = this.leftSE.point.y;\n                var y2 = this.rightSE.point.y;\n                return {\n                    ll: {\n                        x: this.leftSE.point.x,\n                        y: y1 < y2 ? y1 : y2\n                    },\n                    ur: {\n                        x: this.rightSE.point.x,\n                        y: y1 > y2 ? y1 : y2\n                    }\n                };\n            }\n        },\n        {\n            key: \"vector\",\n            value: function vector() {\n                return {\n                    x: this.rightSE.point.x - this.leftSE.point.x,\n                    y: this.rightSE.point.y - this.leftSE.point.y\n                };\n            }\n        },\n        {\n            key: \"isAnEndpoint\",\n            value: function isAnEndpoint(pt) {\n                return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n            }\n        },\n        {\n            key: \"comparePoint\",\n            value: function comparePoint(point) {\n                if (this.isAnEndpoint(point)) return 0;\n                var lPt = this.leftSE.point;\n                var rPt = this.rightSE.point;\n                var v = this.vector();\n                if (lPt.x === rPt.x) {\n                    if (point.x === lPt.x) return 0;\n                    return point.x < lPt.x ? 1 : -1;\n                }\n                var yDist = (point.y - lPt.y) / v.y;\n                var xFromYDist = lPt.x + yDist * v.x;\n                if (point.x === xFromYDist) return 0;\n                var xDist = (point.x - lPt.x) / v.x;\n                var yFromXDist = lPt.y + xDist * v.y;\n                if (point.y === yFromXDist) return 0;\n                return point.y < yFromXDist ? -1 : 1;\n            }\n        },\n        {\n            key: \"getIntersection\",\n            value: function getIntersection(other) {\n                var tBbox = this.bbox();\n                var oBbox = other.bbox();\n                var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n                if (bboxOverlap === null) return null;\n                var tlp = this.leftSE.point;\n                var trp = this.rightSE.point;\n                var olp = other.leftSE.point;\n                var orp = other.rightSE.point;\n                var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n                var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n                var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n                var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0;\n                if (touchesThisLSE && touchesOtherLSE) {\n                    if (touchesThisRSE && !touchesOtherRSE) return trp;\n                    if (!touchesThisRSE && touchesOtherRSE) return orp;\n                    return null;\n                }\n                if (touchesThisLSE) {\n                    if (touchesOtherRSE) {\n                        if (tlp.x === orp.x && tlp.y === orp.y) return null;\n                    }\n                    return tlp;\n                }\n                if (touchesOtherLSE) {\n                    if (touchesThisRSE) {\n                        if (trp.x === olp.x && trp.y === olp.y) return null;\n                    }\n                    return olp;\n                }\n                if (touchesThisRSE && touchesOtherRSE) return null;\n                if (touchesThisRSE) return trp;\n                if (touchesOtherRSE) return orp;\n                var pt = intersection(tlp, this.vector(), olp, other.vector());\n                if (pt === null) return null;\n                if (!isInBbox(bboxOverlap, pt)) return null;\n                return rounder.round(pt.x, pt.y);\n            }\n        },\n        {\n            key: \"split\",\n            value: function split1(point) {\n                var newEvents = [];\n                var alreadyLinked = point.events !== void 0;\n                var newLeftSE = new SweepEvent(point, true);\n                var newRightSE = new SweepEvent(point, false);\n                var oldRightSE = this.rightSE;\n                this.replaceRightSE(newRightSE);\n                newEvents.push(newRightSE);\n                newEvents.push(newLeftSE);\n                var newSeg = new Segment2(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice());\n                if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n                    newSeg.swapEvents();\n                }\n                if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n                    this.swapEvents();\n                }\n                if (alreadyLinked) {\n                    newLeftSE.checkForConsuming();\n                    newRightSE.checkForConsuming();\n                }\n                return newEvents;\n            }\n        },\n        {\n            key: \"swapEvents\",\n            value: function swapEvents() {\n                var tmpEvt = this.rightSE;\n                this.rightSE = this.leftSE;\n                this.leftSE = tmpEvt;\n                this.leftSE.isLeft = true;\n                this.rightSE.isLeft = false;\n                for(var i = 0, iMax = this.windings.length; i < iMax; i++){\n                    this.windings[i] *= -1;\n                }\n            }\n        },\n        {\n            key: \"consume\",\n            value: function consume(other) {\n                var consumer = this;\n                var consumee = other;\n                while(consumer.consumedBy){\n                    consumer = consumer.consumedBy;\n                }\n                while(consumee.consumedBy){\n                    consumee = consumee.consumedBy;\n                }\n                var cmp3 = Segment2.compare(consumer, consumee);\n                if (cmp3 === 0) return;\n                if (cmp3 > 0) {\n                    var tmp = consumer;\n                    consumer = consumee;\n                    consumee = tmp;\n                }\n                if (consumer.prev === consumee) {\n                    var _tmp = consumer;\n                    consumer = consumee;\n                    consumee = _tmp;\n                }\n                for(var i = 0, iMax = consumee.rings.length; i < iMax; i++){\n                    var ring = consumee.rings[i];\n                    var winding = consumee.windings[i];\n                    var index2 = consumer.rings.indexOf(ring);\n                    if (index2 === -1) {\n                        consumer.rings.push(ring);\n                        consumer.windings.push(winding);\n                    } else consumer.windings[index2] += winding;\n                }\n                consumee.rings = null;\n                consumee.windings = null;\n                consumee.consumedBy = consumer;\n                consumee.leftSE.consumedBy = consumer.leftSE;\n                consumee.rightSE.consumedBy = consumer.rightSE;\n            }\n        },\n        {\n            key: \"prevInResult\",\n            value: function prevInResult() {\n                if (this._prevInResult !== void 0) return this._prevInResult;\n                if (!this.prev) this._prevInResult = null;\n                else if (this.prev.isInResult()) this._prevInResult = this.prev;\n                else this._prevInResult = this.prev.prevInResult();\n                return this._prevInResult;\n            }\n        },\n        {\n            key: \"beforeState\",\n            value: function beforeState() {\n                if (this._beforeState !== void 0) return this._beforeState;\n                if (!this.prev) this._beforeState = {\n                    rings: [],\n                    windings: [],\n                    multiPolys: []\n                };\n                else {\n                    var seg = this.prev.consumedBy || this.prev;\n                    this._beforeState = seg.afterState();\n                }\n                return this._beforeState;\n            }\n        },\n        {\n            key: \"afterState\",\n            value: function afterState() {\n                if (this._afterState !== void 0) return this._afterState;\n                var beforeState = this.beforeState();\n                this._afterState = {\n                    rings: beforeState.rings.slice(0),\n                    windings: beforeState.windings.slice(0),\n                    multiPolys: []\n                };\n                var ringsAfter = this._afterState.rings;\n                var windingsAfter = this._afterState.windings;\n                var mpsAfter = this._afterState.multiPolys;\n                for(var i = 0, iMax = this.rings.length; i < iMax; i++){\n                    var ring = this.rings[i];\n                    var winding = this.windings[i];\n                    var index2 = ringsAfter.indexOf(ring);\n                    if (index2 === -1) {\n                        ringsAfter.push(ring);\n                        windingsAfter.push(winding);\n                    } else windingsAfter[index2] += winding;\n                }\n                var polysAfter = [];\n                var polysExclude = [];\n                for(var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++){\n                    if (windingsAfter[_i] === 0) continue;\n                    var _ring = ringsAfter[_i];\n                    var poly = _ring.poly;\n                    if (polysExclude.indexOf(poly) !== -1) continue;\n                    if (_ring.isExterior) polysAfter.push(poly);\n                    else {\n                        if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n                        var _index = polysAfter.indexOf(_ring.poly);\n                        if (_index !== -1) polysAfter.splice(_index, 1);\n                    }\n                }\n                for(var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++){\n                    var mp = polysAfter[_i2].multiPoly;\n                    if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n                }\n                return this._afterState;\n            }\n        },\n        {\n            key: \"isInResult\",\n            value: function isInResult() {\n                if (this.consumedBy) return false;\n                if (this._isInResult !== void 0) return this._isInResult;\n                var mpsBefore = this.beforeState().multiPolys;\n                var mpsAfter = this.afterState().multiPolys;\n                switch(operation.type){\n                    case \"union\":\n                        {\n                            var noBefores = mpsBefore.length === 0;\n                            var noAfters = mpsAfter.length === 0;\n                            this._isInResult = noBefores !== noAfters;\n                            break;\n                        }\n                    case \"intersection\":\n                        {\n                            var least;\n                            var most;\n                            if (mpsBefore.length < mpsAfter.length) {\n                                least = mpsBefore.length;\n                                most = mpsAfter.length;\n                            } else {\n                                least = mpsAfter.length;\n                                most = mpsBefore.length;\n                            }\n                            this._isInResult = most === operation.numMultiPolys && least < most;\n                            break;\n                        }\n                    case \"xor\":\n                        {\n                            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n                            this._isInResult = diff % 2 === 1;\n                            break;\n                        }\n                    case \"difference\":\n                        {\n                            var isJustSubject = function isJustSubject2(mps) {\n                                return mps.length === 1 && mps[0].isSubject;\n                            };\n                            this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n                            break;\n                        }\n                    default:\n                        throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n                }\n                return this._isInResult;\n            }\n        }\n    ], [\n        {\n            key: \"fromRing\",\n            value: function fromRing(pt1, pt2, ring) {\n                var leftPt, rightPt, winding;\n                var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n                if (cmpPts < 0) {\n                    leftPt = pt1;\n                    rightPt = pt2;\n                    winding = 1;\n                } else if (cmpPts > 0) {\n                    leftPt = pt2;\n                    rightPt = pt1;\n                    winding = -1;\n                } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n                var leftSE = new SweepEvent(leftPt, true);\n                var rightSE = new SweepEvent(rightPt, false);\n                return new Segment2(leftSE, rightSE, [\n                    ring\n                ], [\n                    winding\n                ]);\n            }\n        }\n    ]);\n    return Segment2;\n}();\nvar RingIn = function() {\n    function RingIn2(geomRing, poly, isExterior) {\n        _classCallCheck(this, RingIn2);\n        if (!Array.isArray(geomRing) || geomRing.length === 0) {\n            throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n        }\n        this.poly = poly;\n        this.isExterior = isExterior;\n        this.segments = [];\n        if (typeof geomRing[0][0] !== \"number\" || typeof geomRing[0][1] !== \"number\") {\n            throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n        }\n        var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n        this.bbox = {\n            ll: {\n                x: firstPoint.x,\n                y: firstPoint.y\n            },\n            ur: {\n                x: firstPoint.x,\n                y: firstPoint.y\n            }\n        };\n        var prevPoint = firstPoint;\n        for(var i = 1, iMax = geomRing.length; i < iMax; i++){\n            if (typeof geomRing[i][0] !== \"number\" || typeof geomRing[i][1] !== \"number\") {\n                throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n            }\n            var point = rounder.round(geomRing[i][0], geomRing[i][1]);\n            if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n            this.segments.push(Segment.fromRing(prevPoint, point, this));\n            if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n            if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n            if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n            if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n            prevPoint = point;\n        }\n        if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n            this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n        }\n    }\n    _createClass(RingIn2, [\n        {\n            key: \"getSweepEvents\",\n            value: function getSweepEvents() {\n                var sweepEvents = [];\n                for(var i = 0, iMax = this.segments.length; i < iMax; i++){\n                    var segment = this.segments[i];\n                    sweepEvents.push(segment.leftSE);\n                    sweepEvents.push(segment.rightSE);\n                }\n                return sweepEvents;\n            }\n        }\n    ]);\n    return RingIn2;\n}();\nvar PolyIn = function() {\n    function PolyIn2(geomPoly, multiPoly) {\n        _classCallCheck(this, PolyIn2);\n        if (!Array.isArray(geomPoly)) {\n            throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n        }\n        this.exteriorRing = new RingIn(geomPoly[0], this, true);\n        this.bbox = {\n            ll: {\n                x: this.exteriorRing.bbox.ll.x,\n                y: this.exteriorRing.bbox.ll.y\n            },\n            ur: {\n                x: this.exteriorRing.bbox.ur.x,\n                y: this.exteriorRing.bbox.ur.y\n            }\n        };\n        this.interiorRings = [];\n        for(var i = 1, iMax = geomPoly.length; i < iMax; i++){\n            var ring = new RingIn(geomPoly[i], this, false);\n            if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n            if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n            if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n            if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n            this.interiorRings.push(ring);\n        }\n        this.multiPoly = multiPoly;\n    }\n    _createClass(PolyIn2, [\n        {\n            key: \"getSweepEvents\",\n            value: function getSweepEvents() {\n                var sweepEvents = this.exteriorRing.getSweepEvents();\n                for(var i = 0, iMax = this.interiorRings.length; i < iMax; i++){\n                    var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n                    for(var j = 0, jMax = ringSweepEvents.length; j < jMax; j++){\n                        sweepEvents.push(ringSweepEvents[j]);\n                    }\n                }\n                return sweepEvents;\n            }\n        }\n    ]);\n    return PolyIn2;\n}();\nvar MultiPolyIn = function() {\n    function MultiPolyIn2(geom, isSubject) {\n        _classCallCheck(this, MultiPolyIn2);\n        if (!Array.isArray(geom)) {\n            throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n        }\n        try {\n            if (typeof geom[0][0][0] === \"number\") geom = [\n                geom\n            ];\n        } catch (ex) {\n        }\n        this.polys = [];\n        this.bbox = {\n            ll: {\n                x: Number.POSITIVE_INFINITY,\n                y: Number.POSITIVE_INFINITY\n            },\n            ur: {\n                x: Number.NEGATIVE_INFINITY,\n                y: Number.NEGATIVE_INFINITY\n            }\n        };\n        for(var i = 0, iMax = geom.length; i < iMax; i++){\n            var poly = new PolyIn(geom[i], this);\n            if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n            if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n            if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n            if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n            this.polys.push(poly);\n        }\n        this.isSubject = isSubject;\n    }\n    _createClass(MultiPolyIn2, [\n        {\n            key: \"getSweepEvents\",\n            value: function getSweepEvents() {\n                var sweepEvents = [];\n                for(var i = 0, iMax = this.polys.length; i < iMax; i++){\n                    var polySweepEvents = this.polys[i].getSweepEvents();\n                    for(var j = 0, jMax = polySweepEvents.length; j < jMax; j++){\n                        sweepEvents.push(polySweepEvents[j]);\n                    }\n                }\n                return sweepEvents;\n            }\n        }\n    ]);\n    return MultiPolyIn2;\n}();\nvar RingOut = function() {\n    _createClass(RingOut2, null, [\n        {\n            key: \"factory\",\n            value: function factory(allSegments) {\n                var ringsOut = [];\n                for(var i = 0, iMax = allSegments.length; i < iMax; i++){\n                    var segment = allSegments[i];\n                    if (!segment.isInResult() || segment.ringOut) continue;\n                    var prevEvent = null;\n                    var event = segment.leftSE;\n                    var nextEvent = segment.rightSE;\n                    var events = [\n                        event\n                    ];\n                    var startingPoint = event.point;\n                    var intersectionLEs = [];\n                    while(true){\n                        prevEvent = event;\n                        event = nextEvent;\n                        events.push(event);\n                        if (event.point === startingPoint) break;\n                        while(true){\n                            var availableLEs = event.getAvailableLinkedEvents();\n                            if (availableLEs.length === 0) {\n                                var firstPt = events[0].point;\n                                var lastPt = events[events.length - 1].point;\n                                throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n                            }\n                            if (availableLEs.length === 1) {\n                                nextEvent = availableLEs[0].otherSE;\n                                break;\n                            }\n                            var indexLE = null;\n                            for(var j = 0, jMax = intersectionLEs.length; j < jMax; j++){\n                                if (intersectionLEs[j].point === event.point) {\n                                    indexLE = j;\n                                    break;\n                                }\n                            }\n                            if (indexLE !== null) {\n                                var intersectionLE = intersectionLEs.splice(indexLE)[0];\n                                var ringEvents = events.splice(intersectionLE.index);\n                                ringEvents.unshift(ringEvents[0].otherSE);\n                                ringsOut.push(new RingOut2(ringEvents.reverse()));\n                                continue;\n                            }\n                            intersectionLEs.push({\n                                index: events.length,\n                                point: event.point\n                            });\n                            var comparator = event.getLeftmostComparator(prevEvent);\n                            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n                            break;\n                        }\n                    }\n                    ringsOut.push(new RingOut2(events));\n                }\n                return ringsOut;\n            }\n        }\n    ]);\n    function RingOut2(events) {\n        _classCallCheck(this, RingOut2);\n        this.events = events;\n        for(var i = 0, iMax = events.length; i < iMax; i++){\n            events[i].segment.ringOut = this;\n        }\n        this.poly = null;\n    }\n    _createClass(RingOut2, [\n        {\n            key: \"getGeom\",\n            value: function getGeom() {\n                var prevPt = this.events[0].point;\n                var points = [\n                    prevPt\n                ];\n                for(var i = 1, iMax = this.events.length - 1; i < iMax; i++){\n                    var _pt = this.events[i].point;\n                    var _nextPt = this.events[i + 1].point;\n                    if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n                    points.push(_pt);\n                    prevPt = _pt;\n                }\n                if (points.length === 1) return null;\n                var pt = points[0];\n                var nextPt = points[1];\n                if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n                points.push(points[0]);\n                var step = this.isExteriorRing() ? 1 : -1;\n                var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n                var iEnd = this.isExteriorRing() ? points.length : -1;\n                var orderedPoints = [];\n                for(var _i = iStart; _i != iEnd; _i += step){\n                    orderedPoints.push([\n                        points[_i].x,\n                        points[_i].y\n                    ]);\n                }\n                return orderedPoints;\n            }\n        },\n        {\n            key: \"isExteriorRing\",\n            value: function isExteriorRing() {\n                if (this._isExteriorRing === void 0) {\n                    var enclosing = this.enclosingRing();\n                    this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n                }\n                return this._isExteriorRing;\n            }\n        },\n        {\n            key: \"enclosingRing\",\n            value: function enclosingRing() {\n                if (this._enclosingRing === void 0) {\n                    this._enclosingRing = this._calcEnclosingRing();\n                }\n                return this._enclosingRing;\n            }\n        },\n        {\n            key: \"_calcEnclosingRing\",\n            value: function _calcEnclosingRing() {\n                var leftMostEvt = this.events[0];\n                for(var i = 1, iMax = this.events.length; i < iMax; i++){\n                    var evt = this.events[i];\n                    if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n                }\n                var prevSeg = leftMostEvt.segment.prevInResult();\n                var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n                while(true){\n                    if (!prevSeg) return null;\n                    if (!prevPrevSeg) return prevSeg.ringOut;\n                    if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n                        if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n                            return prevSeg.ringOut;\n                        } else return prevSeg.ringOut.enclosingRing();\n                    }\n                    prevSeg = prevPrevSeg.prevInResult();\n                    prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n                }\n            }\n        }\n    ]);\n    return RingOut2;\n}();\nvar PolyOut = function() {\n    function PolyOut2(exteriorRing) {\n        _classCallCheck(this, PolyOut2);\n        this.exteriorRing = exteriorRing;\n        exteriorRing.poly = this;\n        this.interiorRings = [];\n    }\n    _createClass(PolyOut2, [\n        {\n            key: \"addInterior\",\n            value: function addInterior(ring) {\n                this.interiorRings.push(ring);\n                ring.poly = this;\n            }\n        },\n        {\n            key: \"getGeom\",\n            value: function getGeom() {\n                var geom = [\n                    this.exteriorRing.getGeom()\n                ];\n                if (geom[0] === null) return null;\n                for(var i = 0, iMax = this.interiorRings.length; i < iMax; i++){\n                    var ringGeom = this.interiorRings[i].getGeom();\n                    if (ringGeom === null) continue;\n                    geom.push(ringGeom);\n                }\n                return geom;\n            }\n        }\n    ]);\n    return PolyOut2;\n}();\nvar MultiPolyOut = function() {\n    function MultiPolyOut2(rings) {\n        _classCallCheck(this, MultiPolyOut2);\n        this.rings = rings;\n        this.polys = this._composePolys(rings);\n    }\n    _createClass(MultiPolyOut2, [\n        {\n            key: \"getGeom\",\n            value: function getGeom() {\n                var geom = [];\n                for(var i = 0, iMax = this.polys.length; i < iMax; i++){\n                    var polyGeom = this.polys[i].getGeom();\n                    if (polyGeom === null) continue;\n                    geom.push(polyGeom);\n                }\n                return geom;\n            }\n        },\n        {\n            key: \"_composePolys\",\n            value: function _composePolys(rings) {\n                var polys = [];\n                for(var i = 0, iMax = rings.length; i < iMax; i++){\n                    var ring = rings[i];\n                    if (ring.poly) continue;\n                    if (ring.isExteriorRing()) polys.push(new PolyOut(ring));\n                    else {\n                        var enclosingRing = ring.enclosingRing();\n                        if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n                        enclosingRing.poly.addInterior(ring);\n                    }\n                }\n                return polys;\n            }\n        }\n    ]);\n    return MultiPolyOut2;\n}();\nvar SweepLine = function() {\n    function SweepLine2(queue2) {\n        var comparator = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Segment.compare;\n        _classCallCheck(this, SweepLine2);\n        this.queue = queue2;\n        this.tree = new Tree(comparator);\n        this.segments = [];\n    }\n    _createClass(SweepLine2, [\n        {\n            key: \"process\",\n            value: function process2(event) {\n                var segment = event.segment;\n                var newEvents = [];\n                if (event.consumedBy) {\n                    if (event.isLeft) this.queue.remove(event.otherSE);\n                    else this.tree.remove(segment);\n                    return newEvents;\n                }\n                var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n                if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + \"in SweepLine tree. Please submit a bug report.\");\n                var prevNode = node;\n                var nextNode = node;\n                var prevSeg = void 0;\n                var nextSeg = void 0;\n                while(prevSeg === void 0){\n                    prevNode = this.tree.prev(prevNode);\n                    if (prevNode === null) prevSeg = null;\n                    else if (prevNode.key.consumedBy === void 0) prevSeg = prevNode.key;\n                }\n                while(nextSeg === void 0){\n                    nextNode = this.tree.next(nextNode);\n                    if (nextNode === null) nextSeg = null;\n                    else if (nextNode.key.consumedBy === void 0) nextSeg = nextNode.key;\n                }\n                if (event.isLeft) {\n                    var prevMySplitter = null;\n                    if (prevSeg) {\n                        var prevInter = prevSeg.getIntersection(segment);\n                        if (prevInter !== null) {\n                            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n                            if (!prevSeg.isAnEndpoint(prevInter)) {\n                                var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n                                for(var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++){\n                                    newEvents.push(newEventsFromSplit[i]);\n                                }\n                            }\n                        }\n                    }\n                    var nextMySplitter = null;\n                    if (nextSeg) {\n                        var nextInter = nextSeg.getIntersection(segment);\n                        if (nextInter !== null) {\n                            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n                            if (!nextSeg.isAnEndpoint(nextInter)) {\n                                var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n                                for(var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++){\n                                    newEvents.push(_newEventsFromSplit[_i]);\n                                }\n                            }\n                        }\n                    }\n                    if (prevMySplitter !== null || nextMySplitter !== null) {\n                        var mySplitter = null;\n                        if (prevMySplitter === null) mySplitter = nextMySplitter;\n                        else if (nextMySplitter === null) mySplitter = prevMySplitter;\n                        else {\n                            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n                            mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n                        }\n                        this.queue.remove(segment.rightSE);\n                        newEvents.push(segment.rightSE);\n                        var _newEventsFromSplit2 = segment.split(mySplitter);\n                        for(var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++){\n                            newEvents.push(_newEventsFromSplit2[_i2]);\n                        }\n                    }\n                    if (newEvents.length > 0) {\n                        this.tree.remove(segment);\n                        newEvents.push(event);\n                    } else {\n                        this.segments.push(segment);\n                        segment.prev = prevSeg;\n                    }\n                } else {\n                    if (prevSeg && nextSeg) {\n                        var inter = prevSeg.getIntersection(nextSeg);\n                        if (inter !== null) {\n                            if (!prevSeg.isAnEndpoint(inter)) {\n                                var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n                                for(var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++){\n                                    newEvents.push(_newEventsFromSplit3[_i3]);\n                                }\n                            }\n                            if (!nextSeg.isAnEndpoint(inter)) {\n                                var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n                                for(var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++){\n                                    newEvents.push(_newEventsFromSplit4[_i4]);\n                                }\n                            }\n                        }\n                    }\n                    this.tree.remove(segment);\n                }\n                return newEvents;\n            }\n        },\n        {\n            key: \"_splitSafely\",\n            value: function _splitSafely(seg, pt) {\n                this.tree.remove(seg);\n                var rightSE = seg.rightSE;\n                this.queue.remove(rightSE);\n                var newEvents = seg.split(pt);\n                newEvents.push(rightSE);\n                if (seg.consumedBy === void 0) this.tree.insert(seg);\n                return newEvents;\n            }\n        }\n    ]);\n    return SweepLine2;\n}();\nvar POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== \"undefined\" && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\nvar POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== \"undefined\" && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\nvar Operation = function() {\n    function Operation2() {\n        _classCallCheck(this, Operation2);\n    }\n    _createClass(Operation2, [\n        {\n            key: \"run\",\n            value: function run(type, geom, moreGeoms) {\n                operation.type = type;\n                rounder.reset();\n                var multipolys = [\n                    new MultiPolyIn(geom, true)\n                ];\n                for(var i = 0, iMax = moreGeoms.length; i < iMax; i++){\n                    multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n                }\n                operation.numMultiPolys = multipolys.length;\n                if (operation.type === \"difference\") {\n                    var subject = multipolys[0];\n                    var _i = 1;\n                    while(_i < multipolys.length){\n                        if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;\n                        else multipolys.splice(_i, 1);\n                    }\n                }\n                if (operation.type === \"intersection\") {\n                    for(var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++){\n                        var mpA = multipolys[_i2];\n                        for(var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++){\n                            if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n                        }\n                    }\n                }\n                var queue2 = new Tree(SweepEvent.compare);\n                for(var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++){\n                    var sweepEvents = multipolys[_i3].getSweepEvents();\n                    for(var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++){\n                        queue2.insert(sweepEvents[_j]);\n                        if (queue2.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n                            throw new Error(\"Infinite loop when putting segment endpoints in a priority queue (queue size too big). Please file a bug report.\");\n                        }\n                    }\n                }\n                var sweepLine = new SweepLine(queue2);\n                var prevQueueSize = queue2.size;\n                var node = queue2.pop();\n                while(node){\n                    var evt = node.key;\n                    if (queue2.size === prevQueueSize) {\n                        var seg = evt.segment;\n                        throw new Error(\"Unable to pop() \".concat(evt.isLeft ? \"left\" : \"right\", \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + \"Please file a bug report.\");\n                    }\n                    if (queue2.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n                        throw new Error(\"Infinite loop when passing sweep line over endpoints (queue size too big). Please file a bug report.\");\n                    }\n                    if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n                        throw new Error(\"Infinite loop when passing sweep line over endpoints (too many sweep line segments). Please file a bug report.\");\n                    }\n                    var newEvents = sweepLine.process(evt);\n                    for(var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++){\n                        var _evt = newEvents[_i4];\n                        if (_evt.consumedBy === void 0) queue2.insert(_evt);\n                    }\n                    prevQueueSize = queue2.size;\n                    node = queue2.pop();\n                }\n                rounder.reset();\n                var ringsOut = RingOut.factory(sweepLine.segments);\n                var result = new MultiPolyOut(ringsOut);\n                return result.getGeom();\n            }\n        }\n    ]);\n    return Operation2;\n}();\nvar operation = new Operation();\nvar union = function union2(geom) {\n    for(var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        moreGeoms[_key - 1] = arguments[_key];\n    }\n    return operation.run(\"union\", geom, moreGeoms);\n};\nvar intersection$1 = function intersection3(geom) {\n    for(var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n        moreGeoms[_key2 - 1] = arguments[_key2];\n    }\n    return operation.run(\"intersection\", geom, moreGeoms);\n};\nvar xor = function xor2(geom) {\n    for(var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++){\n        moreGeoms[_key3 - 1] = arguments[_key3];\n    }\n    return operation.run(\"xor\", geom, moreGeoms);\n};\nvar difference = function difference2(subjectGeom) {\n    for(var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++){\n        clippingGeoms[_key4 - 1] = arguments[_key4];\n    }\n    return operation.run(\"difference\", subjectGeom, clippingGeoms);\n};\nvar index = {\n    union,\n    intersection: intersection$1,\n    xor,\n    difference\n};\nlet System, __instantiateAsync, __instantiate;\n(()=>{\n    const r = new Map();\n    System = {\n        register (id, d, f) {\n            r.set(id, {\n                d,\n                f,\n                exp: {\n                }\n            });\n        }\n    };\n    async function dI(mid, src) {\n        let id = mid.replace(/\\.\\w+$/i, \"\");\n        if (id.includes(\"./\")) {\n            const [o, ...ia] = id.split(\"/\").reverse(), [, ...sa] = src.split(\"/\").reverse(), oa = [\n                o\n            ];\n            let s = 0, i;\n            while(i = ia.shift()){\n                if (i === \"..\") s++;\n                else if (i === \".\") break;\n                else oa.push(i);\n            }\n            if (s < sa.length) oa.push(...sa.slice(s));\n            id = oa.reverse().join(\"/\");\n        }\n        return r.has(id) ? gExpA(id) : import(mid);\n    }\n    function gC(id, main) {\n        return {\n            id,\n            import: (m)=>dI(m, id)\n            ,\n            meta: {\n                url: id,\n                main\n            }\n        };\n    }\n    function gE(exp) {\n        return (id, v)=>{\n            v = typeof id === \"string\" ? {\n                [id]: v\n            } : id;\n            for (const [id1, value] of Object.entries(v)){\n                Object.defineProperty(exp, id1, {\n                    value,\n                    writable: true,\n                    enumerable: true\n                });\n            }\n        };\n    }\n    function rF(main) {\n        for (const [id, m] of r.entries()){\n            const { f , exp  } = m;\n            const { execute: e , setters: s  } = f(gE(exp), gC(id, id === main));\n            delete m.f;\n            m.e = e;\n            m.s = s;\n        }\n    }\n    async function gExpA(id) {\n        if (!r.has(id)) return;\n        const m = r.get(id);\n        if (m.s) {\n            const { d , e , s  } = m;\n            delete m.s;\n            delete m.e;\n            for(let i = 0; i < s.length; i++)s[i](await gExpA(d[i]));\n            const r1 = e();\n            if (r1) await r1;\n        }\n        return m.exp;\n    }\n    function gExp(id) {\n        if (!r.has(id)) return;\n        const m = r.get(id);\n        if (m.s) {\n            const { d , e , s  } = m;\n            delete m.s;\n            delete m.e;\n            for(let i = 0; i < s.length; i++)s[i](gExp(d[i]));\n            e();\n        }\n        return m.exp;\n    }\n    __instantiateAsync = async (m)=>{\n        System = __instantiateAsync = __instantiate = undefined;\n        rF(m);\n        return gExpA(m);\n    };\n    __instantiate = (m)=>{\n        System = __instantiateAsync = __instantiate = undefined;\n        rF(m);\n        return gExp(m);\n    };\n})();\nSystem.register(\"-/clipper-lib@v6.4.2-JisZmmhC7gDAFmHQLYDu/dist=es2020/clipper-lib\", [], function(exports_1, context_1) {\n    \"use strict\";\n    var clipper, __esModule;\n    var __moduleName = context_1 && context_1.id;\n    function createCommonjsModule(fn, basedir, module) {\n        return module = {\n            path: basedir,\n            exports: {\n            },\n            require: function(path, base) {\n                return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n            }\n        }, fn(module, module.exports), module.exports;\n    }\n    function commonjsRequire() {\n        throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n    }\n    return {\n        setters: [],\n        execute: function() {\n            clipper = createCommonjsModule(function(module) {\n                (function() {\n                    var ClipperLib = {\n                    };\n                    ClipperLib.version = \"6.4.2.2\";\n                    ClipperLib.use_lines = true;\n                    ClipperLib.use_xyz = false;\n                    var isNode = false;\n                    if (module.exports) {\n                        module.exports = ClipperLib;\n                        isNode = true;\n                    } else {\n                        if (typeof document !== \"undefined\") {\n                            window.ClipperLib = ClipperLib;\n                        } else {\n                            self[\"ClipperLib\"] = ClipperLib;\n                        }\n                    }\n                    var navigator_appName;\n                    if (!isNode) {\n                        var nav = navigator.userAgent.toString().toLowerCase();\n                        navigator_appName = navigator.appName;\n                    } else {\n                        var nav = \"chrome\";\n                        navigator_appName = \"Netscape\";\n                    }\n                    var browser1 = {\n                    };\n                    if (nav.indexOf(\"chrome\") != -1 && nav.indexOf(\"chromium\") == -1) {\n                        browser1.chrome = 1;\n                    } else {\n                        browser1.chrome = 0;\n                    }\n                    if (nav.indexOf(\"chromium\") != -1) {\n                        browser1.chromium = 1;\n                    } else {\n                        browser1.chromium = 0;\n                    }\n                    if (nav.indexOf(\"safari\") != -1 && nav.indexOf(\"chrome\") == -1 && nav.indexOf(\"chromium\") == -1) {\n                        browser1.safari = 1;\n                    } else {\n                        browser1.safari = 0;\n                    }\n                    if (nav.indexOf(\"firefox\") != -1) {\n                        browser1.firefox = 1;\n                    } else {\n                        browser1.firefox = 0;\n                    }\n                    if (nav.indexOf(\"firefox/17\") != -1) {\n                        browser1.firefox17 = 1;\n                    } else {\n                        browser1.firefox17 = 0;\n                    }\n                    if (nav.indexOf(\"firefox/15\") != -1) {\n                        browser1.firefox15 = 1;\n                    } else {\n                        browser1.firefox15 = 0;\n                    }\n                    if (nav.indexOf(\"firefox/3\") != -1) {\n                        browser1.firefox3 = 1;\n                    } else {\n                        browser1.firefox3 = 0;\n                    }\n                    if (nav.indexOf(\"opera\") != -1) {\n                        browser1.opera = 1;\n                    } else {\n                        browser1.opera = 0;\n                    }\n                    if (nav.indexOf(\"msie 10\") != -1) {\n                        browser1.msie10 = 1;\n                    } else {\n                        browser1.msie10 = 0;\n                    }\n                    if (nav.indexOf(\"msie 9\") != -1) {\n                        browser1.msie9 = 1;\n                    } else {\n                        browser1.msie9 = 0;\n                    }\n                    if (nav.indexOf(\"msie 8\") != -1) {\n                        browser1.msie8 = 1;\n                    } else {\n                        browser1.msie8 = 0;\n                    }\n                    if (nav.indexOf(\"msie 7\") != -1) {\n                        browser1.msie7 = 1;\n                    } else {\n                        browser1.msie7 = 0;\n                    }\n                    if (nav.indexOf(\"msie \") != -1) {\n                        browser1.msie = 1;\n                    } else {\n                        browser1.msie = 0;\n                    }\n                    ClipperLib.biginteger_used = null;\n                    var dbits;\n                    function BigInteger(a, b, c) {\n                        ClipperLib.biginteger_used = 1;\n                        if (a != null) {\n                            if (\"number\" == typeof a && \"undefined\" == typeof b) {\n                                this.fromInt(a);\n                            } else if (\"number\" == typeof a) {\n                                this.fromNumber(a, b, c);\n                            } else if (b == null && \"string\" != typeof a) {\n                                this.fromString(a, 256);\n                            } else {\n                                this.fromString(a, b);\n                            }\n                        }\n                    }\n                    function nbi() {\n                        return new BigInteger(null, undefined, undefined);\n                    }\n                    function am1(i, x, w, j, c, n) {\n                        while((--n) >= 0){\n                            var v = x * this[i++] + w[j] + c;\n                            c = Math.floor(v / 67108864);\n                            w[j++] = v & 67108863;\n                        }\n                        return c;\n                    }\n                    function am2(i, x, w, j, c, n) {\n                        var xl = x & 32767, xh = x >> 15;\n                        while((--n) >= 0){\n                            var l = this[i] & 32767;\n                            var h = this[i++] >> 15;\n                            var m = xh * l + h * xl;\n                            l = xl * l + ((m & 32767) << 15) + w[j] + (c & 1073741823);\n                            c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n                            w[j++] = l & 1073741823;\n                        }\n                        return c;\n                    }\n                    function am3(i, x, w, j, c, n) {\n                        var xl = x & 16383, xh = x >> 14;\n                        while((--n) >= 0){\n                            var l = this[i] & 16383;\n                            var h = this[i++] >> 14;\n                            var m = xh * l + h * xl;\n                            l = xl * l + ((m & 16383) << 14) + w[j] + c;\n                            c = (l >> 28) + (m >> 14) + xh * h;\n                            w[j++] = l & 268435455;\n                        }\n                        return c;\n                    }\n                    if (navigator_appName == \"Microsoft Internet Explorer\") {\n                        BigInteger.prototype.am = am2;\n                        dbits = 30;\n                    } else if (navigator_appName != \"Netscape\") {\n                        BigInteger.prototype.am = am1;\n                        dbits = 26;\n                    } else {\n                        BigInteger.prototype.am = am3;\n                        dbits = 28;\n                    }\n                    BigInteger.prototype.DB = dbits;\n                    BigInteger.prototype.DM = (1 << dbits) - 1;\n                    BigInteger.prototype.DV = 1 << dbits;\n                    var BI_FP = 52;\n                    BigInteger.prototype.FV = Math.pow(2, BI_FP);\n                    BigInteger.prototype.F1 = BI_FP - dbits;\n                    BigInteger.prototype.F2 = 2 * dbits - BI_FP;\n                    var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n                    var BI_RC = new Array();\n                    var rr, vv;\n                    rr = \"0\".charCodeAt(0);\n                    for(vv = 0; vv <= 9; ++vv){\n                        BI_RC[rr++] = vv;\n                    }\n                    rr = \"a\".charCodeAt(0);\n                    for(vv = 10; vv < 36; ++vv){\n                        BI_RC[rr++] = vv;\n                    }\n                    rr = \"A\".charCodeAt(0);\n                    for(vv = 10; vv < 36; ++vv){\n                        BI_RC[rr++] = vv;\n                    }\n                    function int2char(n) {\n                        return BI_RM.charAt(n);\n                    }\n                    function intAt(s, i) {\n                        var c = BI_RC[s.charCodeAt(i)];\n                        return c == null ? -1 : c;\n                    }\n                    function bnpCopyTo(r) {\n                        for(var i = this.t - 1; i >= 0; --i){\n                            r[i] = this[i];\n                        }\n                        r.t = this.t;\n                        r.s = this.s;\n                    }\n                    function bnpFromInt(x) {\n                        this.t = 1;\n                        this.s = x < 0 ? -1 : 0;\n                        if (x > 0) {\n                            this[0] = x;\n                        } else if (x < -1) {\n                            this[0] = x + this.DV;\n                        } else {\n                            this.t = 0;\n                        }\n                    }\n                    function nbv(i) {\n                        var r = nbi();\n                        r.fromInt(i);\n                        return r;\n                    }\n                    function bnpFromString(s, b) {\n                        var k;\n                        if (b == 16) {\n                            k = 4;\n                        } else if (b == 8) {\n                            k = 3;\n                        } else if (b == 256) {\n                            k = 8;\n                        } else if (b == 2) {\n                            k = 1;\n                        } else if (b == 32) {\n                            k = 5;\n                        } else if (b == 4) {\n                            k = 2;\n                        } else {\n                            this.fromRadix(s, b);\n                            return;\n                        }\n                        this.t = 0;\n                        this.s = 0;\n                        var i = s.length, mi = false, sh = 0;\n                        while((--i) >= 0){\n                            var x = k == 8 ? s[i] & 255 : intAt(s, i);\n                            if (x < 0) {\n                                if (s.charAt(i) == \"-\") {\n                                    mi = true;\n                                }\n                                continue;\n                            }\n                            mi = false;\n                            if (sh == 0) {\n                                this[this.t++] = x;\n                            } else if (sh + k > this.DB) {\n                                this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n                                this[this.t++] = x >> this.DB - sh;\n                            } else {\n                                this[this.t - 1] |= x << sh;\n                            }\n                            sh += k;\n                            if (sh >= this.DB) {\n                                sh -= this.DB;\n                            }\n                        }\n                        if (k == 8 && (s[0] & 128) != 0) {\n                            this.s = -1;\n                            if (sh > 0) {\n                                this[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;\n                            }\n                        }\n                        this.clamp();\n                        if (mi) {\n                            BigInteger.ZERO.subTo(this, this);\n                        }\n                    }\n                    function bnpClamp() {\n                        var c = this.s & this.DM;\n                        while(this.t > 0 && this[this.t - 1] == c){\n                            --this.t;\n                        }\n                    }\n                    function bnToString(b) {\n                        if (this.s < 0) {\n                            return \"-\" + this.negate().toString(b);\n                        }\n                        var k;\n                        if (b == 16) {\n                            k = 4;\n                        } else if (b == 8) {\n                            k = 3;\n                        } else if (b == 2) {\n                            k = 1;\n                        } else if (b == 32) {\n                            k = 5;\n                        } else if (b == 4) {\n                            k = 2;\n                        } else {\n                            return this.toRadix(b);\n                        }\n                        var km = (1 << k) - 1, d, m = false, r = \"\", i = this.t;\n                        var p = this.DB - i * this.DB % k;\n                        if ((i--) > 0) {\n                            if (p < this.DB && (d = this[i] >> p) > 0) {\n                                m = true;\n                                r = int2char(d);\n                            }\n                            while(i >= 0){\n                                if (p < k) {\n                                    d = (this[i] & (1 << p) - 1) << k - p;\n                                    d |= this[--i] >> (p += this.DB - k);\n                                } else {\n                                    d = this[i] >> (p -= k) & km;\n                                    if (p <= 0) {\n                                        p += this.DB;\n                                        --i;\n                                    }\n                                }\n                                if (d > 0) {\n                                    m = true;\n                                }\n                                if (m) {\n                                    r += int2char(d);\n                                }\n                            }\n                        }\n                        return m ? r : \"0\";\n                    }\n                    function bnNegate() {\n                        var r = nbi();\n                        BigInteger.ZERO.subTo(this, r);\n                        return r;\n                    }\n                    function bnAbs() {\n                        return this.s < 0 ? this.negate() : this;\n                    }\n                    function bnCompareTo(a) {\n                        var r = this.s - a.s;\n                        if (r != 0) {\n                            return r;\n                        }\n                        var i = this.t;\n                        r = i - a.t;\n                        if (r != 0) {\n                            return this.s < 0 ? -r : r;\n                        }\n                        while((--i) >= 0){\n                            if ((r = this[i] - a[i]) != 0) {\n                                return r;\n                            }\n                        }\n                        return 0;\n                    }\n                    function nbits(x) {\n                        var r = 1, t;\n                        if ((t = x >>> 16) != 0) {\n                            x = t;\n                            r += 16;\n                        }\n                        if ((t = x >> 8) != 0) {\n                            x = t;\n                            r += 8;\n                        }\n                        if ((t = x >> 4) != 0) {\n                            x = t;\n                            r += 4;\n                        }\n                        if ((t = x >> 2) != 0) {\n                            x = t;\n                            r += 2;\n                        }\n                        if ((t = x >> 1) != 0) {\n                            x = t;\n                            r += 1;\n                        }\n                        return r;\n                    }\n                    function bnBitLength() {\n                        if (this.t <= 0) {\n                            return 0;\n                        }\n                        return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n                    }\n                    function bnpDLShiftTo(n, r) {\n                        var i;\n                        for(i = this.t - 1; i >= 0; --i){\n                            r[i + n] = this[i];\n                        }\n                        for(i = n - 1; i >= 0; --i){\n                            r[i] = 0;\n                        }\n                        r.t = this.t + n;\n                        r.s = this.s;\n                    }\n                    function bnpDRShiftTo(n, r) {\n                        for(var i = n; i < this.t; ++i){\n                            r[i - n] = this[i];\n                        }\n                        r.t = Math.max(this.t - n, 0);\n                        r.s = this.s;\n                    }\n                    function bnpLShiftTo(n, r) {\n                        var bs = n % this.DB;\n                        var cbs = this.DB - bs;\n                        var bm = (1 << cbs) - 1;\n                        var ds = Math.floor(n / this.DB), c = this.s << bs & this.DM, i;\n                        for(i = this.t - 1; i >= 0; --i){\n                            r[i + ds + 1] = this[i] >> cbs | c;\n                            c = (this[i] & bm) << bs;\n                        }\n                        for(i = ds - 1; i >= 0; --i){\n                            r[i] = 0;\n                        }\n                        r[ds] = c;\n                        r.t = this.t + ds + 1;\n                        r.s = this.s;\n                        r.clamp();\n                    }\n                    function bnpRShiftTo(n, r) {\n                        r.s = this.s;\n                        var ds = Math.floor(n / this.DB);\n                        if (ds >= this.t) {\n                            r.t = 0;\n                            return;\n                        }\n                        var bs = n % this.DB;\n                        var cbs = this.DB - bs;\n                        var bm = (1 << bs) - 1;\n                        r[0] = this[ds] >> bs;\n                        for(var i = ds + 1; i < this.t; ++i){\n                            r[i - ds - 1] |= (this[i] & bm) << cbs;\n                            r[i - ds] = this[i] >> bs;\n                        }\n                        if (bs > 0) {\n                            r[this.t - ds - 1] |= (this.s & bm) << cbs;\n                        }\n                        r.t = this.t - ds;\n                        r.clamp();\n                    }\n                    function bnpSubTo(a, r) {\n                        var i = 0, c = 0, m = Math.min(a.t, this.t);\n                        while(i < m){\n                            c += this[i] - a[i];\n                            r[i++] = c & this.DM;\n                            c >>= this.DB;\n                        }\n                        if (a.t < this.t) {\n                            c -= a.s;\n                            while(i < this.t){\n                                c += this[i];\n                                r[i++] = c & this.DM;\n                                c >>= this.DB;\n                            }\n                            c += this.s;\n                        } else {\n                            c += this.s;\n                            while(i < a.t){\n                                c -= a[i];\n                                r[i++] = c & this.DM;\n                                c >>= this.DB;\n                            }\n                            c -= a.s;\n                        }\n                        r.s = c < 0 ? -1 : 0;\n                        if (c < -1) {\n                            r[i++] = this.DV + c;\n                        } else if (c > 0) {\n                            r[i++] = c;\n                        }\n                        r.t = i;\n                        r.clamp();\n                    }\n                    function bnpMultiplyTo(a, r) {\n                        var x = this.abs(), y = a.abs();\n                        var i = x.t;\n                        r.t = i + y.t;\n                        while((--i) >= 0){\n                            r[i] = 0;\n                        }\n                        for(i = 0; i < y.t; ++i){\n                            r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n                        }\n                        r.s = 0;\n                        r.clamp();\n                        if (this.s != a.s) {\n                            BigInteger.ZERO.subTo(r, r);\n                        }\n                    }\n                    function bnpSquareTo(r) {\n                        var x = this.abs();\n                        var i = r.t = 2 * x.t;\n                        while((--i) >= 0){\n                            r[i] = 0;\n                        }\n                        for(i = 0; i < x.t - 1; ++i){\n                            var c = x.am(i, x[i], r, 2 * i, 0, 1);\n                            if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n                                r[i + x.t] -= x.DV;\n                                r[i + x.t + 1] = 1;\n                            }\n                        }\n                        if (r.t > 0) {\n                            r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n                        }\n                        r.s = 0;\n                        r.clamp();\n                    }\n                    function bnpDivRemTo(m, q, r) {\n                        var pm = m.abs();\n                        if (pm.t <= 0) {\n                            return;\n                        }\n                        var pt = this.abs();\n                        if (pt.t < pm.t) {\n                            if (q != null) {\n                                q.fromInt(0);\n                            }\n                            if (r != null) {\n                                this.copyTo(r);\n                            }\n                            return;\n                        }\n                        if (r == null) {\n                            r = nbi();\n                        }\n                        var y = nbi(), ts = this.s, ms = m.s;\n                        var nsh = this.DB - nbits(pm[pm.t - 1]);\n                        if (nsh > 0) {\n                            pm.lShiftTo(nsh, y);\n                            pt.lShiftTo(nsh, r);\n                        } else {\n                            pm.copyTo(y);\n                            pt.copyTo(r);\n                        }\n                        var ys = y.t;\n                        var y0 = y[ys - 1];\n                        if (y0 == 0) {\n                            return;\n                        }\n                        var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n                        var d1 = this.FV / yt, d2 = (1 << this.F1) / yt, e = 1 << this.F2;\n                        var i = r.t, j = i - ys, t = q == null ? nbi() : q;\n                        y.dlShiftTo(j, t);\n                        if (r.compareTo(t) >= 0) {\n                            r[r.t++] = 1;\n                            r.subTo(t, r);\n                        }\n                        BigInteger.ONE.dlShiftTo(ys, t);\n                        t.subTo(y, y);\n                        while(y.t < ys){\n                            y[y.t++] = 0;\n                        }\n                        while((--j) >= 0){\n                            var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n                            if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n                                y.dlShiftTo(j, t);\n                                r.subTo(t, r);\n                                while(r[i] < --qd){\n                                    r.subTo(t, r);\n                                }\n                            }\n                        }\n                        if (q != null) {\n                            r.drShiftTo(ys, q);\n                            if (ts != ms) {\n                                BigInteger.ZERO.subTo(q, q);\n                            }\n                        }\n                        r.t = ys;\n                        r.clamp();\n                        if (nsh > 0) {\n                            r.rShiftTo(nsh, r);\n                        }\n                        if (ts < 0) {\n                            BigInteger.ZERO.subTo(r, r);\n                        }\n                    }\n                    function bnMod(a) {\n                        var r = nbi();\n                        this.abs().divRemTo(a, null, r);\n                        if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {\n                            a.subTo(r, r);\n                        }\n                        return r;\n                    }\n                    function Classic(m) {\n                        this.m = m;\n                    }\n                    function cConvert(x) {\n                        if (x.s < 0 || x.compareTo(this.m) >= 0) {\n                            return x.mod(this.m);\n                        } else {\n                            return x;\n                        }\n                    }\n                    function cRevert(x) {\n                        return x;\n                    }\n                    function cReduce(x) {\n                        x.divRemTo(this.m, null, x);\n                    }\n                    function cMulTo(x, y, r) {\n                        x.multiplyTo(y, r);\n                        this.reduce(r);\n                    }\n                    function cSqrTo(x, r) {\n                        x.squareTo(r);\n                        this.reduce(r);\n                    }\n                    Classic.prototype.convert = cConvert;\n                    Classic.prototype.revert = cRevert;\n                    Classic.prototype.reduce = cReduce;\n                    Classic.prototype.mulTo = cMulTo;\n                    Classic.prototype.sqrTo = cSqrTo;\n                    function bnpInvDigit() {\n                        if (this.t < 1) {\n                            return 0;\n                        }\n                        var x = this[0];\n                        if ((x & 1) == 0) {\n                            return 0;\n                        }\n                        var y = x & 3;\n                        y = y * (2 - (x & 15) * y) & 15;\n                        y = y * (2 - (x & 255) * y) & 255;\n                        y = y * (2 - ((x & 65535) * y & 65535)) & 65535;\n                        y = y * (2 - x * y % this.DV) % this.DV;\n                        return y > 0 ? this.DV - y : -y;\n                    }\n                    function Montgomery(m) {\n                        this.m = m;\n                        this.mp = m.invDigit();\n                        this.mpl = this.mp & 32767;\n                        this.mph = this.mp >> 15;\n                        this.um = (1 << m.DB - 15) - 1;\n                        this.mt2 = 2 * m.t;\n                    }\n                    function montConvert(x) {\n                        var r = nbi();\n                        x.abs().dlShiftTo(this.m.t, r);\n                        r.divRemTo(this.m, null, r);\n                        if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {\n                            this.m.subTo(r, r);\n                        }\n                        return r;\n                    }\n                    function montRevert(x) {\n                        var r = nbi();\n                        x.copyTo(r);\n                        this.reduce(r);\n                        return r;\n                    }\n                    function montReduce(x) {\n                        while(x.t <= this.mt2){\n                            x[x.t++] = 0;\n                        }\n                        for(var i = 0; i < this.m.t; ++i){\n                            var j = x[i] & 32767;\n                            var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;\n                            j = i + this.m.t;\n                            x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n                            while(x[j] >= x.DV){\n                                x[j] -= x.DV;\n                                x[++j]++;\n                            }\n                        }\n                        x.clamp();\n                        x.drShiftTo(this.m.t, x);\n                        if (x.compareTo(this.m) >= 0) {\n                            x.subTo(this.m, x);\n                        }\n                    }\n                    function montSqrTo(x, r) {\n                        x.squareTo(r);\n                        this.reduce(r);\n                    }\n                    function montMulTo(x, y, r) {\n                        x.multiplyTo(y, r);\n                        this.reduce(r);\n                    }\n                    Montgomery.prototype.convert = montConvert;\n                    Montgomery.prototype.revert = montRevert;\n                    Montgomery.prototype.reduce = montReduce;\n                    Montgomery.prototype.mulTo = montMulTo;\n                    Montgomery.prototype.sqrTo = montSqrTo;\n                    function bnpIsEven() {\n                        return (this.t > 0 ? this[0] & 1 : this.s) == 0;\n                    }\n                    function bnpExp(e, z) {\n                        if (e > 4294967295 || e < 1) {\n                            return BigInteger.ONE;\n                        }\n                        var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e) - 1;\n                        g.copyTo(r);\n                        while((--i) >= 0){\n                            z.sqrTo(r, r2);\n                            if ((e & 1 << i) > 0) {\n                                z.mulTo(r2, g, r);\n                            } else {\n                                var t = r;\n                                r = r2;\n                                r2 = t;\n                            }\n                        }\n                        return z.revert(r);\n                    }\n                    function bnModPowInt(e, m) {\n                        var z;\n                        if (e < 256 || m.isEven()) {\n                            z = new Classic(m);\n                        } else {\n                            z = new Montgomery(m);\n                        }\n                        return this.exp(e, z);\n                    }\n                    BigInteger.prototype.copyTo = bnpCopyTo;\n                    BigInteger.prototype.fromInt = bnpFromInt;\n                    BigInteger.prototype.fromString = bnpFromString;\n                    BigInteger.prototype.clamp = bnpClamp;\n                    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n                    BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n                    BigInteger.prototype.lShiftTo = bnpLShiftTo;\n                    BigInteger.prototype.rShiftTo = bnpRShiftTo;\n                    BigInteger.prototype.subTo = bnpSubTo;\n                    BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n                    BigInteger.prototype.squareTo = bnpSquareTo;\n                    BigInteger.prototype.divRemTo = bnpDivRemTo;\n                    BigInteger.prototype.invDigit = bnpInvDigit;\n                    BigInteger.prototype.isEven = bnpIsEven;\n                    BigInteger.prototype.exp = bnpExp;\n                    BigInteger.prototype.toString = bnToString;\n                    BigInteger.prototype.negate = bnNegate;\n                    BigInteger.prototype.abs = bnAbs;\n                    BigInteger.prototype.compareTo = bnCompareTo;\n                    BigInteger.prototype.bitLength = bnBitLength;\n                    BigInteger.prototype.mod = bnMod;\n                    BigInteger.prototype.modPowInt = bnModPowInt;\n                    BigInteger.ZERO = nbv(0);\n                    BigInteger.ONE = nbv(1);\n                    function bnClone() {\n                        var r = nbi();\n                        this.copyTo(r);\n                        return r;\n                    }\n                    function bnIntValue() {\n                        if (this.s < 0) {\n                            if (this.t == 1) {\n                                return this[0] - this.DV;\n                            } else if (this.t == 0) {\n                                return -1;\n                            }\n                        } else if (this.t == 1) {\n                            return this[0];\n                        } else if (this.t == 0) {\n                            return 0;\n                        }\n                        return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];\n                    }\n                    function bnByteValue() {\n                        return this.t == 0 ? this.s : this[0] << 24 >> 24;\n                    }\n                    function bnShortValue() {\n                        return this.t == 0 ? this.s : this[0] << 16 >> 16;\n                    }\n                    function bnpChunkSize(r) {\n                        return Math.floor(Math.LN2 * this.DB / Math.log(r));\n                    }\n                    function bnSigNum() {\n                        if (this.s < 0) {\n                            return -1;\n                        } else if (this.t <= 0 || this.t == 1 && this[0] <= 0) {\n                            return 0;\n                        } else {\n                            return 1;\n                        }\n                    }\n                    function bnpToRadix(b) {\n                        if (b == null) {\n                            b = 10;\n                        }\n                        if (this.signum() == 0 || b < 2 || b > 36) {\n                            return \"0\";\n                        }\n                        var cs = this.chunkSize(b);\n                        var a = Math.pow(b, cs);\n                        var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\n                        this.divRemTo(d, y, z);\n                        while(y.signum() > 0){\n                            r = (a + z.intValue()).toString(b).substr(1) + r;\n                            y.divRemTo(d, y, z);\n                        }\n                        return z.intValue().toString(b) + r;\n                    }\n                    function bnpFromRadix(s, b) {\n                        this.fromInt(0);\n                        if (b == null) {\n                            b = 10;\n                        }\n                        var cs = this.chunkSize(b);\n                        var d = Math.pow(b, cs), mi = false, j = 0, w = 0;\n                        for(var i = 0; i < s.length; ++i){\n                            var x = intAt(s, i);\n                            if (x < 0) {\n                                if (s.charAt(i) == \"-\" && this.signum() == 0) {\n                                    mi = true;\n                                }\n                                continue;\n                            }\n                            w = b * w + x;\n                            if ((++j) >= cs) {\n                                this.dMultiply(d);\n                                this.dAddOffset(w, 0);\n                                j = 0;\n                                w = 0;\n                            }\n                        }\n                        if (j > 0) {\n                            this.dMultiply(Math.pow(b, j));\n                            this.dAddOffset(w, 0);\n                        }\n                        if (mi) {\n                            BigInteger.ZERO.subTo(this, this);\n                        }\n                    }\n                    function bnpFromNumber(a, b, c) {\n                        if (\"number\" == typeof b) {\n                            if (a < 2) {\n                                this.fromInt(1);\n                            } else {\n                                this.fromNumber(a, c);\n                                if (!this.testBit(a - 1)) {\n                                    this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n                                }\n                                if (this.isEven()) {\n                                    this.dAddOffset(1, 0);\n                                }\n                                while(!this.isProbablePrime(b)){\n                                    this.dAddOffset(2, 0);\n                                    if (this.bitLength() > a) {\n                                        this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n                                    }\n                                }\n                            }\n                        } else {\n                            var x = new Array(), t = a & 7;\n                            x.length = (a >> 3) + 1;\n                            b.nextBytes(x);\n                            if (t > 0) {\n                                x[0] &= (1 << t) - 1;\n                            } else {\n                                x[0] = 0;\n                            }\n                            this.fromString(x, 256);\n                        }\n                    }\n                    function bnToByteArray() {\n                        var i = this.t, r = new Array();\n                        r[0] = this.s;\n                        var p = this.DB - i * this.DB % 8, d, k = 0;\n                        if ((i--) > 0) {\n                            if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) {\n                                r[k++] = d | this.s << this.DB - p;\n                            }\n                            while(i >= 0){\n                                if (p < 8) {\n                                    d = (this[i] & (1 << p) - 1) << 8 - p;\n                                    d |= this[--i] >> (p += this.DB - 8);\n                                } else {\n                                    d = this[i] >> (p -= 8) & 255;\n                                    if (p <= 0) {\n                                        p += this.DB;\n                                        --i;\n                                    }\n                                }\n                                if ((d & 128) != 0) {\n                                    d |= -256;\n                                }\n                                if (k == 0 && (this.s & 128) != (d & 128)) {\n                                    ++k;\n                                }\n                                if (k > 0 || d != this.s) {\n                                    r[k++] = d;\n                                }\n                            }\n                        }\n                        return r;\n                    }\n                    function bnEquals(a) {\n                        return this.compareTo(a) == 0;\n                    }\n                    function bnMin(a) {\n                        return this.compareTo(a) < 0 ? this : a;\n                    }\n                    function bnMax(a) {\n                        return this.compareTo(a) > 0 ? this : a;\n                    }\n                    function bnpBitwiseTo(a, op, r) {\n                        var i, f, m = Math.min(a.t, this.t);\n                        for(i = 0; i < m; ++i){\n                            r[i] = op(this[i], a[i]);\n                        }\n                        if (a.t < this.t) {\n                            f = a.s & this.DM;\n                            for(i = m; i < this.t; ++i){\n                                r[i] = op(this[i], f);\n                            }\n                            r.t = this.t;\n                        } else {\n                            f = this.s & this.DM;\n                            for(i = m; i < a.t; ++i){\n                                r[i] = op(f, a[i]);\n                            }\n                            r.t = a.t;\n                        }\n                        r.s = op(this.s, a.s);\n                        r.clamp();\n                    }\n                    function op_and(x, y) {\n                        return x & y;\n                    }\n                    function bnAnd(a) {\n                        var r = nbi();\n                        this.bitwiseTo(a, op_and, r);\n                        return r;\n                    }\n                    function op_or(x, y) {\n                        return x | y;\n                    }\n                    function bnOr(a) {\n                        var r = nbi();\n                        this.bitwiseTo(a, op_or, r);\n                        return r;\n                    }\n                    function op_xor(x, y) {\n                        return x ^ y;\n                    }\n                    function bnXor(a) {\n                        var r = nbi();\n                        this.bitwiseTo(a, op_xor, r);\n                        return r;\n                    }\n                    function op_andnot(x, y) {\n                        return x & ~y;\n                    }\n                    function bnAndNot(a) {\n                        var r = nbi();\n                        this.bitwiseTo(a, op_andnot, r);\n                        return r;\n                    }\n                    function bnNot() {\n                        var r = nbi();\n                        for(var i = 0; i < this.t; ++i){\n                            r[i] = this.DM & ~this[i];\n                        }\n                        r.t = this.t;\n                        r.s = ~this.s;\n                        return r;\n                    }\n                    function bnShiftLeft(n) {\n                        var r = nbi();\n                        if (n < 0) {\n                            this.rShiftTo(-n, r);\n                        } else {\n                            this.lShiftTo(n, r);\n                        }\n                        return r;\n                    }\n                    function bnShiftRight(n) {\n                        var r = nbi();\n                        if (n < 0) {\n                            this.lShiftTo(-n, r);\n                        } else {\n                            this.rShiftTo(n, r);\n                        }\n                        return r;\n                    }\n                    function lbit(x) {\n                        if (x == 0) {\n                            return -1;\n                        }\n                        var r = 0;\n                        if ((x & 65535) == 0) {\n                            x >>= 16;\n                            r += 16;\n                        }\n                        if ((x & 255) == 0) {\n                            x >>= 8;\n                            r += 8;\n                        }\n                        if ((x & 15) == 0) {\n                            x >>= 4;\n                            r += 4;\n                        }\n                        if ((x & 3) == 0) {\n                            x >>= 2;\n                            r += 2;\n                        }\n                        if ((x & 1) == 0) {\n                            ++r;\n                        }\n                        return r;\n                    }\n                    function bnGetLowestSetBit() {\n                        for(var i = 0; i < this.t; ++i){\n                            if (this[i] != 0) {\n                                return i * this.DB + lbit(this[i]);\n                            }\n                        }\n                        if (this.s < 0) {\n                            return this.t * this.DB;\n                        }\n                        return -1;\n                    }\n                    function cbit(x) {\n                        var r = 0;\n                        while(x != 0){\n                            x &= x - 1;\n                            ++r;\n                        }\n                        return r;\n                    }\n                    function bnBitCount() {\n                        var r = 0, x = this.s & this.DM;\n                        for(var i = 0; i < this.t; ++i){\n                            r += cbit(this[i] ^ x);\n                        }\n                        return r;\n                    }\n                    function bnTestBit(n) {\n                        var j = Math.floor(n / this.DB);\n                        if (j >= this.t) {\n                            return this.s != 0;\n                        }\n                        return (this[j] & 1 << n % this.DB) != 0;\n                    }\n                    function bnpChangeBit(n, op) {\n                        var r = BigInteger.ONE.shiftLeft(n);\n                        this.bitwiseTo(r, op, r);\n                        return r;\n                    }\n                    function bnSetBit(n) {\n                        return this.changeBit(n, op_or);\n                    }\n                    function bnClearBit(n) {\n                        return this.changeBit(n, op_andnot);\n                    }\n                    function bnFlipBit(n) {\n                        return this.changeBit(n, op_xor);\n                    }\n                    function bnpAddTo(a, r) {\n                        var i = 0, c = 0, m = Math.min(a.t, this.t);\n                        while(i < m){\n                            c += this[i] + a[i];\n                            r[i++] = c & this.DM;\n                            c >>= this.DB;\n                        }\n                        if (a.t < this.t) {\n                            c += a.s;\n                            while(i < this.t){\n                                c += this[i];\n                                r[i++] = c & this.DM;\n                                c >>= this.DB;\n                            }\n                            c += this.s;\n                        } else {\n                            c += this.s;\n                            while(i < a.t){\n                                c += a[i];\n                                r[i++] = c & this.DM;\n                                c >>= this.DB;\n                            }\n                            c += a.s;\n                        }\n                        r.s = c < 0 ? -1 : 0;\n                        if (c > 0) {\n                            r[i++] = c;\n                        } else if (c < -1) {\n                            r[i++] = this.DV + c;\n                        }\n                        r.t = i;\n                        r.clamp();\n                    }\n                    function bnAdd(a) {\n                        var r = nbi();\n                        this.addTo(a, r);\n                        return r;\n                    }\n                    function bnSubtract(a) {\n                        var r = nbi();\n                        this.subTo(a, r);\n                        return r;\n                    }\n                    function bnMultiply(a) {\n                        var r = nbi();\n                        this.multiplyTo(a, r);\n                        return r;\n                    }\n                    function bnSquare() {\n                        var r = nbi();\n                        this.squareTo(r);\n                        return r;\n                    }\n                    function bnDivide(a) {\n                        var r = nbi();\n                        this.divRemTo(a, r, null);\n                        return r;\n                    }\n                    function bnRemainder(a) {\n                        var r = nbi();\n                        this.divRemTo(a, null, r);\n                        return r;\n                    }\n                    function bnDivideAndRemainder(a) {\n                        var q = nbi(), r = nbi();\n                        this.divRemTo(a, q, r);\n                        return new Array(q, r);\n                    }\n                    function bnpDMultiply(n) {\n                        this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n                        ++this.t;\n                        this.clamp();\n                    }\n                    function bnpDAddOffset(n, w) {\n                        if (n == 0) {\n                            return;\n                        }\n                        while(this.t <= w){\n                            this[this.t++] = 0;\n                        }\n                        this[w] += n;\n                        while(this[w] >= this.DV){\n                            this[w] -= this.DV;\n                            if ((++w) >= this.t) {\n                                this[this.t++] = 0;\n                            }\n                            ++this[w];\n                        }\n                    }\n                    function NullExp() {\n                    }\n                    function nNop(x) {\n                        return x;\n                    }\n                    function nMulTo(x, y, r) {\n                        x.multiplyTo(y, r);\n                    }\n                    function nSqrTo(x, r) {\n                        x.squareTo(r);\n                    }\n                    NullExp.prototype.convert = nNop;\n                    NullExp.prototype.revert = nNop;\n                    NullExp.prototype.mulTo = nMulTo;\n                    NullExp.prototype.sqrTo = nSqrTo;\n                    function bnPow(e) {\n                        return this.exp(e, new NullExp());\n                    }\n                    function bnpMultiplyLowerTo(a, n, r) {\n                        var i = Math.min(this.t + a.t, n);\n                        r.s = 0;\n                        r.t = i;\n                        while(i > 0){\n                            r[--i] = 0;\n                        }\n                        var j;\n                        for(j = r.t - this.t; i < j; ++i){\n                            r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\n                        }\n                        for(j = Math.min(a.t, n); i < j; ++i){\n                            this.am(0, a[i], r, i, 0, n - i);\n                        }\n                        r.clamp();\n                    }\n                    function bnpMultiplyUpperTo(a, n, r) {\n                        --n;\n                        var i = r.t = this.t + a.t - n;\n                        r.s = 0;\n                        while((--i) >= 0){\n                            r[i] = 0;\n                        }\n                        for(i = Math.max(n - this.t, 0); i < a.t; ++i){\n                            r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\n                        }\n                        r.clamp();\n                        r.drShiftTo(1, r);\n                    }\n                    function Barrett(m) {\n                        this.r2 = nbi();\n                        this.q3 = nbi();\n                        BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n                        this.mu = this.r2.divide(m);\n                        this.m = m;\n                    }\n                    function barrettConvert(x) {\n                        if (x.s < 0 || x.t > 2 * this.m.t) {\n                            return x.mod(this.m);\n                        } else if (x.compareTo(this.m) < 0) {\n                            return x;\n                        } else {\n                            var r = nbi();\n                            x.copyTo(r);\n                            this.reduce(r);\n                            return r;\n                        }\n                    }\n                    function barrettRevert(x) {\n                        return x;\n                    }\n                    function barrettReduce(x) {\n                        x.drShiftTo(this.m.t - 1, this.r2);\n                        if (x.t > this.m.t + 1) {\n                            x.t = this.m.t + 1;\n                            x.clamp();\n                        }\n                        this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n                        this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n                        while(x.compareTo(this.r2) < 0){\n                            x.dAddOffset(1, this.m.t + 1);\n                        }\n                        x.subTo(this.r2, x);\n                        while(x.compareTo(this.m) >= 0){\n                            x.subTo(this.m, x);\n                        }\n                    }\n                    function barrettSqrTo(x, r) {\n                        x.squareTo(r);\n                        this.reduce(r);\n                    }\n                    function barrettMulTo(x, y, r) {\n                        x.multiplyTo(y, r);\n                        this.reduce(r);\n                    }\n                    Barrett.prototype.convert = barrettConvert;\n                    Barrett.prototype.revert = barrettRevert;\n                    Barrett.prototype.reduce = barrettReduce;\n                    Barrett.prototype.mulTo = barrettMulTo;\n                    Barrett.prototype.sqrTo = barrettSqrTo;\n                    function bnModPow(e, m) {\n                        var i = e.bitLength(), k, r = nbv(1), z;\n                        if (i <= 0) {\n                            return r;\n                        } else if (i < 18) {\n                            k = 1;\n                        } else if (i < 48) {\n                            k = 3;\n                        } else if (i < 144) {\n                            k = 4;\n                        } else if (i < 768) {\n                            k = 5;\n                        } else {\n                            k = 6;\n                        }\n                        if (i < 8) {\n                            z = new Classic(m);\n                        } else if (m.isEven()) {\n                            z = new Barrett(m);\n                        } else {\n                            z = new Montgomery(m);\n                        }\n                        var g = new Array(), n = 3, k1 = k - 1, km = (1 << k) - 1;\n                        g[1] = z.convert(this);\n                        if (k > 1) {\n                            var g2 = nbi();\n                            z.sqrTo(g[1], g2);\n                            while(n <= km){\n                                g[n] = nbi();\n                                z.mulTo(g2, g[n - 2], g[n]);\n                                n += 2;\n                            }\n                        }\n                        var j = e.t - 1, w, is1 = true, r2 = nbi(), t;\n                        i = nbits(e[j]) - 1;\n                        while(j >= 0){\n                            if (i >= k1) {\n                                w = e[j] >> i - k1 & km;\n                            } else {\n                                w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n                                if (j > 0) {\n                                    w |= e[j - 1] >> this.DB + i - k1;\n                                }\n                            }\n                            n = k;\n                            while((w & 1) == 0){\n                                w >>= 1;\n                                --n;\n                            }\n                            if ((i -= n) < 0) {\n                                i += this.DB;\n                                --j;\n                            }\n                            if (is1) {\n                                g[w].copyTo(r);\n                                is1 = false;\n                            } else {\n                                while(n > 1){\n                                    z.sqrTo(r, r2);\n                                    z.sqrTo(r2, r);\n                                    n -= 2;\n                                }\n                                if (n > 0) {\n                                    z.sqrTo(r, r2);\n                                } else {\n                                    t = r;\n                                    r = r2;\n                                    r2 = t;\n                                }\n                                z.mulTo(r2, g[w], r);\n                            }\n                            while(j >= 0 && (e[j] & 1 << i) == 0){\n                                z.sqrTo(r, r2);\n                                t = r;\n                                r = r2;\n                                r2 = t;\n                                if ((--i) < 0) {\n                                    i = this.DB - 1;\n                                    --j;\n                                }\n                            }\n                        }\n                        return z.revert(r);\n                    }\n                    function bnGCD(a) {\n                        var x = this.s < 0 ? this.negate() : this.clone();\n                        var y = a.s < 0 ? a.negate() : a.clone();\n                        if (x.compareTo(y) < 0) {\n                            var t = x;\n                            x = y;\n                            y = t;\n                        }\n                        var i = x.getLowestSetBit(), g = y.getLowestSetBit();\n                        if (g < 0) {\n                            return x;\n                        }\n                        if (i < g) {\n                            g = i;\n                        }\n                        if (g > 0) {\n                            x.rShiftTo(g, x);\n                            y.rShiftTo(g, y);\n                        }\n                        while(x.signum() > 0){\n                            if ((i = x.getLowestSetBit()) > 0) {\n                                x.rShiftTo(i, x);\n                            }\n                            if ((i = y.getLowestSetBit()) > 0) {\n                                y.rShiftTo(i, y);\n                            }\n                            if (x.compareTo(y) >= 0) {\n                                x.subTo(y, x);\n                                x.rShiftTo(1, x);\n                            } else {\n                                y.subTo(x, y);\n                                y.rShiftTo(1, y);\n                            }\n                        }\n                        if (g > 0) {\n                            y.lShiftTo(g, y);\n                        }\n                        return y;\n                    }\n                    function bnpModInt(n) {\n                        if (n <= 0) {\n                            return 0;\n                        }\n                        var d = this.DV % n, r = this.s < 0 ? n - 1 : 0;\n                        if (this.t > 0) {\n                            if (d == 0) {\n                                r = this[0] % n;\n                            } else {\n                                for(var i = this.t - 1; i >= 0; --i){\n                                    r = (d * r + this[i]) % n;\n                                }\n                            }\n                        }\n                        return r;\n                    }\n                    function bnModInverse(m) {\n                        var ac = m.isEven();\n                        if (this.isEven() && ac || m.signum() == 0) {\n                            return BigInteger.ZERO;\n                        }\n                        var u = m.clone(), v = this.clone();\n                        var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n                        while(u.signum() != 0){\n                            while(u.isEven()){\n                                u.rShiftTo(1, u);\n                                if (ac) {\n                                    if (!a.isEven() || !b.isEven()) {\n                                        a.addTo(this, a);\n                                        b.subTo(m, b);\n                                    }\n                                    a.rShiftTo(1, a);\n                                } else if (!b.isEven()) {\n                                    b.subTo(m, b);\n                                }\n                                b.rShiftTo(1, b);\n                            }\n                            while(v.isEven()){\n                                v.rShiftTo(1, v);\n                                if (ac) {\n                                    if (!c.isEven() || !d.isEven()) {\n                                        c.addTo(this, c);\n                                        d.subTo(m, d);\n                                    }\n                                    c.rShiftTo(1, c);\n                                } else if (!d.isEven()) {\n                                    d.subTo(m, d);\n                                }\n                                d.rShiftTo(1, d);\n                            }\n                            if (u.compareTo(v) >= 0) {\n                                u.subTo(v, u);\n                                if (ac) {\n                                    a.subTo(c, a);\n                                }\n                                b.subTo(d, b);\n                            } else {\n                                v.subTo(u, v);\n                                if (ac) {\n                                    c.subTo(a, c);\n                                }\n                                d.subTo(b, d);\n                            }\n                        }\n                        if (v.compareTo(BigInteger.ONE) != 0) {\n                            return BigInteger.ZERO;\n                        }\n                        if (d.compareTo(m) >= 0) {\n                            return d.subtract(m);\n                        }\n                        if (d.signum() < 0) {\n                            d.addTo(m, d);\n                        } else {\n                            return d;\n                        }\n                        if (d.signum() < 0) {\n                            return d.add(m);\n                        } else {\n                            return d;\n                        }\n                    }\n                    var lowprimes = [\n                        2,\n                        3,\n                        5,\n                        7,\n                        11,\n                        13,\n                        17,\n                        19,\n                        23,\n                        29,\n                        31,\n                        37,\n                        41,\n                        43,\n                        47,\n                        53,\n                        59,\n                        61,\n                        67,\n                        71,\n                        73,\n                        79,\n                        83,\n                        89,\n                        97,\n                        101,\n                        103,\n                        107,\n                        109,\n                        113,\n                        127,\n                        131,\n                        137,\n                        139,\n                        149,\n                        151,\n                        157,\n                        163,\n                        167,\n                        173,\n                        179,\n                        181,\n                        191,\n                        193,\n                        197,\n                        199,\n                        211,\n                        223,\n                        227,\n                        229,\n                        233,\n                        239,\n                        241,\n                        251,\n                        257,\n                        263,\n                        269,\n                        271,\n                        277,\n                        281,\n                        283,\n                        293,\n                        307,\n                        311,\n                        313,\n                        317,\n                        331,\n                        337,\n                        347,\n                        349,\n                        353,\n                        359,\n                        367,\n                        373,\n                        379,\n                        383,\n                        389,\n                        397,\n                        401,\n                        409,\n                        419,\n                        421,\n                        431,\n                        433,\n                        439,\n                        443,\n                        449,\n                        457,\n                        461,\n                        463,\n                        467,\n                        479,\n                        487,\n                        491,\n                        499,\n                        503,\n                        509,\n                        521,\n                        523,\n                        541,\n                        547,\n                        557,\n                        563,\n                        569,\n                        571,\n                        577,\n                        587,\n                        593,\n                        599,\n                        601,\n                        607,\n                        613,\n                        617,\n                        619,\n                        631,\n                        641,\n                        643,\n                        647,\n                        653,\n                        659,\n                        661,\n                        673,\n                        677,\n                        683,\n                        691,\n                        701,\n                        709,\n                        719,\n                        727,\n                        733,\n                        739,\n                        743,\n                        751,\n                        757,\n                        761,\n                        769,\n                        773,\n                        787,\n                        797,\n                        809,\n                        811,\n                        821,\n                        823,\n                        827,\n                        829,\n                        839,\n                        853,\n                        857,\n                        859,\n                        863,\n                        877,\n                        881,\n                        883,\n                        887,\n                        907,\n                        911,\n                        919,\n                        929,\n                        937,\n                        941,\n                        947,\n                        953,\n                        967,\n                        971,\n                        977,\n                        983,\n                        991,\n                        997, \n                    ];\n                    var lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\n                    function bnIsProbablePrime(t) {\n                        var i, x = this.abs();\n                        if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {\n                            for(i = 0; i < lowprimes.length; ++i){\n                                if (x[0] == lowprimes[i]) {\n                                    return true;\n                                }\n                            }\n                            return false;\n                        }\n                        if (x.isEven()) {\n                            return false;\n                        }\n                        i = 1;\n                        while(i < lowprimes.length){\n                            var m = lowprimes[i], j = i + 1;\n                            while(j < lowprimes.length && m < lplim){\n                                m *= lowprimes[j++];\n                            }\n                            m = x.modInt(m);\n                            while(i < j){\n                                if (m % lowprimes[i++] == 0) {\n                                    return false;\n                                }\n                            }\n                        }\n                        return x.millerRabin(t);\n                    }\n                    function bnpMillerRabin(t) {\n                        var n1 = this.subtract(BigInteger.ONE);\n                        var k = n1.getLowestSetBit();\n                        if (k <= 0) {\n                            return false;\n                        }\n                        var r = n1.shiftRight(k);\n                        t = t + 1 >> 1;\n                        if (t > lowprimes.length) {\n                            t = lowprimes.length;\n                        }\n                        var a = nbi();\n                        for(var i = 0; i < t; ++i){\n                            a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\n                            var y = a.modPow(r, this);\n                            if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n                                var j = 1;\n                                while((j++) < k && y.compareTo(n1) != 0){\n                                    y = y.modPowInt(2, this);\n                                    if (y.compareTo(BigInteger.ONE) == 0) {\n                                        return false;\n                                    }\n                                }\n                                if (y.compareTo(n1) != 0) {\n                                    return false;\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    BigInteger.prototype.chunkSize = bnpChunkSize;\n                    BigInteger.prototype.toRadix = bnpToRadix;\n                    BigInteger.prototype.fromRadix = bnpFromRadix;\n                    BigInteger.prototype.fromNumber = bnpFromNumber;\n                    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n                    BigInteger.prototype.changeBit = bnpChangeBit;\n                    BigInteger.prototype.addTo = bnpAddTo;\n                    BigInteger.prototype.dMultiply = bnpDMultiply;\n                    BigInteger.prototype.dAddOffset = bnpDAddOffset;\n                    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n                    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n                    BigInteger.prototype.modInt = bnpModInt;\n                    BigInteger.prototype.millerRabin = bnpMillerRabin;\n                    BigInteger.prototype.clone = bnClone;\n                    BigInteger.prototype.intValue = bnIntValue;\n                    BigInteger.prototype.byteValue = bnByteValue;\n                    BigInteger.prototype.shortValue = bnShortValue;\n                    BigInteger.prototype.signum = bnSigNum;\n                    BigInteger.prototype.toByteArray = bnToByteArray;\n                    BigInteger.prototype.equals = bnEquals;\n                    BigInteger.prototype.min = bnMin;\n                    BigInteger.prototype.max = bnMax;\n                    BigInteger.prototype.and = bnAnd;\n                    BigInteger.prototype.or = bnOr;\n                    BigInteger.prototype.xor = bnXor;\n                    BigInteger.prototype.andNot = bnAndNot;\n                    BigInteger.prototype.not = bnNot;\n                    BigInteger.prototype.shiftLeft = bnShiftLeft;\n                    BigInteger.prototype.shiftRight = bnShiftRight;\n                    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n                    BigInteger.prototype.bitCount = bnBitCount;\n                    BigInteger.prototype.testBit = bnTestBit;\n                    BigInteger.prototype.setBit = bnSetBit;\n                    BigInteger.prototype.clearBit = bnClearBit;\n                    BigInteger.prototype.flipBit = bnFlipBit;\n                    BigInteger.prototype.add = bnAdd;\n                    BigInteger.prototype.subtract = bnSubtract;\n                    BigInteger.prototype.multiply = bnMultiply;\n                    BigInteger.prototype.divide = bnDivide;\n                    BigInteger.prototype.remainder = bnRemainder;\n                    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n                    BigInteger.prototype.modPow = bnModPow;\n                    BigInteger.prototype.modInverse = bnModInverse;\n                    BigInteger.prototype.pow = bnPow;\n                    BigInteger.prototype.gcd = bnGCD;\n                    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n                    BigInteger.prototype.square = bnSquare;\n                    var Int128 = BigInteger;\n                    Int128.prototype.IsNegative = function() {\n                        if (this.compareTo(Int128.ZERO) == -1) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    };\n                    Int128.op_Equality = function(val1, val2) {\n                        if (val1.compareTo(val2) == 0) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    };\n                    Int128.op_Inequality = function(val1, val2) {\n                        if (val1.compareTo(val2) != 0) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    };\n                    Int128.op_GreaterThan = function(val1, val2) {\n                        if (val1.compareTo(val2) > 0) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    };\n                    Int128.op_LessThan = function(val1, val2) {\n                        if (val1.compareTo(val2) < 0) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    };\n                    Int128.op_Addition = function(lhs, rhs) {\n                        return new Int128(lhs, undefined, undefined).add(new Int128(rhs, undefined, undefined));\n                    };\n                    Int128.op_Subtraction = function(lhs, rhs) {\n                        return new Int128(lhs, undefined, undefined).subtract(new Int128(rhs, undefined, undefined));\n                    };\n                    Int128.Int128Mul = function(lhs, rhs) {\n                        return new Int128(lhs, undefined, undefined).multiply(new Int128(rhs, undefined, undefined));\n                    };\n                    Int128.op_Division = function(lhs, rhs) {\n                        return lhs.divide(rhs);\n                    };\n                    Int128.prototype.ToDouble = function() {\n                        return parseFloat(this.toString());\n                    };\n                    var Inherit = function(ce, ce2) {\n                        var p;\n                        if (typeof Object.getOwnPropertyNames === \"undefined\") {\n                            for(p in ce2.prototype){\n                                if (typeof ce.prototype[p] === \"undefined\" || ce.prototype[p] === Object.prototype[p]) {\n                                    ce.prototype[p] = ce2.prototype[p];\n                                }\n                            }\n                            for(p in ce2){\n                                if (typeof ce[p] === \"undefined\") {\n                                    ce[p] = ce2[p];\n                                }\n                            }\n                            ce.$baseCtor = ce2;\n                        } else {\n                            var props = Object.getOwnPropertyNames(ce2.prototype);\n                            for(var i = 0; i < props.length; i++){\n                                if (typeof Object.getOwnPropertyDescriptor(ce.prototype, props[i]) === \"undefined\") {\n                                    Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));\n                                }\n                            }\n                            for(p in ce2){\n                                if (typeof ce[p] === \"undefined\") {\n                                    ce[p] = ce2[p];\n                                }\n                            }\n                            ce.$baseCtor = ce2;\n                        }\n                    };\n                    ClipperLib.Path = function() {\n                        return [];\n                    };\n                    ClipperLib.Path.prototype.push = Array.prototype.push;\n                    ClipperLib.Paths = function() {\n                        return [];\n                    };\n                    ClipperLib.Paths.prototype.push = Array.prototype.push;\n                    ClipperLib.DoublePoint = function() {\n                        var a = arguments;\n                        this.X = 0;\n                        this.Y = 0;\n                        if (a.length === 1) {\n                            this.X = a[0].X;\n                            this.Y = a[0].Y;\n                        } else if (a.length === 2) {\n                            this.X = a[0];\n                            this.Y = a[1];\n                        }\n                    };\n                    ClipperLib.DoublePoint0 = function() {\n                        this.X = 0;\n                        this.Y = 0;\n                    };\n                    ClipperLib.DoublePoint0.prototype = ClipperLib.DoublePoint.prototype;\n                    ClipperLib.DoublePoint1 = function(dp) {\n                        this.X = dp.X;\n                        this.Y = dp.Y;\n                    };\n                    ClipperLib.DoublePoint1.prototype = ClipperLib.DoublePoint.prototype;\n                    ClipperLib.DoublePoint2 = function(x, y) {\n                        this.X = x;\n                        this.Y = y;\n                    };\n                    ClipperLib.DoublePoint2.prototype = ClipperLib.DoublePoint.prototype;\n                    ClipperLib.PolyNode = function() {\n                        this.m_Parent = null;\n                        this.m_polygon = new ClipperLib.Path();\n                        this.m_Index = 0;\n                        this.m_jointype = 0;\n                        this.m_endtype = 0;\n                        this.m_Childs = [];\n                        this.IsOpen = false;\n                    };\n                    ClipperLib.PolyNode.prototype.IsHoleNode = function() {\n                        var result = true;\n                        var node = this.m_Parent;\n                        while(node !== null){\n                            result = !result;\n                            node = node.m_Parent;\n                        }\n                        return result;\n                    };\n                    ClipperLib.PolyNode.prototype.ChildCount = function() {\n                        return this.m_Childs.length;\n                    };\n                    ClipperLib.PolyNode.prototype.Contour = function() {\n                        return this.m_polygon;\n                    };\n                    ClipperLib.PolyNode.prototype.AddChild = function(Child) {\n                        var cnt = this.m_Childs.length;\n                        this.m_Childs.push(Child);\n                        Child.m_Parent = this;\n                        Child.m_Index = cnt;\n                    };\n                    ClipperLib.PolyNode.prototype.GetNext = function() {\n                        if (this.m_Childs.length > 0) {\n                            return this.m_Childs[0];\n                        } else {\n                            return this.GetNextSiblingUp();\n                        }\n                    };\n                    ClipperLib.PolyNode.prototype.GetNextSiblingUp = function() {\n                        if (this.m_Parent === null) {\n                            return null;\n                        } else if (this.m_Index === this.m_Parent.m_Childs.length - 1) {\n                            return this.m_Parent.GetNextSiblingUp();\n                        } else {\n                            return this.m_Parent.m_Childs[this.m_Index + 1];\n                        }\n                    };\n                    ClipperLib.PolyNode.prototype.Childs = function() {\n                        return this.m_Childs;\n                    };\n                    ClipperLib.PolyNode.prototype.Parent = function() {\n                        return this.m_Parent;\n                    };\n                    ClipperLib.PolyNode.prototype.IsHole = function() {\n                        return this.IsHoleNode();\n                    };\n                    ClipperLib.PolyTree = function() {\n                        this.m_AllPolys = [];\n                        ClipperLib.PolyNode.call(this);\n                    };\n                    ClipperLib.PolyTree.prototype.Clear = function() {\n                        for(var i = 0, ilen = this.m_AllPolys.length; i < ilen; i++){\n                            this.m_AllPolys[i] = null;\n                        }\n                        this.m_AllPolys.length = 0;\n                        this.m_Childs.length = 0;\n                    };\n                    ClipperLib.PolyTree.prototype.GetFirst = function() {\n                        if (this.m_Childs.length > 0) {\n                            return this.m_Childs[0];\n                        } else {\n                            return null;\n                        }\n                    };\n                    ClipperLib.PolyTree.prototype.Total = function() {\n                        var result = this.m_AllPolys.length;\n                        if (result > 0 && this.m_Childs[0] !== this.m_AllPolys[0]) {\n                            result--;\n                        }\n                        return result;\n                    };\n                    Inherit(ClipperLib.PolyTree, ClipperLib.PolyNode);\n                    ClipperLib.Math_Abs_Int64 = ClipperLib.Math_Abs_Int32 = ClipperLib.Math_Abs_Double = function(a) {\n                        return Math.abs(a);\n                    };\n                    ClipperLib.Math_Max_Int32_Int32 = function(a, b) {\n                        return Math.max(a, b);\n                    };\n                    if (browser1.msie || browser1.opera || browser1.safari) {\n                        ClipperLib.Cast_Int32 = function(a) {\n                            return a | 0;\n                        };\n                    } else {\n                        ClipperLib.Cast_Int32 = function(a) {\n                            return ~~a;\n                        };\n                    }\n                    if (typeof Number.toInteger === \"undefined\") {\n                        Number.toInteger = null;\n                    }\n                    if (browser1.chrome) {\n                        ClipperLib.Cast_Int64 = function(a) {\n                            if (a < -2147483648 || a > 2147483647) {\n                                return a < 0 ? Math.ceil(a) : Math.floor(a);\n                            } else {\n                                return ~~a;\n                            }\n                        };\n                    } else if (browser1.firefox && typeof Number.toInteger === \"function\") {\n                        ClipperLib.Cast_Int64 = function(a) {\n                            return Number.toInteger(a);\n                        };\n                    } else if (browser1.msie7 || browser1.msie8) {\n                        ClipperLib.Cast_Int64 = function(a) {\n                            return parseInt(a, 10);\n                        };\n                    } else if (browser1.msie) {\n                        ClipperLib.Cast_Int64 = function(a) {\n                            if (a < -2147483648 || a > 2147483647) {\n                                return a < 0 ? Math.ceil(a) : Math.floor(a);\n                            }\n                            return a | 0;\n                        };\n                    } else {\n                        ClipperLib.Cast_Int64 = function(a) {\n                            return a < 0 ? Math.ceil(a) : Math.floor(a);\n                        };\n                    }\n                    ClipperLib.Clear = function(a) {\n                        a.length = 0;\n                    };\n                    ClipperLib.PI = 3.141592653589793;\n                    ClipperLib.PI2 = 2 * 3.141592653589793;\n                    ClipperLib.IntPoint = function() {\n                        var a = arguments, alen = a.length;\n                        this.X = 0;\n                        this.Y = 0;\n                        if (ClipperLib.use_xyz) {\n                            this.Z = 0;\n                            if (alen === 3) {\n                                this.X = a[0];\n                                this.Y = a[1];\n                                this.Z = a[2];\n                            } else if (alen === 2) {\n                                this.X = a[0];\n                                this.Y = a[1];\n                                this.Z = 0;\n                            } else if (alen === 1) {\n                                if (a[0] instanceof ClipperLib.DoublePoint) {\n                                    var dp = a[0];\n                                    this.X = ClipperLib.Clipper.Round(dp.X);\n                                    this.Y = ClipperLib.Clipper.Round(dp.Y);\n                                    this.Z = 0;\n                                } else {\n                                    var pt = a[0];\n                                    if (typeof pt.Z === \"undefined\") {\n                                        pt.Z = 0;\n                                    }\n                                    this.X = pt.X;\n                                    this.Y = pt.Y;\n                                    this.Z = pt.Z;\n                                }\n                            } else {\n                                this.X = 0;\n                                this.Y = 0;\n                                this.Z = 0;\n                            }\n                        } else {\n                            if (alen === 2) {\n                                this.X = a[0];\n                                this.Y = a[1];\n                            } else if (alen === 1) {\n                                if (a[0] instanceof ClipperLib.DoublePoint) {\n                                    var dp = a[0];\n                                    this.X = ClipperLib.Clipper.Round(dp.X);\n                                    this.Y = ClipperLib.Clipper.Round(dp.Y);\n                                } else {\n                                    var pt = a[0];\n                                    this.X = pt.X;\n                                    this.Y = pt.Y;\n                                }\n                            } else {\n                                this.X = 0;\n                                this.Y = 0;\n                            }\n                        }\n                    };\n                    ClipperLib.IntPoint.op_Equality = function(a, b) {\n                        return a.X === b.X && a.Y === b.Y;\n                    };\n                    ClipperLib.IntPoint.op_Inequality = function(a, b) {\n                        return a.X !== b.X || a.Y !== b.Y;\n                    };\n                    ClipperLib.IntPoint0 = function() {\n                        this.X = 0;\n                        this.Y = 0;\n                        if (ClipperLib.use_xyz) {\n                            this.Z = 0;\n                        }\n                    };\n                    ClipperLib.IntPoint0.prototype = ClipperLib.IntPoint.prototype;\n                    ClipperLib.IntPoint1 = function(pt) {\n                        this.X = pt.X;\n                        this.Y = pt.Y;\n                        if (ClipperLib.use_xyz) {\n                            if (typeof pt.Z === \"undefined\") {\n                                this.Z = 0;\n                            } else {\n                                this.Z = pt.Z;\n                            }\n                        }\n                    };\n                    ClipperLib.IntPoint1.prototype = ClipperLib.IntPoint.prototype;\n                    ClipperLib.IntPoint1dp = function(dp) {\n                        this.X = ClipperLib.Clipper.Round(dp.X);\n                        this.Y = ClipperLib.Clipper.Round(dp.Y);\n                        if (ClipperLib.use_xyz) {\n                            this.Z = 0;\n                        }\n                    };\n                    ClipperLib.IntPoint1dp.prototype = ClipperLib.IntPoint.prototype;\n                    ClipperLib.IntPoint2 = function(x, y, z) {\n                        this.X = x;\n                        this.Y = y;\n                        if (ClipperLib.use_xyz) {\n                            if (typeof z === \"undefined\") {\n                                this.Z = 0;\n                            } else {\n                                this.Z = z;\n                            }\n                        }\n                    };\n                    ClipperLib.IntPoint2.prototype = ClipperLib.IntPoint.prototype;\n                    ClipperLib.IntRect = function() {\n                        var a = arguments, alen = a.length;\n                        if (alen === 4) {\n                            this.left = a[0];\n                            this.top = a[1];\n                            this.right = a[2];\n                            this.bottom = a[3];\n                        } else if (alen === 1) {\n                            var ir = a[0];\n                            this.left = ir.left;\n                            this.top = ir.top;\n                            this.right = ir.right;\n                            this.bottom = ir.bottom;\n                        } else {\n                            this.left = 0;\n                            this.top = 0;\n                            this.right = 0;\n                            this.bottom = 0;\n                        }\n                    };\n                    ClipperLib.IntRect0 = function() {\n                        this.left = 0;\n                        this.top = 0;\n                        this.right = 0;\n                        this.bottom = 0;\n                    };\n                    ClipperLib.IntRect0.prototype = ClipperLib.IntRect.prototype;\n                    ClipperLib.IntRect1 = function(ir) {\n                        this.left = ir.left;\n                        this.top = ir.top;\n                        this.right = ir.right;\n                        this.bottom = ir.bottom;\n                    };\n                    ClipperLib.IntRect1.prototype = ClipperLib.IntRect.prototype;\n                    ClipperLib.IntRect4 = function(l, t, r, b) {\n                        this.left = l;\n                        this.top = t;\n                        this.right = r;\n                        this.bottom = b;\n                    };\n                    ClipperLib.IntRect4.prototype = ClipperLib.IntRect.prototype;\n                    ClipperLib.ClipType = {\n                        ctIntersection: 0,\n                        ctUnion: 1,\n                        ctDifference: 2,\n                        ctXor: 3\n                    };\n                    ClipperLib.PolyType = {\n                        ptSubject: 0,\n                        ptClip: 1\n                    };\n                    ClipperLib.PolyFillType = {\n                        pftEvenOdd: 0,\n                        pftNonZero: 1,\n                        pftPositive: 2,\n                        pftNegative: 3\n                    };\n                    ClipperLib.JoinType = {\n                        jtSquare: 0,\n                        jtRound: 1,\n                        jtMiter: 2\n                    };\n                    ClipperLib.EndType = {\n                        etOpenSquare: 0,\n                        etOpenRound: 1,\n                        etOpenButt: 2,\n                        etClosedLine: 3,\n                        etClosedPolygon: 4\n                    };\n                    ClipperLib.EdgeSide = {\n                        esLeft: 0,\n                        esRight: 1\n                    };\n                    ClipperLib.Direction = {\n                        dRightToLeft: 0,\n                        dLeftToRight: 1\n                    };\n                    ClipperLib.TEdge = function() {\n                        this.Bot = new ClipperLib.IntPoint0();\n                        this.Curr = new ClipperLib.IntPoint0();\n                        this.Top = new ClipperLib.IntPoint0();\n                        this.Delta = new ClipperLib.IntPoint0();\n                        this.Dx = 0;\n                        this.PolyTyp = ClipperLib.PolyType.ptSubject;\n                        this.Side = ClipperLib.EdgeSide.esLeft;\n                        this.WindDelta = 0;\n                        this.WindCnt = 0;\n                        this.WindCnt2 = 0;\n                        this.OutIdx = 0;\n                        this.Next = null;\n                        this.Prev = null;\n                        this.NextInLML = null;\n                        this.NextInAEL = null;\n                        this.PrevInAEL = null;\n                        this.NextInSEL = null;\n                        this.PrevInSEL = null;\n                    };\n                    ClipperLib.IntersectNode = function() {\n                        this.Edge1 = null;\n                        this.Edge2 = null;\n                        this.Pt = new ClipperLib.IntPoint0();\n                    };\n                    ClipperLib.MyIntersectNodeSort = function() {\n                    };\n                    ClipperLib.MyIntersectNodeSort.Compare = function(node1, node2) {\n                        var i = node2.Pt.Y - node1.Pt.Y;\n                        if (i > 0) {\n                            return 1;\n                        } else if (i < 0) {\n                            return -1;\n                        } else {\n                            return 0;\n                        }\n                    };\n                    ClipperLib.LocalMinima = function() {\n                        this.Y = 0;\n                        this.LeftBound = null;\n                        this.RightBound = null;\n                        this.Next = null;\n                    };\n                    ClipperLib.Scanbeam = function() {\n                        this.Y = 0;\n                        this.Next = null;\n                    };\n                    ClipperLib.Maxima = function() {\n                        this.X = 0;\n                        this.Next = null;\n                        this.Prev = null;\n                    };\n                    ClipperLib.OutRec = function() {\n                        this.Idx = 0;\n                        this.IsHole = false;\n                        this.IsOpen = false;\n                        this.FirstLeft = null;\n                        this.Pts = null;\n                        this.BottomPt = null;\n                        this.PolyNode = null;\n                    };\n                    ClipperLib.OutPt = function() {\n                        this.Idx = 0;\n                        this.Pt = new ClipperLib.IntPoint0();\n                        this.Next = null;\n                        this.Prev = null;\n                    };\n                    ClipperLib.Join = function() {\n                        this.OutPt1 = null;\n                        this.OutPt2 = null;\n                        this.OffPt = new ClipperLib.IntPoint0();\n                    };\n                    ClipperLib.ClipperBase = function() {\n                        this.m_MinimaList = null;\n                        this.m_CurrentLM = null;\n                        this.m_edges = new Array();\n                        this.m_UseFullRange = false;\n                        this.m_HasOpenPaths = false;\n                        this.PreserveCollinear = false;\n                        this.m_Scanbeam = null;\n                        this.m_PolyOuts = null;\n                        this.m_ActiveEdges = null;\n                    };\n                    ClipperLib.ClipperBase.horizontal = -9007199254740992;\n                    ClipperLib.ClipperBase.Skip = -2;\n                    ClipperLib.ClipperBase.Unassigned = -1;\n                    ClipperLib.ClipperBase.tolerance = 0.00000000000000000001;\n                    ClipperLib.ClipperBase.loRange = 47453132;\n                    ClipperLib.ClipperBase.hiRange = 4503599627370495;\n                    ClipperLib.ClipperBase.near_zero = function(val) {\n                        return val > -ClipperLib.ClipperBase.tolerance && val < ClipperLib.ClipperBase.tolerance;\n                    };\n                    ClipperLib.ClipperBase.IsHorizontal = function(e) {\n                        return e.Delta.Y === 0;\n                    };\n                    ClipperLib.ClipperBase.prototype.PointIsVertex = function(pt, pp) {\n                        var pp2 = pp;\n                        do {\n                            if (ClipperLib.IntPoint.op_Equality(pp2.Pt, pt)) {\n                                return true;\n                            }\n                            pp2 = pp2.Next;\n                        }while (pp2 !== pp)\n                        return false;\n                    };\n                    ClipperLib.ClipperBase.prototype.PointOnLineSegment = function(pt, linePt1, linePt2, UseFullRange) {\n                        if (UseFullRange) {\n                            return pt.X === linePt1.X && pt.Y === linePt1.Y || pt.X === linePt2.X && pt.Y === linePt2.Y || pt.X > linePt1.X === pt.X < linePt2.X && pt.Y > linePt1.Y === pt.Y < linePt2.Y && Int128.op_Equality(Int128.Int128Mul(pt.X - linePt1.X, linePt2.Y - linePt1.Y), Int128.Int128Mul(linePt2.X - linePt1.X, pt.Y - linePt1.Y));\n                        } else {\n                            return pt.X === linePt1.X && pt.Y === linePt1.Y || pt.X === linePt2.X && pt.Y === linePt2.Y || pt.X > linePt1.X === pt.X < linePt2.X && pt.Y > linePt1.Y === pt.Y < linePt2.Y && (pt.X - linePt1.X) * (linePt2.Y - linePt1.Y) === (linePt2.X - linePt1.X) * (pt.Y - linePt1.Y);\n                        }\n                    };\n                    ClipperLib.ClipperBase.prototype.PointOnPolygon = function(pt, pp, UseFullRange) {\n                        var pp2 = pp;\n                        while(true){\n                            if (this.PointOnLineSegment(pt, pp2.Pt, pp2.Next.Pt, UseFullRange)) {\n                                return true;\n                            }\n                            pp2 = pp2.Next;\n                            if (pp2 === pp) {\n                                break;\n                            }\n                        }\n                        return false;\n                    };\n                    ClipperLib.ClipperBase.prototype.SlopesEqual = ClipperLib.ClipperBase.SlopesEqual = function() {\n                        var a = arguments, alen = a.length;\n                        var e1, e2, pt1, pt2, pt3, pt4, UseFullRange;\n                        if (alen === 3) {\n                            e1 = a[0];\n                            e2 = a[1];\n                            UseFullRange = a[2];\n                            if (UseFullRange) {\n                                return Int128.op_Equality(Int128.Int128Mul(e1.Delta.Y, e2.Delta.X), Int128.Int128Mul(e1.Delta.X, e2.Delta.Y));\n                            } else {\n                                return ClipperLib.Cast_Int64(e1.Delta.Y * e2.Delta.X) === ClipperLib.Cast_Int64(e1.Delta.X * e2.Delta.Y);\n                            }\n                        } else if (alen === 4) {\n                            pt1 = a[0];\n                            pt2 = a[1];\n                            pt3 = a[2];\n                            UseFullRange = a[3];\n                            if (UseFullRange) {\n                                return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt2.X - pt3.X), Int128.Int128Mul(pt1.X - pt2.X, pt2.Y - pt3.Y));\n                            } else {\n                                return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt2.X - pt3.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt2.Y - pt3.Y)) === 0;\n                            }\n                        } else {\n                            pt1 = a[0];\n                            pt2 = a[1];\n                            pt3 = a[2];\n                            pt4 = a[3];\n                            UseFullRange = a[4];\n                            if (UseFullRange) {\n                                return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt3.X - pt4.X), Int128.Int128Mul(pt1.X - pt2.X, pt3.Y - pt4.Y));\n                            } else {\n                                return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt3.X - pt4.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt3.Y - pt4.Y)) === 0;\n                            }\n                        }\n                    };\n                    ClipperLib.ClipperBase.SlopesEqual3 = function(e1, e2, UseFullRange) {\n                        if (UseFullRange) {\n                            return Int128.op_Equality(Int128.Int128Mul(e1.Delta.Y, e2.Delta.X), Int128.Int128Mul(e1.Delta.X, e2.Delta.Y));\n                        } else {\n                            return ClipperLib.Cast_Int64(e1.Delta.Y * e2.Delta.X) === ClipperLib.Cast_Int64(e1.Delta.X * e2.Delta.Y);\n                        }\n                    };\n                    ClipperLib.ClipperBase.SlopesEqual4 = function(pt1, pt2, pt3, UseFullRange) {\n                        if (UseFullRange) {\n                            return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt2.X - pt3.X), Int128.Int128Mul(pt1.X - pt2.X, pt2.Y - pt3.Y));\n                        } else {\n                            return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt2.X - pt3.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt2.Y - pt3.Y)) === 0;\n                        }\n                    };\n                    ClipperLib.ClipperBase.SlopesEqual5 = function(pt1, pt2, pt3, pt4, UseFullRange) {\n                        if (UseFullRange) {\n                            return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt3.X - pt4.X), Int128.Int128Mul(pt1.X - pt2.X, pt3.Y - pt4.Y));\n                        } else {\n                            return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt3.X - pt4.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt3.Y - pt4.Y)) === 0;\n                        }\n                    };\n                    ClipperLib.ClipperBase.prototype.Clear = function() {\n                        this.DisposeLocalMinimaList();\n                        for(var i = 0, ilen = this.m_edges.length; i < ilen; ++i){\n                            for(var j = 0, jlen = this.m_edges[i].length; j < jlen; ++j){\n                                this.m_edges[i][j] = null;\n                            }\n                            ClipperLib.Clear(this.m_edges[i]);\n                        }\n                        ClipperLib.Clear(this.m_edges);\n                        this.m_UseFullRange = false;\n                        this.m_HasOpenPaths = false;\n                    };\n                    ClipperLib.ClipperBase.prototype.DisposeLocalMinimaList = function() {\n                        while(this.m_MinimaList !== null){\n                            var tmpLm = this.m_MinimaList.Next;\n                            this.m_MinimaList = null;\n                            this.m_MinimaList = tmpLm;\n                        }\n                        this.m_CurrentLM = null;\n                    };\n                    ClipperLib.ClipperBase.prototype.RangeTest = function(Pt, useFullRange) {\n                        if (useFullRange.Value) {\n                            if (Pt.X > ClipperLib.ClipperBase.hiRange || Pt.Y > ClipperLib.ClipperBase.hiRange || -Pt.X > ClipperLib.ClipperBase.hiRange || -Pt.Y > ClipperLib.ClipperBase.hiRange) {\n                                ClipperLib.Error(\"Coordinate outside allowed range in RangeTest().\");\n                            }\n                        } else if (Pt.X > ClipperLib.ClipperBase.loRange || Pt.Y > ClipperLib.ClipperBase.loRange || -Pt.X > ClipperLib.ClipperBase.loRange || -Pt.Y > ClipperLib.ClipperBase.loRange) {\n                            useFullRange.Value = true;\n                            this.RangeTest(Pt, useFullRange);\n                        }\n                    };\n                    ClipperLib.ClipperBase.prototype.InitEdge = function(e, eNext, ePrev, pt) {\n                        e.Next = eNext;\n                        e.Prev = ePrev;\n                        e.Curr.X = pt.X;\n                        e.Curr.Y = pt.Y;\n                        if (ClipperLib.use_xyz) {\n                            e.Curr.Z = pt.Z;\n                        }\n                        e.OutIdx = -1;\n                    };\n                    ClipperLib.ClipperBase.prototype.InitEdge2 = function(e, polyType) {\n                        if (e.Curr.Y >= e.Next.Curr.Y) {\n                            e.Bot.X = e.Curr.X;\n                            e.Bot.Y = e.Curr.Y;\n                            if (ClipperLib.use_xyz) {\n                                e.Bot.Z = e.Curr.Z;\n                            }\n                            e.Top.X = e.Next.Curr.X;\n                            e.Top.Y = e.Next.Curr.Y;\n                            if (ClipperLib.use_xyz) {\n                                e.Top.Z = e.Next.Curr.Z;\n                            }\n                        } else {\n                            e.Top.X = e.Curr.X;\n                            e.Top.Y = e.Curr.Y;\n                            if (ClipperLib.use_xyz) {\n                                e.Top.Z = e.Curr.Z;\n                            }\n                            e.Bot.X = e.Next.Curr.X;\n                            e.Bot.Y = e.Next.Curr.Y;\n                            if (ClipperLib.use_xyz) {\n                                e.Bot.Z = e.Next.Curr.Z;\n                            }\n                        }\n                        this.SetDx(e);\n                        e.PolyTyp = polyType;\n                    };\n                    ClipperLib.ClipperBase.prototype.FindNextLocMin = function(E) {\n                        var E2;\n                        for(;;){\n                            while(ClipperLib.IntPoint.op_Inequality(E.Bot, E.Prev.Bot) || ClipperLib.IntPoint.op_Equality(E.Curr, E.Top)){\n                                E = E.Next;\n                            }\n                            if (E.Dx !== ClipperLib.ClipperBase.horizontal && E.Prev.Dx !== ClipperLib.ClipperBase.horizontal) {\n                                break;\n                            }\n                            while(E.Prev.Dx === ClipperLib.ClipperBase.horizontal){\n                                E = E.Prev;\n                            }\n                            E2 = E;\n                            while(E.Dx === ClipperLib.ClipperBase.horizontal){\n                                E = E.Next;\n                            }\n                            if (E.Top.Y === E.Prev.Bot.Y) {\n                                continue;\n                            }\n                            if (E2.Prev.Bot.X < E.Bot.X) {\n                                E = E2;\n                            }\n                            break;\n                        }\n                        return E;\n                    };\n                    ClipperLib.ClipperBase.prototype.ProcessBound = function(E, LeftBoundIsForward) {\n                        var EStart;\n                        var Result = E;\n                        var Horz;\n                        if (Result.OutIdx === ClipperLib.ClipperBase.Skip) {\n                            E = Result;\n                            if (LeftBoundIsForward) {\n                                while(E.Top.Y === E.Next.Bot.Y){\n                                    E = E.Next;\n                                }\n                                while(E !== Result && E.Dx === ClipperLib.ClipperBase.horizontal){\n                                    E = E.Prev;\n                                }\n                            } else {\n                                while(E.Top.Y === E.Prev.Bot.Y){\n                                    E = E.Prev;\n                                }\n                                while(E !== Result && E.Dx === ClipperLib.ClipperBase.horizontal){\n                                    E = E.Next;\n                                }\n                            }\n                            if (E === Result) {\n                                if (LeftBoundIsForward) {\n                                    Result = E.Next;\n                                } else {\n                                    Result = E.Prev;\n                                }\n                            } else {\n                                if (LeftBoundIsForward) {\n                                    E = Result.Next;\n                                } else {\n                                    E = Result.Prev;\n                                }\n                                var locMin = new ClipperLib.LocalMinima();\n                                locMin.Next = null;\n                                locMin.Y = E.Bot.Y;\n                                locMin.LeftBound = null;\n                                locMin.RightBound = E;\n                                E.WindDelta = 0;\n                                Result = this.ProcessBound(E, LeftBoundIsForward);\n                                this.InsertLocalMinima(locMin);\n                            }\n                            return Result;\n                        }\n                        if (E.Dx === ClipperLib.ClipperBase.horizontal) {\n                            if (LeftBoundIsForward) {\n                                EStart = E.Prev;\n                            } else {\n                                EStart = E.Next;\n                            }\n                            if (EStart.Dx === ClipperLib.ClipperBase.horizontal) {\n                                if (EStart.Bot.X !== E.Bot.X && EStart.Top.X !== E.Bot.X) {\n                                    this.ReverseHorizontal(E);\n                                }\n                            } else if (EStart.Bot.X !== E.Bot.X) {\n                                this.ReverseHorizontal(E);\n                            }\n                        }\n                        EStart = E;\n                        if (LeftBoundIsForward) {\n                            while(Result.Top.Y === Result.Next.Bot.Y && Result.Next.OutIdx !== ClipperLib.ClipperBase.Skip){\n                                Result = Result.Next;\n                            }\n                            if (Result.Dx === ClipperLib.ClipperBase.horizontal && Result.Next.OutIdx !== ClipperLib.ClipperBase.Skip) {\n                                Horz = Result;\n                                while(Horz.Prev.Dx === ClipperLib.ClipperBase.horizontal){\n                                    Horz = Horz.Prev;\n                                }\n                                if (Horz.Prev.Top.X > Result.Next.Top.X) {\n                                    Result = Horz.Prev;\n                                }\n                            }\n                            while(E !== Result){\n                                E.NextInLML = E.Next;\n                                if (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Prev.Top.X) {\n                                    this.ReverseHorizontal(E);\n                                }\n                                E = E.Next;\n                            }\n                            if (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Prev.Top.X) {\n                                this.ReverseHorizontal(E);\n                            }\n                            Result = Result.Next;\n                        } else {\n                            while(Result.Top.Y === Result.Prev.Bot.Y && Result.Prev.OutIdx !== ClipperLib.ClipperBase.Skip){\n                                Result = Result.Prev;\n                            }\n                            if (Result.Dx === ClipperLib.ClipperBase.horizontal && Result.Prev.OutIdx !== ClipperLib.ClipperBase.Skip) {\n                                Horz = Result;\n                                while(Horz.Next.Dx === ClipperLib.ClipperBase.horizontal){\n                                    Horz = Horz.Next;\n                                }\n                                if (Horz.Next.Top.X === Result.Prev.Top.X || Horz.Next.Top.X > Result.Prev.Top.X) {\n                                    Result = Horz.Next;\n                                }\n                            }\n                            while(E !== Result){\n                                E.NextInLML = E.Prev;\n                                if (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Next.Top.X) {\n                                    this.ReverseHorizontal(E);\n                                }\n                                E = E.Prev;\n                            }\n                            if (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Next.Top.X) {\n                                this.ReverseHorizontal(E);\n                            }\n                            Result = Result.Prev;\n                        }\n                        return Result;\n                    };\n                    ClipperLib.ClipperBase.prototype.AddPath = function(pg, polyType, Closed) {\n                        if (ClipperLib.use_lines) {\n                            if (!Closed && polyType === ClipperLib.PolyType.ptClip) {\n                                ClipperLib.Error(\"AddPath: Open paths must be subject.\");\n                            }\n                        } else {\n                            if (!Closed) {\n                                ClipperLib.Error(\"AddPath: Open paths have been disabled.\");\n                            }\n                        }\n                        var highI = pg.length - 1;\n                        if (Closed) {\n                            while(highI > 0 && ClipperLib.IntPoint.op_Equality(pg[highI], pg[0])){\n                                --highI;\n                            }\n                        }\n                        while(highI > 0 && ClipperLib.IntPoint.op_Equality(pg[highI], pg[highI - 1])){\n                            --highI;\n                        }\n                        if (Closed && highI < 2 || !Closed && highI < 1) {\n                            return false;\n                        }\n                        var edges = new Array();\n                        for(var i = 0; i <= highI; i++){\n                            edges.push(new ClipperLib.TEdge());\n                        }\n                        var IsFlat = true;\n                        edges[1].Curr.X = pg[1].X;\n                        edges[1].Curr.Y = pg[1].Y;\n                        if (ClipperLib.use_xyz) {\n                            edges[1].Curr.Z = pg[1].Z;\n                        }\n                        var $1 = {\n                            Value: this.m_UseFullRange\n                        };\n                        this.RangeTest(pg[0], $1);\n                        this.m_UseFullRange = $1.Value;\n                        $1.Value = this.m_UseFullRange;\n                        this.RangeTest(pg[highI], $1);\n                        this.m_UseFullRange = $1.Value;\n                        this.InitEdge(edges[0], edges[1], edges[highI], pg[0]);\n                        this.InitEdge(edges[highI], edges[0], edges[highI - 1], pg[highI]);\n                        for(var i = highI - 1; i >= 1; --i){\n                            $1.Value = this.m_UseFullRange;\n                            this.RangeTest(pg[i], $1);\n                            this.m_UseFullRange = $1.Value;\n                            this.InitEdge(edges[i], edges[i + 1], edges[i - 1], pg[i]);\n                        }\n                        var eStart = edges[0];\n                        var E = eStart, eLoopStop = eStart;\n                        for(;;){\n                            if (E.Curr === E.Next.Curr && (Closed || E.Next !== eStart)) {\n                                if (E === E.Next) {\n                                    break;\n                                }\n                                if (E === eStart) {\n                                    eStart = E.Next;\n                                }\n                                E = this.RemoveEdge(E);\n                                eLoopStop = E;\n                                continue;\n                            }\n                            if (E.Prev === E.Next) {\n                                break;\n                            } else if (Closed && ClipperLib.ClipperBase.SlopesEqual4(E.Prev.Curr, E.Curr, E.Next.Curr, this.m_UseFullRange) && (!this.PreserveCollinear || !this.Pt2IsBetweenPt1AndPt3(E.Prev.Curr, E.Curr, E.Next.Curr))) {\n                                if (E === eStart) {\n                                    eStart = E.Next;\n                                }\n                                E = this.RemoveEdge(E);\n                                E = E.Prev;\n                                eLoopStop = E;\n                                continue;\n                            }\n                            E = E.Next;\n                            if (E === eLoopStop || !Closed && E.Next === eStart) {\n                                break;\n                            }\n                        }\n                        if (!Closed && E === E.Next || Closed && E.Prev === E.Next) {\n                            return false;\n                        }\n                        if (!Closed) {\n                            this.m_HasOpenPaths = true;\n                            eStart.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n                        }\n                        E = eStart;\n                        do {\n                            this.InitEdge2(E, polyType);\n                            E = E.Next;\n                            if (IsFlat && E.Curr.Y !== eStart.Curr.Y) {\n                                IsFlat = false;\n                            }\n                        }while (E !== eStart)\n                        if (IsFlat) {\n                            if (Closed) {\n                                return false;\n                            }\n                            E.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n                            var locMin = new ClipperLib.LocalMinima();\n                            locMin.Next = null;\n                            locMin.Y = E.Bot.Y;\n                            locMin.LeftBound = null;\n                            locMin.RightBound = E;\n                            locMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n                            locMin.RightBound.WindDelta = 0;\n                            for(;;){\n                                if (E.Bot.X !== E.Prev.Top.X) {\n                                    this.ReverseHorizontal(E);\n                                }\n                                if (E.Next.OutIdx === ClipperLib.ClipperBase.Skip) {\n                                    break;\n                                }\n                                E.NextInLML = E.Next;\n                                E = E.Next;\n                            }\n                            this.InsertLocalMinima(locMin);\n                            this.m_edges.push(edges);\n                            return true;\n                        }\n                        this.m_edges.push(edges);\n                        var leftBoundIsForward;\n                        var EMin = null;\n                        if (ClipperLib.IntPoint.op_Equality(E.Prev.Bot, E.Prev.Top)) {\n                            E = E.Next;\n                        }\n                        for(;;){\n                            E = this.FindNextLocMin(E);\n                            if (E === EMin) {\n                                break;\n                            } else if (EMin === null) {\n                                EMin = E;\n                            }\n                            var locMin = new ClipperLib.LocalMinima();\n                            locMin.Next = null;\n                            locMin.Y = E.Bot.Y;\n                            if (E.Dx < E.Prev.Dx) {\n                                locMin.LeftBound = E.Prev;\n                                locMin.RightBound = E;\n                                leftBoundIsForward = false;\n                            } else {\n                                locMin.LeftBound = E;\n                                locMin.RightBound = E.Prev;\n                                leftBoundIsForward = true;\n                            }\n                            locMin.LeftBound.Side = ClipperLib.EdgeSide.esLeft;\n                            locMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n                            if (!Closed) {\n                                locMin.LeftBound.WindDelta = 0;\n                            } else if (locMin.LeftBound.Next === locMin.RightBound) {\n                                locMin.LeftBound.WindDelta = -1;\n                            } else {\n                                locMin.LeftBound.WindDelta = 1;\n                            }\n                            locMin.RightBound.WindDelta = -locMin.LeftBound.WindDelta;\n                            E = this.ProcessBound(locMin.LeftBound, leftBoundIsForward);\n                            if (E.OutIdx === ClipperLib.ClipperBase.Skip) {\n                                E = this.ProcessBound(E, leftBoundIsForward);\n                            }\n                            var E2 = this.ProcessBound(locMin.RightBound, !leftBoundIsForward);\n                            if (E2.OutIdx === ClipperLib.ClipperBase.Skip) {\n                                E2 = this.ProcessBound(E2, !leftBoundIsForward);\n                            }\n                            if (locMin.LeftBound.OutIdx === ClipperLib.ClipperBase.Skip) {\n                                locMin.LeftBound = null;\n                            } else if (locMin.RightBound.OutIdx === ClipperLib.ClipperBase.Skip) {\n                                locMin.RightBound = null;\n                            }\n                            this.InsertLocalMinima(locMin);\n                            if (!leftBoundIsForward) {\n                                E = E2;\n                            }\n                        }\n                        return true;\n                    };\n                    ClipperLib.ClipperBase.prototype.AddPaths = function(ppg, polyType, closed) {\n                        var result = false;\n                        for(var i = 0, ilen = ppg.length; i < ilen; ++i){\n                            if (this.AddPath(ppg[i], polyType, closed)) {\n                                result = true;\n                            }\n                        }\n                        return result;\n                    };\n                    ClipperLib.ClipperBase.prototype.Pt2IsBetweenPt1AndPt3 = function(pt1, pt2, pt3) {\n                        if (ClipperLib.IntPoint.op_Equality(pt1, pt3) || ClipperLib.IntPoint.op_Equality(pt1, pt2) || ClipperLib.IntPoint.op_Equality(pt3, pt2)) {\n                            return false;\n                        } else if (pt1.X !== pt3.X) {\n                            return pt2.X > pt1.X === pt2.X < pt3.X;\n                        } else {\n                            return pt2.Y > pt1.Y === pt2.Y < pt3.Y;\n                        }\n                    };\n                    ClipperLib.ClipperBase.prototype.RemoveEdge = function(e) {\n                        e.Prev.Next = e.Next;\n                        e.Next.Prev = e.Prev;\n                        var result = e.Next;\n                        e.Prev = null;\n                        return result;\n                    };\n                    ClipperLib.ClipperBase.prototype.SetDx = function(e) {\n                        e.Delta.X = e.Top.X - e.Bot.X;\n                        e.Delta.Y = e.Top.Y - e.Bot.Y;\n                        if (e.Delta.Y === 0) {\n                            e.Dx = ClipperLib.ClipperBase.horizontal;\n                        } else {\n                            e.Dx = e.Delta.X / e.Delta.Y;\n                        }\n                    };\n                    ClipperLib.ClipperBase.prototype.InsertLocalMinima = function(newLm) {\n                        if (this.m_MinimaList === null) {\n                            this.m_MinimaList = newLm;\n                        } else if (newLm.Y >= this.m_MinimaList.Y) {\n                            newLm.Next = this.m_MinimaList;\n                            this.m_MinimaList = newLm;\n                        } else {\n                            var tmpLm = this.m_MinimaList;\n                            while(tmpLm.Next !== null && newLm.Y < tmpLm.Next.Y){\n                                tmpLm = tmpLm.Next;\n                            }\n                            newLm.Next = tmpLm.Next;\n                            tmpLm.Next = newLm;\n                        }\n                    };\n                    ClipperLib.ClipperBase.prototype.PopLocalMinima = function(Y, current) {\n                        current.v = this.m_CurrentLM;\n                        if (this.m_CurrentLM !== null && this.m_CurrentLM.Y === Y) {\n                            this.m_CurrentLM = this.m_CurrentLM.Next;\n                            return true;\n                        }\n                        return false;\n                    };\n                    ClipperLib.ClipperBase.prototype.ReverseHorizontal = function(e) {\n                        var tmp = e.Top.X;\n                        e.Top.X = e.Bot.X;\n                        e.Bot.X = tmp;\n                        if (ClipperLib.use_xyz) {\n                            tmp = e.Top.Z;\n                            e.Top.Z = e.Bot.Z;\n                            e.Bot.Z = tmp;\n                        }\n                    };\n                    ClipperLib.ClipperBase.prototype.Reset = function() {\n                        this.m_CurrentLM = this.m_MinimaList;\n                        if (this.m_CurrentLM === null) {\n                            return;\n                        }\n                        this.m_Scanbeam = null;\n                        var lm = this.m_MinimaList;\n                        while(lm !== null){\n                            this.InsertScanbeam(lm.Y);\n                            var e = lm.LeftBound;\n                            if (e !== null) {\n                                e.Curr.X = e.Bot.X;\n                                e.Curr.Y = e.Bot.Y;\n                                if (ClipperLib.use_xyz) {\n                                    e.Curr.Z = e.Bot.Z;\n                                }\n                                e.OutIdx = ClipperLib.ClipperBase.Unassigned;\n                            }\n                            e = lm.RightBound;\n                            if (e !== null) {\n                                e.Curr.X = e.Bot.X;\n                                e.Curr.Y = e.Bot.Y;\n                                if (ClipperLib.use_xyz) {\n                                    e.Curr.Z = e.Bot.Z;\n                                }\n                                e.OutIdx = ClipperLib.ClipperBase.Unassigned;\n                            }\n                            lm = lm.Next;\n                        }\n                        this.m_ActiveEdges = null;\n                    };\n                    ClipperLib.ClipperBase.prototype.InsertScanbeam = function(Y) {\n                        if (this.m_Scanbeam === null) {\n                            this.m_Scanbeam = new ClipperLib.Scanbeam();\n                            this.m_Scanbeam.Next = null;\n                            this.m_Scanbeam.Y = Y;\n                        } else if (Y > this.m_Scanbeam.Y) {\n                            var newSb = new ClipperLib.Scanbeam();\n                            newSb.Y = Y;\n                            newSb.Next = this.m_Scanbeam;\n                            this.m_Scanbeam = newSb;\n                        } else {\n                            var sb2 = this.m_Scanbeam;\n                            while(sb2.Next !== null && Y <= sb2.Next.Y){\n                                sb2 = sb2.Next;\n                            }\n                            if (Y === sb2.Y) {\n                                return;\n                            }\n                            var newSb1 = new ClipperLib.Scanbeam();\n                            newSb1.Y = Y;\n                            newSb1.Next = sb2.Next;\n                            sb2.Next = newSb1;\n                        }\n                    };\n                    ClipperLib.ClipperBase.prototype.PopScanbeam = function(Y) {\n                        if (this.m_Scanbeam === null) {\n                            Y.v = 0;\n                            return false;\n                        }\n                        Y.v = this.m_Scanbeam.Y;\n                        this.m_Scanbeam = this.m_Scanbeam.Next;\n                        return true;\n                    };\n                    ClipperLib.ClipperBase.prototype.LocalMinimaPending = function() {\n                        return this.m_CurrentLM !== null;\n                    };\n                    ClipperLib.ClipperBase.prototype.CreateOutRec = function() {\n                        var result = new ClipperLib.OutRec();\n                        result.Idx = ClipperLib.ClipperBase.Unassigned;\n                        result.IsHole = false;\n                        result.IsOpen = false;\n                        result.FirstLeft = null;\n                        result.Pts = null;\n                        result.BottomPt = null;\n                        result.PolyNode = null;\n                        this.m_PolyOuts.push(result);\n                        result.Idx = this.m_PolyOuts.length - 1;\n                        return result;\n                    };\n                    ClipperLib.ClipperBase.prototype.DisposeOutRec = function(index1) {\n                        var outRec = this.m_PolyOuts[index1];\n                        outRec.Pts = null;\n                        outRec = null;\n                        this.m_PolyOuts[index1] = null;\n                    };\n                    ClipperLib.ClipperBase.prototype.UpdateEdgeIntoAEL = function(e) {\n                        if (e.NextInLML === null) {\n                            ClipperLib.Error(\"UpdateEdgeIntoAEL: invalid call\");\n                        }\n                        var AelPrev = e.PrevInAEL;\n                        var AelNext = e.NextInAEL;\n                        e.NextInLML.OutIdx = e.OutIdx;\n                        if (AelPrev !== null) {\n                            AelPrev.NextInAEL = e.NextInLML;\n                        } else {\n                            this.m_ActiveEdges = e.NextInLML;\n                        }\n                        if (AelNext !== null) {\n                            AelNext.PrevInAEL = e.NextInLML;\n                        }\n                        e.NextInLML.Side = e.Side;\n                        e.NextInLML.WindDelta = e.WindDelta;\n                        e.NextInLML.WindCnt = e.WindCnt;\n                        e.NextInLML.WindCnt2 = e.WindCnt2;\n                        e = e.NextInLML;\n                        e.Curr.X = e.Bot.X;\n                        e.Curr.Y = e.Bot.Y;\n                        e.PrevInAEL = AelPrev;\n                        e.NextInAEL = AelNext;\n                        if (!ClipperLib.ClipperBase.IsHorizontal(e)) {\n                            this.InsertScanbeam(e.Top.Y);\n                        }\n                        return e;\n                    };\n                    ClipperLib.ClipperBase.prototype.SwapPositionsInAEL = function(edge1, edge2) {\n                        if (edge1.NextInAEL === edge1.PrevInAEL || edge2.NextInAEL === edge2.PrevInAEL) {\n                            return;\n                        }\n                        if (edge1.NextInAEL === edge2) {\n                            var next = edge2.NextInAEL;\n                            if (next !== null) {\n                                next.PrevInAEL = edge1;\n                            }\n                            var prev = edge1.PrevInAEL;\n                            if (prev !== null) {\n                                prev.NextInAEL = edge2;\n                            }\n                            edge2.PrevInAEL = prev;\n                            edge2.NextInAEL = edge1;\n                            edge1.PrevInAEL = edge2;\n                            edge1.NextInAEL = next;\n                        } else if (edge2.NextInAEL === edge1) {\n                            var next1 = edge1.NextInAEL;\n                            if (next1 !== null) {\n                                next1.PrevInAEL = edge2;\n                            }\n                            var prev1 = edge2.PrevInAEL;\n                            if (prev1 !== null) {\n                                prev1.NextInAEL = edge1;\n                            }\n                            edge1.PrevInAEL = prev1;\n                            edge1.NextInAEL = edge2;\n                            edge2.PrevInAEL = edge1;\n                            edge2.NextInAEL = next1;\n                        } else {\n                            var next2 = edge1.NextInAEL;\n                            var prev2 = edge1.PrevInAEL;\n                            edge1.NextInAEL = edge2.NextInAEL;\n                            if (edge1.NextInAEL !== null) {\n                                edge1.NextInAEL.PrevInAEL = edge1;\n                            }\n                            edge1.PrevInAEL = edge2.PrevInAEL;\n                            if (edge1.PrevInAEL !== null) {\n                                edge1.PrevInAEL.NextInAEL = edge1;\n                            }\n                            edge2.NextInAEL = next2;\n                            if (edge2.NextInAEL !== null) {\n                                edge2.NextInAEL.PrevInAEL = edge2;\n                            }\n                            edge2.PrevInAEL = prev2;\n                            if (edge2.PrevInAEL !== null) {\n                                edge2.PrevInAEL.NextInAEL = edge2;\n                            }\n                        }\n                        if (edge1.PrevInAEL === null) {\n                            this.m_ActiveEdges = edge1;\n                        } else {\n                            if (edge2.PrevInAEL === null) {\n                                this.m_ActiveEdges = edge2;\n                            }\n                        }\n                    };\n                    ClipperLib.ClipperBase.prototype.DeleteFromAEL = function(e) {\n                        var AelPrev = e.PrevInAEL;\n                        var AelNext = e.NextInAEL;\n                        if (AelPrev === null && AelNext === null && e !== this.m_ActiveEdges) {\n                            return;\n                        }\n                        if (AelPrev !== null) {\n                            AelPrev.NextInAEL = AelNext;\n                        } else {\n                            this.m_ActiveEdges = AelNext;\n                        }\n                        if (AelNext !== null) {\n                            AelNext.PrevInAEL = AelPrev;\n                        }\n                        e.NextInAEL = null;\n                        e.PrevInAEL = null;\n                    };\n                    ClipperLib.Clipper = function(InitOptions) {\n                        if (typeof InitOptions === \"undefined\") {\n                            InitOptions = 0;\n                        }\n                        this.m_PolyOuts = null;\n                        this.m_ClipType = ClipperLib.ClipType.ctIntersection;\n                        this.m_Scanbeam = null;\n                        this.m_Maxima = null;\n                        this.m_ActiveEdges = null;\n                        this.m_SortedEdges = null;\n                        this.m_IntersectList = null;\n                        this.m_IntersectNodeComparer = null;\n                        this.m_ExecuteLocked = false;\n                        this.m_ClipFillType = ClipperLib.PolyFillType.pftEvenOdd;\n                        this.m_SubjFillType = ClipperLib.PolyFillType.pftEvenOdd;\n                        this.m_Joins = null;\n                        this.m_GhostJoins = null;\n                        this.m_UsingPolyTree = false;\n                        this.ReverseSolution = false;\n                        this.StrictlySimple = false;\n                        ClipperLib.ClipperBase.call(this);\n                        this.m_Scanbeam = null;\n                        this.m_Maxima = null;\n                        this.m_ActiveEdges = null;\n                        this.m_SortedEdges = null;\n                        this.m_IntersectList = new Array();\n                        this.m_IntersectNodeComparer = ClipperLib.MyIntersectNodeSort.Compare;\n                        this.m_ExecuteLocked = false;\n                        this.m_UsingPolyTree = false;\n                        this.m_PolyOuts = new Array();\n                        this.m_Joins = new Array();\n                        this.m_GhostJoins = new Array();\n                        this.ReverseSolution = (1 & InitOptions) !== 0;\n                        this.StrictlySimple = (2 & InitOptions) !== 0;\n                        this.PreserveCollinear = (4 & InitOptions) !== 0;\n                        if (ClipperLib.use_xyz) {\n                            this.ZFillFunction = null;\n                        }\n                    };\n                    ClipperLib.Clipper.ioReverseSolution = 1;\n                    ClipperLib.Clipper.ioStrictlySimple = 2;\n                    ClipperLib.Clipper.ioPreserveCollinear = 4;\n                    ClipperLib.Clipper.prototype.Clear = function() {\n                        if (this.m_edges.length === 0) {\n                            return;\n                        }\n                        this.DisposeAllPolyPts();\n                        ClipperLib.ClipperBase.prototype.Clear.call(this);\n                    };\n                    ClipperLib.Clipper.prototype.InsertMaxima = function(X) {\n                        var newMax = new ClipperLib.Maxima();\n                        newMax.X = X;\n                        if (this.m_Maxima === null) {\n                            this.m_Maxima = newMax;\n                            this.m_Maxima.Next = null;\n                            this.m_Maxima.Prev = null;\n                        } else if (X < this.m_Maxima.X) {\n                            newMax.Next = this.m_Maxima;\n                            newMax.Prev = null;\n                            this.m_Maxima = newMax;\n                        } else {\n                            var m = this.m_Maxima;\n                            while(m.Next !== null && X >= m.Next.X){\n                                m = m.Next;\n                            }\n                            if (X === m.X) {\n                                return;\n                            }\n                            newMax.Next = m.Next;\n                            newMax.Prev = m;\n                            if (m.Next !== null) {\n                                m.Next.Prev = newMax;\n                            }\n                            m.Next = newMax;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.Execute = function() {\n                        var a = arguments, alen = a.length, ispolytree = a[1] instanceof ClipperLib.PolyTree;\n                        if (alen === 4 && !ispolytree) {\n                            var clipType = a[0], solution = a[1], subjFillType = a[2], clipFillType = a[3];\n                            if (this.m_ExecuteLocked) {\n                                return false;\n                            }\n                            if (this.m_HasOpenPaths) {\n                                ClipperLib.Error(\"Error: PolyTree struct is needed for open path clipping.\");\n                            }\n                            this.m_ExecuteLocked = true;\n                            ClipperLib.Clear(solution);\n                            this.m_SubjFillType = subjFillType;\n                            this.m_ClipFillType = clipFillType;\n                            this.m_ClipType = clipType;\n                            this.m_UsingPolyTree = false;\n                            try {\n                                var succeeded = this.ExecuteInternal();\n                                if (succeeded) {\n                                    this.BuildResult(solution);\n                                }\n                            } finally{\n                                this.DisposeAllPolyPts();\n                                this.m_ExecuteLocked = false;\n                            }\n                            return succeeded;\n                        } else if (alen === 4 && ispolytree) {\n                            var clipType = a[0], polytree = a[1], subjFillType = a[2], clipFillType = a[3];\n                            if (this.m_ExecuteLocked) {\n                                return false;\n                            }\n                            this.m_ExecuteLocked = true;\n                            this.m_SubjFillType = subjFillType;\n                            this.m_ClipFillType = clipFillType;\n                            this.m_ClipType = clipType;\n                            this.m_UsingPolyTree = true;\n                            try {\n                                var succeeded = this.ExecuteInternal();\n                                if (succeeded) {\n                                    this.BuildResult2(polytree);\n                                }\n                            } finally{\n                                this.DisposeAllPolyPts();\n                                this.m_ExecuteLocked = false;\n                            }\n                            return succeeded;\n                        } else if (alen === 2 && !ispolytree) {\n                            var clipType = a[0], solution = a[1];\n                            return this.Execute(clipType, solution, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n                        } else if (alen === 2 && ispolytree) {\n                            var clipType = a[0], polytree = a[1];\n                            return this.Execute(clipType, polytree, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.FixHoleLinkage = function(outRec) {\n                        if (outRec.FirstLeft === null || outRec.IsHole !== outRec.FirstLeft.IsHole && outRec.FirstLeft.Pts !== null) {\n                            return;\n                        }\n                        var orfl = outRec.FirstLeft;\n                        while(orfl !== null && (orfl.IsHole === outRec.IsHole || orfl.Pts === null)){\n                            orfl = orfl.FirstLeft;\n                        }\n                        outRec.FirstLeft = orfl;\n                    };\n                    ClipperLib.Clipper.prototype.ExecuteInternal = function() {\n                        try {\n                            this.Reset();\n                            this.m_SortedEdges = null;\n                            this.m_Maxima = null;\n                            var botY = {\n                            }, topY = {\n                            };\n                            if (!this.PopScanbeam(botY)) {\n                                return false;\n                            }\n                            this.InsertLocalMinimaIntoAEL(botY.v);\n                            while(this.PopScanbeam(topY) || this.LocalMinimaPending()){\n                                this.ProcessHorizontals();\n                                this.m_GhostJoins.length = 0;\n                                if (!this.ProcessIntersections(topY.v)) {\n                                    return false;\n                                }\n                                this.ProcessEdgesAtTopOfScanbeam(topY.v);\n                                botY.v = topY.v;\n                                this.InsertLocalMinimaIntoAEL(botY.v);\n                            }\n                            var outRec, i, ilen;\n                            for(i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++){\n                                outRec = this.m_PolyOuts[i];\n                                if (outRec.Pts === null || outRec.IsOpen) {\n                                    continue;\n                                }\n                                if ((outRec.IsHole ^ this.ReverseSolution) == this.Area$1(outRec) > 0) {\n                                    this.ReversePolyPtLinks(outRec.Pts);\n                                }\n                            }\n                            this.JoinCommonEdges();\n                            for(i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++){\n                                outRec = this.m_PolyOuts[i];\n                                if (outRec.Pts === null) {\n                                    continue;\n                                } else if (outRec.IsOpen) {\n                                    this.FixupOutPolyline(outRec);\n                                } else {\n                                    this.FixupOutPolygon(outRec);\n                                }\n                            }\n                            if (this.StrictlySimple) {\n                                this.DoSimplePolygons();\n                            }\n                            return true;\n                        } finally{\n                            this.m_Joins.length = 0;\n                            this.m_GhostJoins.length = 0;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.DisposeAllPolyPts = function() {\n                        for(var i = 0, ilen = this.m_PolyOuts.length; i < ilen; ++i){\n                            this.DisposeOutRec(i);\n                        }\n                        ClipperLib.Clear(this.m_PolyOuts);\n                    };\n                    ClipperLib.Clipper.prototype.AddJoin = function(Op1, Op2, OffPt) {\n                        var j = new ClipperLib.Join();\n                        j.OutPt1 = Op1;\n                        j.OutPt2 = Op2;\n                        j.OffPt.X = OffPt.X;\n                        j.OffPt.Y = OffPt.Y;\n                        if (ClipperLib.use_xyz) {\n                            j.OffPt.Z = OffPt.Z;\n                        }\n                        this.m_Joins.push(j);\n                    };\n                    ClipperLib.Clipper.prototype.AddGhostJoin = function(Op, OffPt) {\n                        var j = new ClipperLib.Join();\n                        j.OutPt1 = Op;\n                        j.OffPt.X = OffPt.X;\n                        j.OffPt.Y = OffPt.Y;\n                        if (ClipperLib.use_xyz) {\n                            j.OffPt.Z = OffPt.Z;\n                        }\n                        this.m_GhostJoins.push(j);\n                    };\n                    ClipperLib.Clipper.prototype.SetZ = function(pt, e1, e2) {\n                        if (this.ZFillFunction !== null) {\n                            if (pt.Z !== 0 || this.ZFillFunction === null) {\n                                return;\n                            } else if (ClipperLib.IntPoint.op_Equality(pt, e1.Bot)) {\n                                pt.Z = e1.Bot.Z;\n                            } else if (ClipperLib.IntPoint.op_Equality(pt, e1.Top)) {\n                                pt.Z = e1.Top.Z;\n                            } else if (ClipperLib.IntPoint.op_Equality(pt, e2.Bot)) {\n                                pt.Z = e2.Bot.Z;\n                            } else if (ClipperLib.IntPoint.op_Equality(pt, e2.Top)) {\n                                pt.Z = e2.Top.Z;\n                            } else {\n                                this.ZFillFunction(e1.Bot, e1.Top, e2.Bot, e2.Top, pt);\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.InsertLocalMinimaIntoAEL = function(botY) {\n                        var lm = {\n                        };\n                        var lb;\n                        var rb;\n                        while(this.PopLocalMinima(botY, lm)){\n                            lb = lm.v.LeftBound;\n                            rb = lm.v.RightBound;\n                            var Op1 = null;\n                            if (lb === null) {\n                                this.InsertEdgeIntoAEL(rb, null);\n                                this.SetWindingCount(rb);\n                                if (this.IsContributing(rb)) {\n                                    Op1 = this.AddOutPt(rb, rb.Bot);\n                                }\n                            } else if (rb === null) {\n                                this.InsertEdgeIntoAEL(lb, null);\n                                this.SetWindingCount(lb);\n                                if (this.IsContributing(lb)) {\n                                    Op1 = this.AddOutPt(lb, lb.Bot);\n                                }\n                                this.InsertScanbeam(lb.Top.Y);\n                            } else {\n                                this.InsertEdgeIntoAEL(lb, null);\n                                this.InsertEdgeIntoAEL(rb, lb);\n                                this.SetWindingCount(lb);\n                                rb.WindCnt = lb.WindCnt;\n                                rb.WindCnt2 = lb.WindCnt2;\n                                if (this.IsContributing(lb)) {\n                                    Op1 = this.AddLocalMinPoly(lb, rb, lb.Bot);\n                                }\n                                this.InsertScanbeam(lb.Top.Y);\n                            }\n                            if (rb !== null) {\n                                if (ClipperLib.ClipperBase.IsHorizontal(rb)) {\n                                    if (rb.NextInLML !== null) {\n                                        this.InsertScanbeam(rb.NextInLML.Top.Y);\n                                    }\n                                    this.AddEdgeToSEL(rb);\n                                } else {\n                                    this.InsertScanbeam(rb.Top.Y);\n                                }\n                            }\n                            if (lb === null || rb === null) {\n                                continue;\n                            }\n                            if (Op1 !== null && ClipperLib.ClipperBase.IsHorizontal(rb) && this.m_GhostJoins.length > 0 && rb.WindDelta !== 0) {\n                                for(var i = 0, ilen = this.m_GhostJoins.length; i < ilen; i++){\n                                    var j = this.m_GhostJoins[i];\n                                    if (this.HorzSegmentsOverlap(j.OutPt1.Pt.X, j.OffPt.X, rb.Bot.X, rb.Top.X)) {\n                                        this.AddJoin(j.OutPt1, Op1, j.OffPt);\n                                    }\n                                }\n                            }\n                            if (lb.OutIdx >= 0 && lb.PrevInAEL !== null && lb.PrevInAEL.Curr.X === lb.Bot.X && lb.PrevInAEL.OutIdx >= 0 && ClipperLib.ClipperBase.SlopesEqual5(lb.PrevInAEL.Curr, lb.PrevInAEL.Top, lb.Curr, lb.Top, this.m_UseFullRange) && lb.WindDelta !== 0 && lb.PrevInAEL.WindDelta !== 0) {\n                                var Op2 = this.AddOutPt(lb.PrevInAEL, lb.Bot);\n                                this.AddJoin(Op1, Op2, lb.Top);\n                            }\n                            if (lb.NextInAEL !== rb) {\n                                if (rb.OutIdx >= 0 && rb.PrevInAEL.OutIdx >= 0 && ClipperLib.ClipperBase.SlopesEqual5(rb.PrevInAEL.Curr, rb.PrevInAEL.Top, rb.Curr, rb.Top, this.m_UseFullRange) && rb.WindDelta !== 0 && rb.PrevInAEL.WindDelta !== 0) {\n                                    var Op2 = this.AddOutPt(rb.PrevInAEL, rb.Bot);\n                                    this.AddJoin(Op1, Op2, rb.Top);\n                                }\n                                var e = lb.NextInAEL;\n                                if (e !== null) {\n                                    while(e !== rb){\n                                        this.IntersectEdges(rb, e, lb.Curr);\n                                        e = e.NextInAEL;\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.InsertEdgeIntoAEL = function(edge, startEdge) {\n                        if (this.m_ActiveEdges === null) {\n                            edge.PrevInAEL = null;\n                            edge.NextInAEL = null;\n                            this.m_ActiveEdges = edge;\n                        } else if (startEdge === null && this.E2InsertsBeforeE1(this.m_ActiveEdges, edge)) {\n                            edge.PrevInAEL = null;\n                            edge.NextInAEL = this.m_ActiveEdges;\n                            this.m_ActiveEdges.PrevInAEL = edge;\n                            this.m_ActiveEdges = edge;\n                        } else {\n                            if (startEdge === null) {\n                                startEdge = this.m_ActiveEdges;\n                            }\n                            while(startEdge.NextInAEL !== null && !this.E2InsertsBeforeE1(startEdge.NextInAEL, edge)){\n                                startEdge = startEdge.NextInAEL;\n                            }\n                            edge.NextInAEL = startEdge.NextInAEL;\n                            if (startEdge.NextInAEL !== null) {\n                                startEdge.NextInAEL.PrevInAEL = edge;\n                            }\n                            edge.PrevInAEL = startEdge;\n                            startEdge.NextInAEL = edge;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.E2InsertsBeforeE1 = function(e1, e2) {\n                        if (e2.Curr.X === e1.Curr.X) {\n                            if (e2.Top.Y > e1.Top.Y) {\n                                return e2.Top.X < ClipperLib.Clipper.TopX(e1, e2.Top.Y);\n                            } else {\n                                return e1.Top.X > ClipperLib.Clipper.TopX(e2, e1.Top.Y);\n                            }\n                        } else {\n                            return e2.Curr.X < e1.Curr.X;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.IsEvenOddFillType = function(edge) {\n                        if (edge.PolyTyp === ClipperLib.PolyType.ptSubject) {\n                            return this.m_SubjFillType === ClipperLib.PolyFillType.pftEvenOdd;\n                        } else {\n                            return this.m_ClipFillType === ClipperLib.PolyFillType.pftEvenOdd;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.IsEvenOddAltFillType = function(edge) {\n                        if (edge.PolyTyp === ClipperLib.PolyType.ptSubject) {\n                            return this.m_ClipFillType === ClipperLib.PolyFillType.pftEvenOdd;\n                        } else {\n                            return this.m_SubjFillType === ClipperLib.PolyFillType.pftEvenOdd;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.IsContributing = function(edge) {\n                        var pft, pft2;\n                        if (edge.PolyTyp === ClipperLib.PolyType.ptSubject) {\n                            pft = this.m_SubjFillType;\n                            pft2 = this.m_ClipFillType;\n                        } else {\n                            pft = this.m_ClipFillType;\n                            pft2 = this.m_SubjFillType;\n                        }\n                        switch(pft){\n                            case ClipperLib.PolyFillType.pftEvenOdd:\n                                if (edge.WindDelta === 0 && edge.WindCnt !== 1) {\n                                    return false;\n                                }\n                                break;\n                            case ClipperLib.PolyFillType.pftNonZero:\n                                if (Math.abs(edge.WindCnt) !== 1) {\n                                    return false;\n                                }\n                                break;\n                            case ClipperLib.PolyFillType.pftPositive:\n                                if (edge.WindCnt !== 1) {\n                                    return false;\n                                }\n                                break;\n                            default:\n                                if (edge.WindCnt !== -1) {\n                                    return false;\n                                }\n                                break;\n                        }\n                        switch(this.m_ClipType){\n                            case ClipperLib.ClipType.ctIntersection:\n                                switch(pft2){\n                                    case ClipperLib.PolyFillType.pftEvenOdd:\n                                    case ClipperLib.PolyFillType.pftNonZero:\n                                        return edge.WindCnt2 !== 0;\n                                    case ClipperLib.PolyFillType.pftPositive:\n                                        return edge.WindCnt2 > 0;\n                                    default:\n                                        return edge.WindCnt2 < 0;\n                                }\n                            case ClipperLib.ClipType.ctUnion:\n                                switch(pft2){\n                                    case ClipperLib.PolyFillType.pftEvenOdd:\n                                    case ClipperLib.PolyFillType.pftNonZero:\n                                        return edge.WindCnt2 === 0;\n                                    case ClipperLib.PolyFillType.pftPositive:\n                                        return edge.WindCnt2 <= 0;\n                                    default:\n                                        return edge.WindCnt2 >= 0;\n                                }\n                            case ClipperLib.ClipType.ctDifference:\n                                if (edge.PolyTyp === ClipperLib.PolyType.ptSubject) {\n                                    switch(pft2){\n                                        case ClipperLib.PolyFillType.pftEvenOdd:\n                                        case ClipperLib.PolyFillType.pftNonZero:\n                                            return edge.WindCnt2 === 0;\n                                        case ClipperLib.PolyFillType.pftPositive:\n                                            return edge.WindCnt2 <= 0;\n                                        default:\n                                            return edge.WindCnt2 >= 0;\n                                    }\n                                } else {\n                                    switch(pft2){\n                                        case ClipperLib.PolyFillType.pftEvenOdd:\n                                        case ClipperLib.PolyFillType.pftNonZero:\n                                            return edge.WindCnt2 !== 0;\n                                        case ClipperLib.PolyFillType.pftPositive:\n                                            return edge.WindCnt2 > 0;\n                                        default:\n                                            return edge.WindCnt2 < 0;\n                                    }\n                                }\n                            case ClipperLib.ClipType.ctXor:\n                                if (edge.WindDelta === 0) {\n                                    switch(pft2){\n                                        case ClipperLib.PolyFillType.pftEvenOdd:\n                                        case ClipperLib.PolyFillType.pftNonZero:\n                                            return edge.WindCnt2 === 0;\n                                        case ClipperLib.PolyFillType.pftPositive:\n                                            return edge.WindCnt2 <= 0;\n                                        default:\n                                            return edge.WindCnt2 >= 0;\n                                    }\n                                } else {\n                                    return true;\n                                }\n                        }\n                        return true;\n                    };\n                    ClipperLib.Clipper.prototype.SetWindingCount = function(edge) {\n                        var e = edge.PrevInAEL;\n                        while(e !== null && (e.PolyTyp !== edge.PolyTyp || e.WindDelta === 0)){\n                            e = e.PrevInAEL;\n                        }\n                        if (e === null) {\n                            var pft = edge.PolyTyp === ClipperLib.PolyType.ptSubject ? this.m_SubjFillType : this.m_ClipFillType;\n                            if (edge.WindDelta === 0) {\n                                edge.WindCnt = pft === ClipperLib.PolyFillType.pftNegative ? -1 : 1;\n                            } else {\n                                edge.WindCnt = edge.WindDelta;\n                            }\n                            edge.WindCnt2 = 0;\n                            e = this.m_ActiveEdges;\n                        } else if (edge.WindDelta === 0 && this.m_ClipType !== ClipperLib.ClipType.ctUnion) {\n                            edge.WindCnt = 1;\n                            edge.WindCnt2 = e.WindCnt2;\n                            e = e.NextInAEL;\n                        } else if (this.IsEvenOddFillType(edge)) {\n                            if (edge.WindDelta === 0) {\n                                var Inside = true;\n                                var e2 = e.PrevInAEL;\n                                while(e2 !== null){\n                                    if (e2.PolyTyp === e.PolyTyp && e2.WindDelta !== 0) {\n                                        Inside = !Inside;\n                                    }\n                                    e2 = e2.PrevInAEL;\n                                }\n                                edge.WindCnt = Inside ? 0 : 1;\n                            } else {\n                                edge.WindCnt = edge.WindDelta;\n                            }\n                            edge.WindCnt2 = e.WindCnt2;\n                            e = e.NextInAEL;\n                        } else {\n                            if (e.WindCnt * e.WindDelta < 0) {\n                                if (Math.abs(e.WindCnt) > 1) {\n                                    if (e.WindDelta * edge.WindDelta < 0) {\n                                        edge.WindCnt = e.WindCnt;\n                                    } else {\n                                        edge.WindCnt = e.WindCnt + edge.WindDelta;\n                                    }\n                                } else {\n                                    edge.WindCnt = edge.WindDelta === 0 ? 1 : edge.WindDelta;\n                                }\n                            } else {\n                                if (edge.WindDelta === 0) {\n                                    edge.WindCnt = e.WindCnt < 0 ? e.WindCnt - 1 : e.WindCnt + 1;\n                                } else if (e.WindDelta * edge.WindDelta < 0) {\n                                    edge.WindCnt = e.WindCnt;\n                                } else {\n                                    edge.WindCnt = e.WindCnt + edge.WindDelta;\n                                }\n                            }\n                            edge.WindCnt2 = e.WindCnt2;\n                            e = e.NextInAEL;\n                        }\n                        if (this.IsEvenOddAltFillType(edge)) {\n                            while(e !== edge){\n                                if (e.WindDelta !== 0) {\n                                    edge.WindCnt2 = edge.WindCnt2 === 0 ? 1 : 0;\n                                }\n                                e = e.NextInAEL;\n                            }\n                        } else {\n                            while(e !== edge){\n                                edge.WindCnt2 += e.WindDelta;\n                                e = e.NextInAEL;\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.AddEdgeToSEL = function(edge) {\n                        if (this.m_SortedEdges === null) {\n                            this.m_SortedEdges = edge;\n                            edge.PrevInSEL = null;\n                            edge.NextInSEL = null;\n                        } else {\n                            edge.NextInSEL = this.m_SortedEdges;\n                            edge.PrevInSEL = null;\n                            this.m_SortedEdges.PrevInSEL = edge;\n                            this.m_SortedEdges = edge;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.PopEdgeFromSEL = function(e) {\n                        e.v = this.m_SortedEdges;\n                        if (e.v === null) {\n                            return false;\n                        }\n                        var oldE = e.v;\n                        this.m_SortedEdges = e.v.NextInSEL;\n                        if (this.m_SortedEdges !== null) {\n                            this.m_SortedEdges.PrevInSEL = null;\n                        }\n                        oldE.NextInSEL = null;\n                        oldE.PrevInSEL = null;\n                        return true;\n                    };\n                    ClipperLib.Clipper.prototype.CopyAELToSEL = function() {\n                        var e = this.m_ActiveEdges;\n                        this.m_SortedEdges = e;\n                        while(e !== null){\n                            e.PrevInSEL = e.PrevInAEL;\n                            e.NextInSEL = e.NextInAEL;\n                            e = e.NextInAEL;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.SwapPositionsInSEL = function(edge1, edge2) {\n                        if (edge1.NextInSEL === null && edge1.PrevInSEL === null) {\n                            return;\n                        }\n                        if (edge2.NextInSEL === null && edge2.PrevInSEL === null) {\n                            return;\n                        }\n                        if (edge1.NextInSEL === edge2) {\n                            var next = edge2.NextInSEL;\n                            if (next !== null) {\n                                next.PrevInSEL = edge1;\n                            }\n                            var prev = edge1.PrevInSEL;\n                            if (prev !== null) {\n                                prev.NextInSEL = edge2;\n                            }\n                            edge2.PrevInSEL = prev;\n                            edge2.NextInSEL = edge1;\n                            edge1.PrevInSEL = edge2;\n                            edge1.NextInSEL = next;\n                        } else if (edge2.NextInSEL === edge1) {\n                            var next = edge1.NextInSEL;\n                            if (next !== null) {\n                                next.PrevInSEL = edge2;\n                            }\n                            var prev = edge2.PrevInSEL;\n                            if (prev !== null) {\n                                prev.NextInSEL = edge1;\n                            }\n                            edge1.PrevInSEL = prev;\n                            edge1.NextInSEL = edge2;\n                            edge2.PrevInSEL = edge1;\n                            edge2.NextInSEL = next;\n                        } else {\n                            var next = edge1.NextInSEL;\n                            var prev = edge1.PrevInSEL;\n                            edge1.NextInSEL = edge2.NextInSEL;\n                            if (edge1.NextInSEL !== null) {\n                                edge1.NextInSEL.PrevInSEL = edge1;\n                            }\n                            edge1.PrevInSEL = edge2.PrevInSEL;\n                            if (edge1.PrevInSEL !== null) {\n                                edge1.PrevInSEL.NextInSEL = edge1;\n                            }\n                            edge2.NextInSEL = next;\n                            if (edge2.NextInSEL !== null) {\n                                edge2.NextInSEL.PrevInSEL = edge2;\n                            }\n                            edge2.PrevInSEL = prev;\n                            if (edge2.PrevInSEL !== null) {\n                                edge2.PrevInSEL.NextInSEL = edge2;\n                            }\n                        }\n                        if (edge1.PrevInSEL === null) {\n                            this.m_SortedEdges = edge1;\n                        } else if (edge2.PrevInSEL === null) {\n                            this.m_SortedEdges = edge2;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.AddLocalMaxPoly = function(e1, e2, pt) {\n                        this.AddOutPt(e1, pt);\n                        if (e2.WindDelta === 0) {\n                            this.AddOutPt(e2, pt);\n                        }\n                        if (e1.OutIdx === e2.OutIdx) {\n                            e1.OutIdx = -1;\n                            e2.OutIdx = -1;\n                        } else if (e1.OutIdx < e2.OutIdx) {\n                            this.AppendPolygon(e1, e2);\n                        } else {\n                            this.AppendPolygon(e2, e1);\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.AddLocalMinPoly = function(e1, e2, pt) {\n                        var result;\n                        var e, prevE;\n                        if (ClipperLib.ClipperBase.IsHorizontal(e2) || e1.Dx > e2.Dx) {\n                            result = this.AddOutPt(e1, pt);\n                            e2.OutIdx = e1.OutIdx;\n                            e1.Side = ClipperLib.EdgeSide.esLeft;\n                            e2.Side = ClipperLib.EdgeSide.esRight;\n                            e = e1;\n                            if (e.PrevInAEL === e2) {\n                                prevE = e2.PrevInAEL;\n                            } else {\n                                prevE = e.PrevInAEL;\n                            }\n                        } else {\n                            result = this.AddOutPt(e2, pt);\n                            e1.OutIdx = e2.OutIdx;\n                            e1.Side = ClipperLib.EdgeSide.esRight;\n                            e2.Side = ClipperLib.EdgeSide.esLeft;\n                            e = e2;\n                            if (e.PrevInAEL === e1) {\n                                prevE = e1.PrevInAEL;\n                            } else {\n                                prevE = e.PrevInAEL;\n                            }\n                        }\n                        if (prevE !== null && prevE.OutIdx >= 0 && prevE.Top.Y < pt.Y && e.Top.Y < pt.Y) {\n                            var xPrev = ClipperLib.Clipper.TopX(prevE, pt.Y);\n                            var xE = ClipperLib.Clipper.TopX(e, pt.Y);\n                            if (xPrev === xE && e.WindDelta !== 0 && prevE.WindDelta !== 0 && ClipperLib.ClipperBase.SlopesEqual5(new ClipperLib.IntPoint2(xPrev, pt.Y), prevE.Top, new ClipperLib.IntPoint2(xE, pt.Y), e.Top, this.m_UseFullRange)) {\n                                var outPt = this.AddOutPt(prevE, pt);\n                                this.AddJoin(result, outPt, e.Top);\n                            }\n                        }\n                        return result;\n                    };\n                    ClipperLib.Clipper.prototype.AddOutPt = function(e, pt) {\n                        if (e.OutIdx < 0) {\n                            var outRec = this.CreateOutRec();\n                            outRec.IsOpen = e.WindDelta === 0;\n                            var newOp = new ClipperLib.OutPt();\n                            outRec.Pts = newOp;\n                            newOp.Idx = outRec.Idx;\n                            newOp.Pt.X = pt.X;\n                            newOp.Pt.Y = pt.Y;\n                            if (ClipperLib.use_xyz) {\n                                newOp.Pt.Z = pt.Z;\n                            }\n                            newOp.Next = newOp;\n                            newOp.Prev = newOp;\n                            if (!outRec.IsOpen) {\n                                this.SetHoleState(e, outRec);\n                            }\n                            e.OutIdx = outRec.Idx;\n                            return newOp;\n                        } else {\n                            var outRec = this.m_PolyOuts[e.OutIdx];\n                            var op = outRec.Pts;\n                            var ToFront = e.Side === ClipperLib.EdgeSide.esLeft;\n                            if (ToFront && ClipperLib.IntPoint.op_Equality(pt, op.Pt)) {\n                                return op;\n                            } else if (!ToFront && ClipperLib.IntPoint.op_Equality(pt, op.Prev.Pt)) {\n                                return op.Prev;\n                            }\n                            var newOp = new ClipperLib.OutPt();\n                            newOp.Idx = outRec.Idx;\n                            newOp.Pt.X = pt.X;\n                            newOp.Pt.Y = pt.Y;\n                            if (ClipperLib.use_xyz) {\n                                newOp.Pt.Z = pt.Z;\n                            }\n                            newOp.Next = op;\n                            newOp.Prev = op.Prev;\n                            newOp.Prev.Next = newOp;\n                            op.Prev = newOp;\n                            if (ToFront) {\n                                outRec.Pts = newOp;\n                            }\n                            return newOp;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.GetLastOutPt = function(e) {\n                        var outRec = this.m_PolyOuts[e.OutIdx];\n                        if (e.Side === ClipperLib.EdgeSide.esLeft) {\n                            return outRec.Pts;\n                        } else {\n                            return outRec.Pts.Prev;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.SwapPoints = function(pt1, pt2) {\n                        var tmp = new ClipperLib.IntPoint1(pt1.Value);\n                        pt1.Value.X = pt2.Value.X;\n                        pt1.Value.Y = pt2.Value.Y;\n                        if (ClipperLib.use_xyz) {\n                            pt1.Value.Z = pt2.Value.Z;\n                        }\n                        pt2.Value.X = tmp.X;\n                        pt2.Value.Y = tmp.Y;\n                        if (ClipperLib.use_xyz) {\n                            pt2.Value.Z = tmp.Z;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.HorzSegmentsOverlap = function(seg1a, seg1b, seg2a, seg2b) {\n                        var tmp;\n                        if (seg1a > seg1b) {\n                            tmp = seg1a;\n                            seg1a = seg1b;\n                            seg1b = tmp;\n                        }\n                        if (seg2a > seg2b) {\n                            tmp = seg2a;\n                            seg2a = seg2b;\n                            seg2b = tmp;\n                        }\n                        return seg1a < seg2b && seg2a < seg1b;\n                    };\n                    ClipperLib.Clipper.prototype.SetHoleState = function(e, outRec) {\n                        var e2 = e.PrevInAEL;\n                        var eTmp = null;\n                        while(e2 !== null){\n                            if (e2.OutIdx >= 0 && e2.WindDelta !== 0) {\n                                if (eTmp === null) {\n                                    eTmp = e2;\n                                } else if (eTmp.OutIdx === e2.OutIdx) {\n                                    eTmp = null;\n                                }\n                            }\n                            e2 = e2.PrevInAEL;\n                        }\n                        if (eTmp === null) {\n                            outRec.FirstLeft = null;\n                            outRec.IsHole = false;\n                        } else {\n                            outRec.FirstLeft = this.m_PolyOuts[eTmp.OutIdx];\n                            outRec.IsHole = !outRec.FirstLeft.IsHole;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.GetDx = function(pt1, pt2) {\n                        if (pt1.Y === pt2.Y) {\n                            return ClipperLib.ClipperBase.horizontal;\n                        } else {\n                            return (pt2.X - pt1.X) / (pt2.Y - pt1.Y);\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.FirstIsBottomPt = function(btmPt1, btmPt2) {\n                        var p = btmPt1.Prev;\n                        while(ClipperLib.IntPoint.op_Equality(p.Pt, btmPt1.Pt) && p !== btmPt1){\n                            p = p.Prev;\n                        }\n                        var dx1p = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n                        p = btmPt1.Next;\n                        while(ClipperLib.IntPoint.op_Equality(p.Pt, btmPt1.Pt) && p !== btmPt1){\n                            p = p.Next;\n                        }\n                        var dx1n = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n                        p = btmPt2.Prev;\n                        while(ClipperLib.IntPoint.op_Equality(p.Pt, btmPt2.Pt) && p !== btmPt2){\n                            p = p.Prev;\n                        }\n                        var dx2p = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n                        p = btmPt2.Next;\n                        while(ClipperLib.IntPoint.op_Equality(p.Pt, btmPt2.Pt) && p !== btmPt2){\n                            p = p.Next;\n                        }\n                        var dx2n = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n                        if (Math.max(dx1p, dx1n) === Math.max(dx2p, dx2n) && Math.min(dx1p, dx1n) === Math.min(dx2p, dx2n)) {\n                            return this.Area(btmPt1) > 0;\n                        } else {\n                            return dx1p >= dx2p && dx1p >= dx2n || dx1n >= dx2p && dx1n >= dx2n;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.GetBottomPt = function(pp) {\n                        var dups = null;\n                        var p = pp.Next;\n                        while(p !== pp){\n                            if (p.Pt.Y > pp.Pt.Y) {\n                                pp = p;\n                                dups = null;\n                            } else if (p.Pt.Y === pp.Pt.Y && p.Pt.X <= pp.Pt.X) {\n                                if (p.Pt.X < pp.Pt.X) {\n                                    dups = null;\n                                    pp = p;\n                                } else {\n                                    if (p.Next !== pp && p.Prev !== pp) {\n                                        dups = p;\n                                    }\n                                }\n                            }\n                            p = p.Next;\n                        }\n                        if (dups !== null) {\n                            while(dups !== p){\n                                if (!this.FirstIsBottomPt(p, dups)) {\n                                    pp = dups;\n                                }\n                                dups = dups.Next;\n                                while(ClipperLib.IntPoint.op_Inequality(dups.Pt, pp.Pt)){\n                                    dups = dups.Next;\n                                }\n                            }\n                        }\n                        return pp;\n                    };\n                    ClipperLib.Clipper.prototype.GetLowermostRec = function(outRec1, outRec2) {\n                        if (outRec1.BottomPt === null) {\n                            outRec1.BottomPt = this.GetBottomPt(outRec1.Pts);\n                        }\n                        if (outRec2.BottomPt === null) {\n                            outRec2.BottomPt = this.GetBottomPt(outRec2.Pts);\n                        }\n                        var bPt1 = outRec1.BottomPt;\n                        var bPt2 = outRec2.BottomPt;\n                        if (bPt1.Pt.Y > bPt2.Pt.Y) {\n                            return outRec1;\n                        } else if (bPt1.Pt.Y < bPt2.Pt.Y) {\n                            return outRec2;\n                        } else if (bPt1.Pt.X < bPt2.Pt.X) {\n                            return outRec1;\n                        } else if (bPt1.Pt.X > bPt2.Pt.X) {\n                            return outRec2;\n                        } else if (bPt1.Next === bPt1) {\n                            return outRec2;\n                        } else if (bPt2.Next === bPt2) {\n                            return outRec1;\n                        } else if (this.FirstIsBottomPt(bPt1, bPt2)) {\n                            return outRec1;\n                        } else {\n                            return outRec2;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.OutRec1RightOfOutRec2 = function(outRec1, outRec2) {\n                        do {\n                            outRec1 = outRec1.FirstLeft;\n                            if (outRec1 === outRec2) {\n                                return true;\n                            }\n                        }while (outRec1 !== null)\n                        return false;\n                    };\n                    ClipperLib.Clipper.prototype.GetOutRec = function(idx) {\n                        var outrec = this.m_PolyOuts[idx];\n                        while(outrec !== this.m_PolyOuts[outrec.Idx]){\n                            outrec = this.m_PolyOuts[outrec.Idx];\n                        }\n                        return outrec;\n                    };\n                    ClipperLib.Clipper.prototype.AppendPolygon = function(e1, e2) {\n                        var outRec1 = this.m_PolyOuts[e1.OutIdx];\n                        var outRec2 = this.m_PolyOuts[e2.OutIdx];\n                        var holeStateRec;\n                        if (this.OutRec1RightOfOutRec2(outRec1, outRec2)) {\n                            holeStateRec = outRec2;\n                        } else if (this.OutRec1RightOfOutRec2(outRec2, outRec1)) {\n                            holeStateRec = outRec1;\n                        } else {\n                            holeStateRec = this.GetLowermostRec(outRec1, outRec2);\n                        }\n                        var p1_lft = outRec1.Pts;\n                        var p1_rt = p1_lft.Prev;\n                        var p2_lft = outRec2.Pts;\n                        var p2_rt = p2_lft.Prev;\n                        if (e1.Side === ClipperLib.EdgeSide.esLeft) {\n                            if (e2.Side === ClipperLib.EdgeSide.esLeft) {\n                                this.ReversePolyPtLinks(p2_lft);\n                                p2_lft.Next = p1_lft;\n                                p1_lft.Prev = p2_lft;\n                                p1_rt.Next = p2_rt;\n                                p2_rt.Prev = p1_rt;\n                                outRec1.Pts = p2_rt;\n                            } else {\n                                p2_rt.Next = p1_lft;\n                                p1_lft.Prev = p2_rt;\n                                p2_lft.Prev = p1_rt;\n                                p1_rt.Next = p2_lft;\n                                outRec1.Pts = p2_lft;\n                            }\n                        } else {\n                            if (e2.Side === ClipperLib.EdgeSide.esRight) {\n                                this.ReversePolyPtLinks(p2_lft);\n                                p1_rt.Next = p2_rt;\n                                p2_rt.Prev = p1_rt;\n                                p2_lft.Next = p1_lft;\n                                p1_lft.Prev = p2_lft;\n                            } else {\n                                p1_rt.Next = p2_lft;\n                                p2_lft.Prev = p1_rt;\n                                p1_lft.Prev = p2_rt;\n                                p2_rt.Next = p1_lft;\n                            }\n                        }\n                        outRec1.BottomPt = null;\n                        if (holeStateRec === outRec2) {\n                            if (outRec2.FirstLeft !== outRec1) {\n                                outRec1.FirstLeft = outRec2.FirstLeft;\n                            }\n                            outRec1.IsHole = outRec2.IsHole;\n                        }\n                        outRec2.Pts = null;\n                        outRec2.BottomPt = null;\n                        outRec2.FirstLeft = outRec1;\n                        var OKIdx = e1.OutIdx;\n                        var ObsoleteIdx = e2.OutIdx;\n                        e1.OutIdx = -1;\n                        e2.OutIdx = -1;\n                        var e = this.m_ActiveEdges;\n                        while(e !== null){\n                            if (e.OutIdx === ObsoleteIdx) {\n                                e.OutIdx = OKIdx;\n                                e.Side = e1.Side;\n                                break;\n                            }\n                            e = e.NextInAEL;\n                        }\n                        outRec2.Idx = outRec1.Idx;\n                    };\n                    ClipperLib.Clipper.prototype.ReversePolyPtLinks = function(pp) {\n                        if (pp === null) {\n                            return;\n                        }\n                        var pp1;\n                        var pp2;\n                        pp1 = pp;\n                        do {\n                            pp2 = pp1.Next;\n                            pp1.Next = pp1.Prev;\n                            pp1.Prev = pp2;\n                            pp1 = pp2;\n                        }while (pp1 !== pp)\n                    };\n                    ClipperLib.Clipper.SwapSides = function(edge1, edge2) {\n                        var side = edge1.Side;\n                        edge1.Side = edge2.Side;\n                        edge2.Side = side;\n                    };\n                    ClipperLib.Clipper.SwapPolyIndexes = function(edge1, edge2) {\n                        var outIdx = edge1.OutIdx;\n                        edge1.OutIdx = edge2.OutIdx;\n                        edge2.OutIdx = outIdx;\n                    };\n                    ClipperLib.Clipper.prototype.IntersectEdges = function(e1, e2, pt) {\n                        var e1Contributing = e1.OutIdx >= 0;\n                        var e2Contributing = e2.OutIdx >= 0;\n                        if (ClipperLib.use_xyz) {\n                            this.SetZ(pt, e1, e2);\n                        }\n                        if (ClipperLib.use_lines) {\n                            if (e1.WindDelta === 0 || e2.WindDelta === 0) {\n                                if (e1.WindDelta === 0 && e2.WindDelta === 0) {\n                                    return;\n                                } else if (e1.PolyTyp === e2.PolyTyp && e1.WindDelta !== e2.WindDelta && this.m_ClipType === ClipperLib.ClipType.ctUnion) {\n                                    if (e1.WindDelta === 0) {\n                                        if (e2Contributing) {\n                                            this.AddOutPt(e1, pt);\n                                            if (e1Contributing) {\n                                                e1.OutIdx = -1;\n                                            }\n                                        }\n                                    } else {\n                                        if (e1Contributing) {\n                                            this.AddOutPt(e2, pt);\n                                            if (e2Contributing) {\n                                                e2.OutIdx = -1;\n                                            }\n                                        }\n                                    }\n                                } else if (e1.PolyTyp !== e2.PolyTyp) {\n                                    if (e1.WindDelta === 0 && Math.abs(e2.WindCnt) === 1 && (this.m_ClipType !== ClipperLib.ClipType.ctUnion || e2.WindCnt2 === 0)) {\n                                        this.AddOutPt(e1, pt);\n                                        if (e1Contributing) {\n                                            e1.OutIdx = -1;\n                                        }\n                                    } else if (e2.WindDelta === 0 && Math.abs(e1.WindCnt) === 1 && (this.m_ClipType !== ClipperLib.ClipType.ctUnion || e1.WindCnt2 === 0)) {\n                                        this.AddOutPt(e2, pt);\n                                        if (e2Contributing) {\n                                            e2.OutIdx = -1;\n                                        }\n                                    }\n                                }\n                                return;\n                            }\n                        }\n                        if (e1.PolyTyp === e2.PolyTyp) {\n                            if (this.IsEvenOddFillType(e1)) {\n                                var oldE1WindCnt = e1.WindCnt;\n                                e1.WindCnt = e2.WindCnt;\n                                e2.WindCnt = oldE1WindCnt;\n                            } else {\n                                if (e1.WindCnt + e2.WindDelta === 0) {\n                                    e1.WindCnt = -e1.WindCnt;\n                                } else {\n                                    e1.WindCnt += e2.WindDelta;\n                                }\n                                if (e2.WindCnt - e1.WindDelta === 0) {\n                                    e2.WindCnt = -e2.WindCnt;\n                                } else {\n                                    e2.WindCnt -= e1.WindDelta;\n                                }\n                            }\n                        } else {\n                            if (!this.IsEvenOddFillType(e2)) {\n                                e1.WindCnt2 += e2.WindDelta;\n                            } else {\n                                e1.WindCnt2 = e1.WindCnt2 === 0 ? 1 : 0;\n                            }\n                            if (!this.IsEvenOddFillType(e1)) {\n                                e2.WindCnt2 -= e1.WindDelta;\n                            } else {\n                                e2.WindCnt2 = e2.WindCnt2 === 0 ? 1 : 0;\n                            }\n                        }\n                        var e1FillType, e2FillType, e1FillType2, e2FillType2;\n                        if (e1.PolyTyp === ClipperLib.PolyType.ptSubject) {\n                            e1FillType = this.m_SubjFillType;\n                            e1FillType2 = this.m_ClipFillType;\n                        } else {\n                            e1FillType = this.m_ClipFillType;\n                            e1FillType2 = this.m_SubjFillType;\n                        }\n                        if (e2.PolyTyp === ClipperLib.PolyType.ptSubject) {\n                            e2FillType = this.m_SubjFillType;\n                            e2FillType2 = this.m_ClipFillType;\n                        } else {\n                            e2FillType = this.m_ClipFillType;\n                            e2FillType2 = this.m_SubjFillType;\n                        }\n                        var e1Wc, e2Wc;\n                        switch(e1FillType){\n                            case ClipperLib.PolyFillType.pftPositive:\n                                e1Wc = e1.WindCnt;\n                                break;\n                            case ClipperLib.PolyFillType.pftNegative:\n                                e1Wc = -e1.WindCnt;\n                                break;\n                            default:\n                                e1Wc = Math.abs(e1.WindCnt);\n                                break;\n                        }\n                        switch(e2FillType){\n                            case ClipperLib.PolyFillType.pftPositive:\n                                e2Wc = e2.WindCnt;\n                                break;\n                            case ClipperLib.PolyFillType.pftNegative:\n                                e2Wc = -e2.WindCnt;\n                                break;\n                            default:\n                                e2Wc = Math.abs(e2.WindCnt);\n                                break;\n                        }\n                        if (e1Contributing && e2Contributing) {\n                            if (e1Wc !== 0 && e1Wc !== 1 || e2Wc !== 0 && e2Wc !== 1 || e1.PolyTyp !== e2.PolyTyp && this.m_ClipType !== ClipperLib.ClipType.ctXor) {\n                                this.AddLocalMaxPoly(e1, e2, pt);\n                            } else {\n                                this.AddOutPt(e1, pt);\n                                this.AddOutPt(e2, pt);\n                                ClipperLib.Clipper.SwapSides(e1, e2);\n                                ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n                            }\n                        } else if (e1Contributing) {\n                            if (e2Wc === 0 || e2Wc === 1) {\n                                this.AddOutPt(e1, pt);\n                                ClipperLib.Clipper.SwapSides(e1, e2);\n                                ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n                            }\n                        } else if (e2Contributing) {\n                            if (e1Wc === 0 || e1Wc === 1) {\n                                this.AddOutPt(e2, pt);\n                                ClipperLib.Clipper.SwapSides(e1, e2);\n                                ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n                            }\n                        } else if ((e1Wc === 0 || e1Wc === 1) && (e2Wc === 0 || e2Wc === 1)) {\n                            var e1Wc2, e2Wc2;\n                            switch(e1FillType2){\n                                case ClipperLib.PolyFillType.pftPositive:\n                                    e1Wc2 = e1.WindCnt2;\n                                    break;\n                                case ClipperLib.PolyFillType.pftNegative:\n                                    e1Wc2 = -e1.WindCnt2;\n                                    break;\n                                default:\n                                    e1Wc2 = Math.abs(e1.WindCnt2);\n                                    break;\n                            }\n                            switch(e2FillType2){\n                                case ClipperLib.PolyFillType.pftPositive:\n                                    e2Wc2 = e2.WindCnt2;\n                                    break;\n                                case ClipperLib.PolyFillType.pftNegative:\n                                    e2Wc2 = -e2.WindCnt2;\n                                    break;\n                                default:\n                                    e2Wc2 = Math.abs(e2.WindCnt2);\n                                    break;\n                            }\n                            if (e1.PolyTyp !== e2.PolyTyp) {\n                                this.AddLocalMinPoly(e1, e2, pt);\n                            } else if (e1Wc === 1 && e2Wc === 1) {\n                                switch(this.m_ClipType){\n                                    case ClipperLib.ClipType.ctIntersection:\n                                        if (e1Wc2 > 0 && e2Wc2 > 0) {\n                                            this.AddLocalMinPoly(e1, e2, pt);\n                                        }\n                                        break;\n                                    case ClipperLib.ClipType.ctUnion:\n                                        if (e1Wc2 <= 0 && e2Wc2 <= 0) {\n                                            this.AddLocalMinPoly(e1, e2, pt);\n                                        }\n                                        break;\n                                    case ClipperLib.ClipType.ctDifference:\n                                        if (e1.PolyTyp === ClipperLib.PolyType.ptClip && e1Wc2 > 0 && e2Wc2 > 0 || e1.PolyTyp === ClipperLib.PolyType.ptSubject && e1Wc2 <= 0 && e2Wc2 <= 0) {\n                                            this.AddLocalMinPoly(e1, e2, pt);\n                                        }\n                                        break;\n                                    case ClipperLib.ClipType.ctXor:\n                                        this.AddLocalMinPoly(e1, e2, pt);\n                                        break;\n                                }\n                            } else {\n                                ClipperLib.Clipper.SwapSides(e1, e2);\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.DeleteFromSEL = function(e) {\n                        var SelPrev = e.PrevInSEL;\n                        var SelNext = e.NextInSEL;\n                        if (SelPrev === null && SelNext === null && e !== this.m_SortedEdges) {\n                            return;\n                        }\n                        if (SelPrev !== null) {\n                            SelPrev.NextInSEL = SelNext;\n                        } else {\n                            this.m_SortedEdges = SelNext;\n                        }\n                        if (SelNext !== null) {\n                            SelNext.PrevInSEL = SelPrev;\n                        }\n                        e.NextInSEL = null;\n                        e.PrevInSEL = null;\n                    };\n                    ClipperLib.Clipper.prototype.ProcessHorizontals = function() {\n                        var horzEdge = {\n                        };\n                        while(this.PopEdgeFromSEL(horzEdge)){\n                            this.ProcessHorizontal(horzEdge.v);\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.GetHorzDirection = function(HorzEdge, $var) {\n                        if (HorzEdge.Bot.X < HorzEdge.Top.X) {\n                            $var.Left = HorzEdge.Bot.X;\n                            $var.Right = HorzEdge.Top.X;\n                            $var.Dir = ClipperLib.Direction.dLeftToRight;\n                        } else {\n                            $var.Left = HorzEdge.Top.X;\n                            $var.Right = HorzEdge.Bot.X;\n                            $var.Dir = ClipperLib.Direction.dRightToLeft;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.ProcessHorizontal = function(horzEdge) {\n                        var $var = {\n                            Dir: null,\n                            Left: null,\n                            Right: null\n                        };\n                        this.GetHorzDirection(horzEdge, $var);\n                        var dir = $var.Dir;\n                        var horzLeft = $var.Left;\n                        var horzRight = $var.Right;\n                        var IsOpen = horzEdge.WindDelta === 0;\n                        var eLastHorz = horzEdge, eMaxPair = null;\n                        while(eLastHorz.NextInLML !== null && ClipperLib.ClipperBase.IsHorizontal(eLastHorz.NextInLML)){\n                            eLastHorz = eLastHorz.NextInLML;\n                        }\n                        if (eLastHorz.NextInLML === null) {\n                            eMaxPair = this.GetMaximaPair(eLastHorz);\n                        }\n                        var currMax = this.m_Maxima;\n                        if (currMax !== null) {\n                            if (dir === ClipperLib.Direction.dLeftToRight) {\n                                while(currMax !== null && currMax.X <= horzEdge.Bot.X){\n                                    currMax = currMax.Next;\n                                }\n                                if (currMax !== null && currMax.X >= eLastHorz.Top.X) {\n                                    currMax = null;\n                                }\n                            } else {\n                                while(currMax.Next !== null && currMax.Next.X < horzEdge.Bot.X){\n                                    currMax = currMax.Next;\n                                }\n                                if (currMax.X <= eLastHorz.Top.X) {\n                                    currMax = null;\n                                }\n                            }\n                        }\n                        var op1 = null;\n                        for(;;){\n                            var IsLastHorz = horzEdge === eLastHorz;\n                            var e = this.GetNextInAEL(horzEdge, dir);\n                            while(e !== null){\n                                if (currMax !== null) {\n                                    if (dir === ClipperLib.Direction.dLeftToRight) {\n                                        while(currMax !== null && currMax.X < e.Curr.X){\n                                            if (horzEdge.OutIdx >= 0 && !IsOpen) {\n                                                this.AddOutPt(horzEdge, new ClipperLib.IntPoint2(currMax.X, horzEdge.Bot.Y));\n                                            }\n                                            currMax = currMax.Next;\n                                        }\n                                    } else {\n                                        while(currMax !== null && currMax.X > e.Curr.X){\n                                            if (horzEdge.OutIdx >= 0 && !IsOpen) {\n                                                this.AddOutPt(horzEdge, new ClipperLib.IntPoint2(currMax.X, horzEdge.Bot.Y));\n                                            }\n                                            currMax = currMax.Prev;\n                                        }\n                                    }\n                                }\n                                if (dir === ClipperLib.Direction.dLeftToRight && e.Curr.X > horzRight || dir === ClipperLib.Direction.dRightToLeft && e.Curr.X < horzLeft) {\n                                    break;\n                                }\n                                if (e.Curr.X === horzEdge.Top.X && horzEdge.NextInLML !== null && e.Dx < horzEdge.NextInLML.Dx) {\n                                    break;\n                                }\n                                if (horzEdge.OutIdx >= 0 && !IsOpen) {\n                                    if (ClipperLib.use_xyz) {\n                                        if (dir === ClipperLib.Direction.dLeftToRight) {\n                                            this.SetZ(e.Curr, horzEdge, e);\n                                        } else {\n                                            this.SetZ(e.Curr, e, horzEdge);\n                                        }\n                                    }\n                                    op1 = this.AddOutPt(horzEdge, e.Curr);\n                                    var eNextHorz = this.m_SortedEdges;\n                                    while(eNextHorz !== null){\n                                        if (eNextHorz.OutIdx >= 0 && this.HorzSegmentsOverlap(horzEdge.Bot.X, horzEdge.Top.X, eNextHorz.Bot.X, eNextHorz.Top.X)) {\n                                            var op2 = this.GetLastOutPt(eNextHorz);\n                                            this.AddJoin(op2, op1, eNextHorz.Top);\n                                        }\n                                        eNextHorz = eNextHorz.NextInSEL;\n                                    }\n                                    this.AddGhostJoin(op1, horzEdge.Bot);\n                                }\n                                if (e === eMaxPair && IsLastHorz) {\n                                    if (horzEdge.OutIdx >= 0) {\n                                        this.AddLocalMaxPoly(horzEdge, eMaxPair, horzEdge.Top);\n                                    }\n                                    this.DeleteFromAEL(horzEdge);\n                                    this.DeleteFromAEL(eMaxPair);\n                                    return;\n                                }\n                                if (dir === ClipperLib.Direction.dLeftToRight) {\n                                    var Pt = new ClipperLib.IntPoint2(e.Curr.X, horzEdge.Curr.Y);\n                                    this.IntersectEdges(horzEdge, e, Pt);\n                                } else {\n                                    var Pt = new ClipperLib.IntPoint2(e.Curr.X, horzEdge.Curr.Y);\n                                    this.IntersectEdges(e, horzEdge, Pt);\n                                }\n                                var eNext = this.GetNextInAEL(e, dir);\n                                this.SwapPositionsInAEL(horzEdge, e);\n                                e = eNext;\n                            }\n                            if (horzEdge.NextInLML === null || !ClipperLib.ClipperBase.IsHorizontal(horzEdge.NextInLML)) {\n                                break;\n                            }\n                            horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n                            if (horzEdge.OutIdx >= 0) {\n                                this.AddOutPt(horzEdge, horzEdge.Bot);\n                            }\n                            $var = {\n                                Dir: dir,\n                                Left: horzLeft,\n                                Right: horzRight\n                            };\n                            this.GetHorzDirection(horzEdge, $var);\n                            dir = $var.Dir;\n                            horzLeft = $var.Left;\n                            horzRight = $var.Right;\n                        }\n                        if (horzEdge.OutIdx >= 0 && op1 === null) {\n                            op1 = this.GetLastOutPt(horzEdge);\n                            var eNextHorz = this.m_SortedEdges;\n                            while(eNextHorz !== null){\n                                if (eNextHorz.OutIdx >= 0 && this.HorzSegmentsOverlap(horzEdge.Bot.X, horzEdge.Top.X, eNextHorz.Bot.X, eNextHorz.Top.X)) {\n                                    var op2 = this.GetLastOutPt(eNextHorz);\n                                    this.AddJoin(op2, op1, eNextHorz.Top);\n                                }\n                                eNextHorz = eNextHorz.NextInSEL;\n                            }\n                            this.AddGhostJoin(op1, horzEdge.Top);\n                        }\n                        if (horzEdge.NextInLML !== null) {\n                            if (horzEdge.OutIdx >= 0) {\n                                op1 = this.AddOutPt(horzEdge, horzEdge.Top);\n                                horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n                                if (horzEdge.WindDelta === 0) {\n                                    return;\n                                }\n                                var ePrev = horzEdge.PrevInAEL;\n                                var eNext = horzEdge.NextInAEL;\n                                if (ePrev !== null && ePrev.Curr.X === horzEdge.Bot.X && ePrev.Curr.Y === horzEdge.Bot.Y && ePrev.WindDelta === 0 && ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y && ClipperLib.ClipperBase.SlopesEqual3(horzEdge, ePrev, this.m_UseFullRange)) {\n                                    var op2 = this.AddOutPt(ePrev, horzEdge.Bot);\n                                    this.AddJoin(op1, op2, horzEdge.Top);\n                                } else if (eNext !== null && eNext.Curr.X === horzEdge.Bot.X && eNext.Curr.Y === horzEdge.Bot.Y && eNext.WindDelta !== 0 && eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y && ClipperLib.ClipperBase.SlopesEqual3(horzEdge, eNext, this.m_UseFullRange)) {\n                                    var op2 = this.AddOutPt(eNext, horzEdge.Bot);\n                                    this.AddJoin(op1, op2, horzEdge.Top);\n                                }\n                            } else {\n                                horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n                            }\n                        } else {\n                            if (horzEdge.OutIdx >= 0) {\n                                this.AddOutPt(horzEdge, horzEdge.Top);\n                            }\n                            this.DeleteFromAEL(horzEdge);\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.GetNextInAEL = function(e, Direction) {\n                        return Direction === ClipperLib.Direction.dLeftToRight ? e.NextInAEL : e.PrevInAEL;\n                    };\n                    ClipperLib.Clipper.prototype.IsMinima = function(e) {\n                        return e !== null && e.Prev.NextInLML !== e && e.Next.NextInLML !== e;\n                    };\n                    ClipperLib.Clipper.prototype.IsMaxima = function(e, Y) {\n                        return e !== null && e.Top.Y === Y && e.NextInLML === null;\n                    };\n                    ClipperLib.Clipper.prototype.IsIntermediate = function(e, Y) {\n                        return e.Top.Y === Y && e.NextInLML !== null;\n                    };\n                    ClipperLib.Clipper.prototype.GetMaximaPair = function(e) {\n                        if (ClipperLib.IntPoint.op_Equality(e.Next.Top, e.Top) && e.Next.NextInLML === null) {\n                            return e.Next;\n                        } else {\n                            if (ClipperLib.IntPoint.op_Equality(e.Prev.Top, e.Top) && e.Prev.NextInLML === null) {\n                                return e.Prev;\n                            } else {\n                                return null;\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.GetMaximaPairEx = function(e) {\n                        var result = this.GetMaximaPair(e);\n                        if (result === null || result.OutIdx === ClipperLib.ClipperBase.Skip || result.NextInAEL === result.PrevInAEL && !ClipperLib.ClipperBase.IsHorizontal(result)) {\n                            return null;\n                        }\n                        return result;\n                    };\n                    ClipperLib.Clipper.prototype.ProcessIntersections = function(topY) {\n                        if (this.m_ActiveEdges === null) {\n                            return true;\n                        }\n                        try {\n                            this.BuildIntersectList(topY);\n                            if (this.m_IntersectList.length === 0) {\n                                return true;\n                            }\n                            if (this.m_IntersectList.length === 1 || this.FixupIntersectionOrder()) {\n                                this.ProcessIntersectList();\n                            } else {\n                                return false;\n                            }\n                        } catch ($$e2) {\n                            this.m_SortedEdges = null;\n                            this.m_IntersectList.length = 0;\n                            ClipperLib.Error(\"ProcessIntersections error\");\n                        }\n                        this.m_SortedEdges = null;\n                        return true;\n                    };\n                    ClipperLib.Clipper.prototype.BuildIntersectList = function(topY) {\n                        if (this.m_ActiveEdges === null) {\n                            return;\n                        }\n                        var e = this.m_ActiveEdges;\n                        this.m_SortedEdges = e;\n                        while(e !== null){\n                            e.PrevInSEL = e.PrevInAEL;\n                            e.NextInSEL = e.NextInAEL;\n                            e.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n                            e = e.NextInAEL;\n                        }\n                        var isModified = true;\n                        while(isModified && this.m_SortedEdges !== null){\n                            isModified = false;\n                            e = this.m_SortedEdges;\n                            while(e.NextInSEL !== null){\n                                var eNext = e.NextInSEL;\n                                var pt = new ClipperLib.IntPoint0();\n                                if (e.Curr.X > eNext.Curr.X) {\n                                    this.IntersectPoint(e, eNext, pt);\n                                    if (pt.Y < topY) {\n                                        pt = new ClipperLib.IntPoint2(ClipperLib.Clipper.TopX(e, topY), topY);\n                                    }\n                                    var newNode = new ClipperLib.IntersectNode();\n                                    newNode.Edge1 = e;\n                                    newNode.Edge2 = eNext;\n                                    newNode.Pt.X = pt.X;\n                                    newNode.Pt.Y = pt.Y;\n                                    if (ClipperLib.use_xyz) {\n                                        newNode.Pt.Z = pt.Z;\n                                    }\n                                    this.m_IntersectList.push(newNode);\n                                    this.SwapPositionsInSEL(e, eNext);\n                                    isModified = true;\n                                } else {\n                                    e = eNext;\n                                }\n                            }\n                            if (e.PrevInSEL !== null) {\n                                e.PrevInSEL.NextInSEL = null;\n                            } else {\n                                break;\n                            }\n                        }\n                        this.m_SortedEdges = null;\n                    };\n                    ClipperLib.Clipper.prototype.EdgesAdjacent = function(inode) {\n                        return inode.Edge1.NextInSEL === inode.Edge2 || inode.Edge1.PrevInSEL === inode.Edge2;\n                    };\n                    ClipperLib.Clipper.IntersectNodeSort = function(node1, node2) {\n                        return node2.Pt.Y - node1.Pt.Y;\n                    };\n                    ClipperLib.Clipper.prototype.FixupIntersectionOrder = function() {\n                        this.m_IntersectList.sort(this.m_IntersectNodeComparer);\n                        this.CopyAELToSEL();\n                        var cnt = this.m_IntersectList.length;\n                        for(var i = 0; i < cnt; i++){\n                            if (!this.EdgesAdjacent(this.m_IntersectList[i])) {\n                                var j = i + 1;\n                                while(j < cnt && !this.EdgesAdjacent(this.m_IntersectList[j])){\n                                    j++;\n                                }\n                                if (j === cnt) {\n                                    return false;\n                                }\n                                var tmp = this.m_IntersectList[i];\n                                this.m_IntersectList[i] = this.m_IntersectList[j];\n                                this.m_IntersectList[j] = tmp;\n                            }\n                            this.SwapPositionsInSEL(this.m_IntersectList[i].Edge1, this.m_IntersectList[i].Edge2);\n                        }\n                        return true;\n                    };\n                    ClipperLib.Clipper.prototype.ProcessIntersectList = function() {\n                        for(var i = 0, ilen = this.m_IntersectList.length; i < ilen; i++){\n                            var iNode = this.m_IntersectList[i];\n                            this.IntersectEdges(iNode.Edge1, iNode.Edge2, iNode.Pt);\n                            this.SwapPositionsInAEL(iNode.Edge1, iNode.Edge2);\n                        }\n                        this.m_IntersectList.length = 0;\n                    };\n                    var R1 = function(a) {\n                        return a < 0 ? Math.ceil(a - 0.5) : Math.round(a);\n                    };\n                    var R2 = function(a) {\n                        return a < 0 ? Math.ceil(a - 0.5) : Math.floor(a + 0.5);\n                    };\n                    var R3 = function(a) {\n                        return a < 0 ? -Math.round(Math.abs(a)) : Math.round(a);\n                    };\n                    var R4 = function(a) {\n                        if (a < 0) {\n                            a -= 0.5;\n                            return a < -2147483648 ? Math.ceil(a) : a | 0;\n                        } else {\n                            a += 0.5;\n                            return a > 2147483647 ? Math.floor(a) : a | 0;\n                        }\n                    };\n                    if (browser1.msie) {\n                        ClipperLib.Clipper.Round = R1;\n                    } else if (browser1.chromium) {\n                        ClipperLib.Clipper.Round = R3;\n                    } else if (browser1.safari) {\n                        ClipperLib.Clipper.Round = R4;\n                    } else {\n                        ClipperLib.Clipper.Round = R2;\n                    }\n                    ClipperLib.Clipper.TopX = function(edge, currentY) {\n                        if (currentY === edge.Top.Y) {\n                            return edge.Top.X;\n                        }\n                        return edge.Bot.X + ClipperLib.Clipper.Round(edge.Dx * (currentY - edge.Bot.Y));\n                    };\n                    ClipperLib.Clipper.prototype.IntersectPoint = function(edge1, edge2, ip) {\n                        ip.X = 0;\n                        ip.Y = 0;\n                        var b1, b2;\n                        if (edge1.Dx === edge2.Dx) {\n                            ip.Y = edge1.Curr.Y;\n                            ip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n                            return;\n                        }\n                        if (edge1.Delta.X === 0) {\n                            ip.X = edge1.Bot.X;\n                            if (ClipperLib.ClipperBase.IsHorizontal(edge2)) {\n                                ip.Y = edge2.Bot.Y;\n                            } else {\n                                b2 = edge2.Bot.Y - edge2.Bot.X / edge2.Dx;\n                                ip.Y = ClipperLib.Clipper.Round(ip.X / edge2.Dx + b2);\n                            }\n                        } else if (edge2.Delta.X === 0) {\n                            ip.X = edge2.Bot.X;\n                            if (ClipperLib.ClipperBase.IsHorizontal(edge1)) {\n                                ip.Y = edge1.Bot.Y;\n                            } else {\n                                b1 = edge1.Bot.Y - edge1.Bot.X / edge1.Dx;\n                                ip.Y = ClipperLib.Clipper.Round(ip.X / edge1.Dx + b1);\n                            }\n                        } else {\n                            b1 = edge1.Bot.X - edge1.Bot.Y * edge1.Dx;\n                            b2 = edge2.Bot.X - edge2.Bot.Y * edge2.Dx;\n                            var q = (b2 - b1) / (edge1.Dx - edge2.Dx);\n                            ip.Y = ClipperLib.Clipper.Round(q);\n                            if (Math.abs(edge1.Dx) < Math.abs(edge2.Dx)) {\n                                ip.X = ClipperLib.Clipper.Round(edge1.Dx * q + b1);\n                            } else {\n                                ip.X = ClipperLib.Clipper.Round(edge2.Dx * q + b2);\n                            }\n                        }\n                        if (ip.Y < edge1.Top.Y || ip.Y < edge2.Top.Y) {\n                            if (edge1.Top.Y > edge2.Top.Y) {\n                                ip.Y = edge1.Top.Y;\n                                ip.X = ClipperLib.Clipper.TopX(edge2, edge1.Top.Y);\n                                return ip.X < edge1.Top.X;\n                            } else {\n                                ip.Y = edge2.Top.Y;\n                            }\n                            if (Math.abs(edge1.Dx) < Math.abs(edge2.Dx)) {\n                                ip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n                            } else {\n                                ip.X = ClipperLib.Clipper.TopX(edge2, ip.Y);\n                            }\n                        }\n                        if (ip.Y > edge1.Curr.Y) {\n                            ip.Y = edge1.Curr.Y;\n                            if (Math.abs(edge1.Dx) > Math.abs(edge2.Dx)) {\n                                ip.X = ClipperLib.Clipper.TopX(edge2, ip.Y);\n                            } else {\n                                ip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.ProcessEdgesAtTopOfScanbeam = function(topY) {\n                        var e = this.m_ActiveEdges;\n                        while(e !== null){\n                            var IsMaximaEdge = this.IsMaxima(e, topY);\n                            if (IsMaximaEdge) {\n                                var eMaxPair = this.GetMaximaPairEx(e);\n                                IsMaximaEdge = eMaxPair === null || !ClipperLib.ClipperBase.IsHorizontal(eMaxPair);\n                            }\n                            if (IsMaximaEdge) {\n                                if (this.StrictlySimple) {\n                                    this.InsertMaxima(e.Top.X);\n                                }\n                                var ePrev = e.PrevInAEL;\n                                this.DoMaxima(e);\n                                if (ePrev === null) {\n                                    e = this.m_ActiveEdges;\n                                } else {\n                                    e = ePrev.NextInAEL;\n                                }\n                            } else {\n                                if (this.IsIntermediate(e, topY) && ClipperLib.ClipperBase.IsHorizontal(e.NextInLML)) {\n                                    e = this.UpdateEdgeIntoAEL(e);\n                                    if (e.OutIdx >= 0) {\n                                        this.AddOutPt(e, e.Bot);\n                                    }\n                                    this.AddEdgeToSEL(e);\n                                } else {\n                                    e.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n                                    e.Curr.Y = topY;\n                                }\n                                if (ClipperLib.use_xyz) {\n                                    if (e.Top.Y === topY) {\n                                        e.Curr.Z = e.Top.Z;\n                                    } else if (e.Bot.Y === topY) {\n                                        e.Curr.Z = e.Bot.Z;\n                                    } else {\n                                        e.Curr.Z = 0;\n                                    }\n                                }\n                                if (this.StrictlySimple) {\n                                    var ePrev = e.PrevInAEL;\n                                    if (e.OutIdx >= 0 && e.WindDelta !== 0 && ePrev !== null && ePrev.OutIdx >= 0 && ePrev.Curr.X === e.Curr.X && ePrev.WindDelta !== 0) {\n                                        var ip = new ClipperLib.IntPoint1(e.Curr);\n                                        if (ClipperLib.use_xyz) {\n                                            this.SetZ(ip, ePrev, e);\n                                        }\n                                        var op = this.AddOutPt(ePrev, ip);\n                                        var op2 = this.AddOutPt(e, ip);\n                                        this.AddJoin(op, op2, ip);\n                                    }\n                                }\n                                e = e.NextInAEL;\n                            }\n                        }\n                        this.ProcessHorizontals();\n                        this.m_Maxima = null;\n                        e = this.m_ActiveEdges;\n                        while(e !== null){\n                            if (this.IsIntermediate(e, topY)) {\n                                var op = null;\n                                if (e.OutIdx >= 0) {\n                                    op = this.AddOutPt(e, e.Top);\n                                }\n                                e = this.UpdateEdgeIntoAEL(e);\n                                var ePrev = e.PrevInAEL;\n                                var eNext = e.NextInAEL;\n                                if (ePrev !== null && ePrev.Curr.X === e.Bot.X && ePrev.Curr.Y === e.Bot.Y && op !== null && ePrev.OutIdx >= 0 && ePrev.Curr.Y === ePrev.Top.Y && ClipperLib.ClipperBase.SlopesEqual5(e.Curr, e.Top, ePrev.Curr, ePrev.Top, this.m_UseFullRange) && e.WindDelta !== 0 && ePrev.WindDelta !== 0) {\n                                    var op2 = this.AddOutPt(ePrev2, e.Bot);\n                                    this.AddJoin(op, op2, e.Top);\n                                } else if (eNext !== null && eNext.Curr.X === e.Bot.X && eNext.Curr.Y === e.Bot.Y && op !== null && eNext.OutIdx >= 0 && eNext.Curr.Y === eNext.Top.Y && ClipperLib.ClipperBase.SlopesEqual5(e.Curr, e.Top, eNext.Curr, eNext.Top, this.m_UseFullRange) && e.WindDelta !== 0 && eNext.WindDelta !== 0) {\n                                    var op2 = this.AddOutPt(eNext, e.Bot);\n                                    this.AddJoin(op, op2, e.Top);\n                                }\n                            }\n                            e = e.NextInAEL;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.DoMaxima = function(e) {\n                        var eMaxPair = this.GetMaximaPairEx(e);\n                        if (eMaxPair === null) {\n                            if (e.OutIdx >= 0) {\n                                this.AddOutPt(e, e.Top);\n                            }\n                            this.DeleteFromAEL(e);\n                            return;\n                        }\n                        var eNext = e.NextInAEL;\n                        while(eNext !== null && eNext !== eMaxPair){\n                            this.IntersectEdges(e, eNext, e.Top);\n                            this.SwapPositionsInAEL(e, eNext);\n                            eNext = e.NextInAEL;\n                        }\n                        if (e.OutIdx === -1 && eMaxPair.OutIdx === -1) {\n                            this.DeleteFromAEL(e);\n                            this.DeleteFromAEL(eMaxPair);\n                        } else if (e.OutIdx >= 0 && eMaxPair.OutIdx >= 0) {\n                            if (e.OutIdx >= 0) {\n                                this.AddLocalMaxPoly(e, eMaxPair, e.Top);\n                            }\n                            this.DeleteFromAEL(e);\n                            this.DeleteFromAEL(eMaxPair);\n                        } else if (ClipperLib.use_lines && e.WindDelta === 0) {\n                            if (e.OutIdx >= 0) {\n                                this.AddOutPt(e, e.Top);\n                                e.OutIdx = ClipperLib.ClipperBase.Unassigned;\n                            }\n                            this.DeleteFromAEL(e);\n                            if (eMaxPair.OutIdx >= 0) {\n                                this.AddOutPt(eMaxPair, e.Top);\n                                eMaxPair.OutIdx = ClipperLib.ClipperBase.Unassigned;\n                            }\n                            this.DeleteFromAEL(eMaxPair);\n                        } else {\n                            ClipperLib.Error(\"DoMaxima error\");\n                        }\n                    };\n                    ClipperLib.Clipper.ReversePaths = function(polys) {\n                        for(var i = 0, len = polys.length; i < len; i++){\n                            polys[i].reverse();\n                        }\n                    };\n                    ClipperLib.Clipper.Orientation = function(poly) {\n                        return ClipperLib.Clipper.Area(poly) >= 0;\n                    };\n                    ClipperLib.Clipper.prototype.PointCount = function(pts) {\n                        if (pts === null) {\n                            return 0;\n                        }\n                        var result = 0;\n                        var p = pts;\n                        do {\n                            result++;\n                            p = p.Next;\n                        }while (p !== pts)\n                        return result;\n                    };\n                    ClipperLib.Clipper.prototype.BuildResult = function(polyg) {\n                        ClipperLib.Clear(polyg);\n                        for(var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++){\n                            var outRec = this.m_PolyOuts[i];\n                            if (outRec.Pts === null) {\n                                continue;\n                            }\n                            var p = outRec.Pts.Prev;\n                            var cnt = this.PointCount(p);\n                            if (cnt < 2) {\n                                continue;\n                            }\n                            var pg = new Array(cnt);\n                            for(var j = 0; j < cnt; j++){\n                                pg[j] = p.Pt;\n                                p = p.Prev;\n                            }\n                            polyg.push(pg);\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.BuildResult2 = function(polytree) {\n                        polytree.Clear();\n                        for(var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++){\n                            var outRec = this.m_PolyOuts[i];\n                            var cnt = this.PointCount(outRec.Pts);\n                            if (outRec.IsOpen && cnt < 2 || !outRec.IsOpen && cnt < 3) {\n                                continue;\n                            }\n                            this.FixHoleLinkage(outRec);\n                            var pn = new ClipperLib.PolyNode();\n                            polytree.m_AllPolys.push(pn);\n                            outRec.PolyNode = pn;\n                            pn.m_polygon.length = cnt;\n                            var op = outRec.Pts.Prev;\n                            for(var j = 0; j < cnt; j++){\n                                pn.m_polygon[j] = op.Pt;\n                                op = op.Prev;\n                            }\n                        }\n                        for(var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++){\n                            var outRec = this.m_PolyOuts[i];\n                            if (outRec.PolyNode === null) {\n                                continue;\n                            } else if (outRec.IsOpen) {\n                                outRec.PolyNode.IsOpen = true;\n                                polytree.AddChild(outRec.PolyNode);\n                            } else if (outRec.FirstLeft !== null && outRec.FirstLeft.PolyNode !== null) {\n                                outRec.FirstLeft.PolyNode.AddChild(outRec.PolyNode);\n                            } else {\n                                polytree.AddChild(outRec.PolyNode);\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.FixupOutPolyline = function(outRec) {\n                        var pp = outRec.Pts;\n                        var lastPP = pp.Prev;\n                        while(pp !== lastPP){\n                            pp = pp.Next;\n                            if (ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Prev.Pt)) {\n                                if (pp === lastPP) {\n                                    lastPP = pp.Prev;\n                                }\n                                var tmpPP = pp.Prev;\n                                tmpPP.Next = pp.Next;\n                                pp.Next.Prev = tmpPP;\n                                pp = tmpPP;\n                            }\n                        }\n                        if (pp === pp.Prev) {\n                            outRec.Pts = null;\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.FixupOutPolygon = function(outRec) {\n                        var lastOK = null;\n                        outRec.BottomPt = null;\n                        var pp = outRec.Pts;\n                        var preserveCol = this.PreserveCollinear || this.StrictlySimple;\n                        for(;;){\n                            if (pp.Prev === pp || pp.Prev === pp.Next) {\n                                outRec.Pts = null;\n                                return;\n                            }\n                            if (ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Next.Pt) || ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Prev.Pt) || ClipperLib.ClipperBase.SlopesEqual4(pp.Prev.Pt, pp.Pt, pp.Next.Pt, this.m_UseFullRange) && (!preserveCol || !this.Pt2IsBetweenPt1AndPt3(pp.Prev.Pt, pp.Pt, pp.Next.Pt))) {\n                                lastOK = null;\n                                pp.Prev.Next = pp.Next;\n                                pp.Next.Prev = pp.Prev;\n                                pp = pp.Prev;\n                            } else if (pp === lastOK) {\n                                break;\n                            } else {\n                                if (lastOK === null) {\n                                    lastOK = pp;\n                                }\n                                pp = pp.Next;\n                            }\n                        }\n                        outRec.Pts = pp;\n                    };\n                    ClipperLib.Clipper.prototype.DupOutPt = function(outPt, InsertAfter) {\n                        var result = new ClipperLib.OutPt();\n                        result.Pt.X = outPt.Pt.X;\n                        result.Pt.Y = outPt.Pt.Y;\n                        if (ClipperLib.use_xyz) {\n                            result.Pt.Z = outPt.Pt.Z;\n                        }\n                        result.Idx = outPt.Idx;\n                        if (InsertAfter) {\n                            result.Next = outPt.Next;\n                            result.Prev = outPt;\n                            outPt.Next.Prev = result;\n                            outPt.Next = result;\n                        } else {\n                            result.Prev = outPt.Prev;\n                            result.Next = outPt;\n                            outPt.Prev.Next = result;\n                            outPt.Prev = result;\n                        }\n                        return result;\n                    };\n                    ClipperLib.Clipper.prototype.GetOverlap = function(a1, a2, b1, b2, $val) {\n                        if (a1 < a2) {\n                            if (b1 < b2) {\n                                $val.Left = Math.max(a1, b1);\n                                $val.Right = Math.min(a2, b2);\n                            } else {\n                                $val.Left = Math.max(a1, b2);\n                                $val.Right = Math.min(a2, b1);\n                            }\n                        } else {\n                            if (b1 < b2) {\n                                $val.Left = Math.max(a2, b1);\n                                $val.Right = Math.min(a1, b2);\n                            } else {\n                                $val.Left = Math.max(a2, b2);\n                                $val.Right = Math.min(a1, b1);\n                            }\n                        }\n                        return $val.Left < $val.Right;\n                    };\n                    ClipperLib.Clipper.prototype.JoinHorz = function(op1, op1b, op2, op2b, Pt, DiscardLeft) {\n                        var Dir1 = op1.Pt.X > op1b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight;\n                        var Dir2 = op2.Pt.X > op2b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight;\n                        if (Dir1 === Dir2) {\n                            return false;\n                        }\n                        if (Dir1 === ClipperLib.Direction.dLeftToRight) {\n                            while(op1.Next.Pt.X <= Pt.X && op1.Next.Pt.X >= op1.Pt.X && op1.Next.Pt.Y === Pt.Y){\n                                op1 = op1.Next;\n                            }\n                            if (DiscardLeft && op1.Pt.X !== Pt.X) {\n                                op1 = op1.Next;\n                            }\n                            op1b = this.DupOutPt(op1, !DiscardLeft);\n                            if (ClipperLib.IntPoint.op_Inequality(op1b.Pt, Pt)) {\n                                op1 = op1b;\n                                op1.Pt.X = Pt.X;\n                                op1.Pt.Y = Pt.Y;\n                                if (ClipperLib.use_xyz) {\n                                    op1.Pt.Z = Pt.Z;\n                                }\n                                op1b = this.DupOutPt(op1, !DiscardLeft);\n                            }\n                        } else {\n                            while(op1.Next.Pt.X >= Pt.X && op1.Next.Pt.X <= op1.Pt.X && op1.Next.Pt.Y === Pt.Y){\n                                op1 = op1.Next;\n                            }\n                            if (!DiscardLeft && op1.Pt.X !== Pt.X) {\n                                op1 = op1.Next;\n                            }\n                            op1b = this.DupOutPt(op1, DiscardLeft);\n                            if (ClipperLib.IntPoint.op_Inequality(op1b.Pt, Pt)) {\n                                op1 = op1b;\n                                op1.Pt.X = Pt.X;\n                                op1.Pt.Y = Pt.Y;\n                                if (ClipperLib.use_xyz) {\n                                    op1.Pt.Z = Pt.Z;\n                                }\n                                op1b = this.DupOutPt(op1, DiscardLeft);\n                            }\n                        }\n                        if (Dir2 === ClipperLib.Direction.dLeftToRight) {\n                            while(op2.Next.Pt.X <= Pt.X && op2.Next.Pt.X >= op2.Pt.X && op2.Next.Pt.Y === Pt.Y){\n                                op2 = op2.Next;\n                            }\n                            if (DiscardLeft && op2.Pt.X !== Pt.X) {\n                                op2 = op2.Next;\n                            }\n                            op2b = this.DupOutPt(op2, !DiscardLeft);\n                            if (ClipperLib.IntPoint.op_Inequality(op2b.Pt, Pt)) {\n                                op2 = op2b;\n                                op2.Pt.X = Pt.X;\n                                op2.Pt.Y = Pt.Y;\n                                if (ClipperLib.use_xyz) {\n                                    op2.Pt.Z = Pt.Z;\n                                }\n                                op2b = this.DupOutPt(op2, !DiscardLeft);\n                            }\n                        } else {\n                            while(op2.Next.Pt.X >= Pt.X && op2.Next.Pt.X <= op2.Pt.X && op2.Next.Pt.Y === Pt.Y){\n                                op2 = op2.Next;\n                            }\n                            if (!DiscardLeft && op2.Pt.X !== Pt.X) {\n                                op2 = op2.Next;\n                            }\n                            op2b = this.DupOutPt(op2, DiscardLeft);\n                            if (ClipperLib.IntPoint.op_Inequality(op2b.Pt, Pt)) {\n                                op2 = op2b;\n                                op2.Pt.X = Pt.X;\n                                op2.Pt.Y = Pt.Y;\n                                if (ClipperLib.use_xyz) {\n                                    op2.Pt.Z = Pt.Z;\n                                }\n                                op2b = this.DupOutPt(op2, DiscardLeft);\n                            }\n                        }\n                        if (Dir1 === ClipperLib.Direction.dLeftToRight === DiscardLeft) {\n                            op1.Prev = op2;\n                            op2.Next = op1;\n                            op1b.Next = op2b;\n                            op2b.Prev = op1b;\n                        } else {\n                            op1.Next = op2;\n                            op2.Prev = op1;\n                            op1b.Prev = op2b;\n                            op2b.Next = op1b;\n                        }\n                        return true;\n                    };\n                    ClipperLib.Clipper.prototype.JoinPoints = function(j, outRec1, outRec2) {\n                        var op1 = j.OutPt1, op1b = new ClipperLib.OutPt();\n                        var op2 = j.OutPt2, op2b = new ClipperLib.OutPt();\n                        var isHorizontal = j.OutPt1.Pt.Y === j.OffPt.Y;\n                        if (isHorizontal && ClipperLib.IntPoint.op_Equality(j.OffPt, j.OutPt1.Pt) && ClipperLib.IntPoint.op_Equality(j.OffPt, j.OutPt2.Pt)) {\n                            if (outRec1 !== outRec2) {\n                                return false;\n                            }\n                            op1b = j.OutPt1.Next;\n                            while(op1b !== op1 && ClipperLib.IntPoint.op_Equality(op1b.Pt, j.OffPt)){\n                                op1b = op1b.Next;\n                            }\n                            var reverse1 = op1b.Pt.Y > j.OffPt.Y;\n                            op2b = j.OutPt2.Next;\n                            while(op2b !== op2 && ClipperLib.IntPoint.op_Equality(op2b.Pt, j.OffPt)){\n                                op2b = op2b.Next;\n                            }\n                            var reverse2 = op2b.Pt.Y > j.OffPt.Y;\n                            if (reverse1 === reverse2) {\n                                return false;\n                            }\n                            if (reverse1) {\n                                op1b = this.DupOutPt(op1, false);\n                                op2b = this.DupOutPt(op2, true);\n                                op1.Prev = op2;\n                                op2.Next = op1;\n                                op1b.Next = op2b;\n                                op2b.Prev = op1b;\n                                j.OutPt1 = op1;\n                                j.OutPt2 = op1b;\n                                return true;\n                            } else {\n                                op1b = this.DupOutPt(op1, true);\n                                op2b = this.DupOutPt(op2, false);\n                                op1.Next = op2;\n                                op2.Prev = op1;\n                                op1b.Prev = op2b;\n                                op2b.Next = op1b;\n                                j.OutPt1 = op1;\n                                j.OutPt2 = op1b;\n                                return true;\n                            }\n                        } else if (isHorizontal) {\n                            op1b = op1;\n                            while(op1.Prev.Pt.Y === op1.Pt.Y && op1.Prev !== op1b && op1.Prev !== op2){\n                                op1 = op1.Prev;\n                            }\n                            while(op1b.Next.Pt.Y === op1b.Pt.Y && op1b.Next !== op1 && op1b.Next !== op2){\n                                op1b = op1b.Next;\n                            }\n                            if (op1b.Next === op1 || op1b.Next === op2) {\n                                return false;\n                            }\n                            op2b = op2;\n                            while(op2.Prev.Pt.Y === op2.Pt.Y && op2.Prev !== op2b && op2.Prev !== op1b){\n                                op2 = op2.Prev;\n                            }\n                            while(op2b.Next.Pt.Y === op2b.Pt.Y && op2b.Next !== op2 && op2b.Next !== op1){\n                                op2b = op2b.Next;\n                            }\n                            if (op2b.Next === op2 || op2b.Next === op1) {\n                                return false;\n                            }\n                            var $val = {\n                                Left: null,\n                                Right: null\n                            };\n                            if (!this.GetOverlap(op1.Pt.X, op1b.Pt.X, op2.Pt.X, op2b.Pt.X, $val)) {\n                                return false;\n                            }\n                            var Left = $val.Left;\n                            var Right = $val.Right;\n                            var Pt = new ClipperLib.IntPoint0();\n                            var DiscardLeftSide;\n                            if (op1.Pt.X >= Left && op1.Pt.X <= Right) {\n                                Pt.X = op1.Pt.X;\n                                Pt.Y = op1.Pt.Y;\n                                if (ClipperLib.use_xyz) {\n                                    Pt.Z = op1.Pt.Z;\n                                }\n                                DiscardLeftSide = op1.Pt.X > op1b.Pt.X;\n                            } else if (op2.Pt.X >= Left && op2.Pt.X <= Right) {\n                                Pt.X = op2.Pt.X;\n                                Pt.Y = op2.Pt.Y;\n                                if (ClipperLib.use_xyz) {\n                                    Pt.Z = op2.Pt.Z;\n                                }\n                                DiscardLeftSide = op2.Pt.X > op2b.Pt.X;\n                            } else if (op1b.Pt.X >= Left && op1b.Pt.X <= Right) {\n                                Pt.X = op1b.Pt.X;\n                                Pt.Y = op1b.Pt.Y;\n                                if (ClipperLib.use_xyz) {\n                                    Pt.Z = op1b.Pt.Z;\n                                }\n                                DiscardLeftSide = op1b.Pt.X > op1.Pt.X;\n                            } else {\n                                Pt.X = op2b.Pt.X;\n                                Pt.Y = op2b.Pt.Y;\n                                if (ClipperLib.use_xyz) {\n                                    Pt.Z = op2b.Pt.Z;\n                                }\n                                DiscardLeftSide = op2b.Pt.X > op2.Pt.X;\n                            }\n                            j.OutPt1 = op1;\n                            j.OutPt2 = op2;\n                            return this.JoinHorz(op1, op1b, op2, op2b, Pt, DiscardLeftSide);\n                        } else {\n                            op1b = op1.Next;\n                            while(ClipperLib.IntPoint.op_Equality(op1b.Pt, op1.Pt) && op1b !== op1){\n                                op1b = op1b.Next;\n                            }\n                            var Reverse1 = op1b.Pt.Y > op1.Pt.Y || !ClipperLib.ClipperBase.SlopesEqual4(op1.Pt, op1b.Pt, j.OffPt, this.m_UseFullRange);\n                            if (Reverse1) {\n                                op1b = op1.Prev;\n                                while(ClipperLib.IntPoint.op_Equality(op1b.Pt, op1.Pt) && op1b !== op1){\n                                    op1b = op1b.Prev;\n                                }\n                                if (op1b.Pt.Y > op1.Pt.Y || !ClipperLib.ClipperBase.SlopesEqual4(op1.Pt, op1b.Pt, j.OffPt, this.m_UseFullRange)) {\n                                    return false;\n                                }\n                            }\n                            op2b = op2.Next;\n                            while(ClipperLib.IntPoint.op_Equality(op2b.Pt, op2.Pt) && op2b !== op2){\n                                op2b = op2b.Next;\n                            }\n                            var Reverse2 = op2b.Pt.Y > op2.Pt.Y || !ClipperLib.ClipperBase.SlopesEqual4(op2.Pt, op2b.Pt, j.OffPt, this.m_UseFullRange);\n                            if (Reverse2) {\n                                op2b = op2.Prev;\n                                while(ClipperLib.IntPoint.op_Equality(op2b.Pt, op2.Pt) && op2b !== op2){\n                                    op2b = op2b.Prev;\n                                }\n                                if (op2b.Pt.Y > op2.Pt.Y || !ClipperLib.ClipperBase.SlopesEqual4(op2.Pt, op2b.Pt, j.OffPt, this.m_UseFullRange)) {\n                                    return false;\n                                }\n                            }\n                            if (op1b === op1 || op2b === op2 || op1b === op2b || outRec1 === outRec2 && Reverse1 === Reverse2) {\n                                return false;\n                            }\n                            if (Reverse1) {\n                                op1b = this.DupOutPt(op1, false);\n                                op2b = this.DupOutPt(op2, true);\n                                op1.Prev = op2;\n                                op2.Next = op1;\n                                op1b.Next = op2b;\n                                op2b.Prev = op1b;\n                                j.OutPt1 = op1;\n                                j.OutPt2 = op1b;\n                                return true;\n                            } else {\n                                op1b = this.DupOutPt(op1, true);\n                                op2b = this.DupOutPt(op2, false);\n                                op1.Next = op2;\n                                op2.Prev = op1;\n                                op1b.Prev = op2b;\n                                op2b.Next = op1b;\n                                j.OutPt1 = op1;\n                                j.OutPt2 = op1b;\n                                return true;\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.GetBounds = function(paths) {\n                        var i = 0, cnt = paths.length;\n                        while(i < cnt && paths[i].length === 0){\n                            i++;\n                        }\n                        if (i === cnt) {\n                            return new ClipperLib.IntRect(0, 0, 0, 0);\n                        }\n                        var result = new ClipperLib.IntRect();\n                        result.left = paths[i][0].X;\n                        result.right = result.left;\n                        result.top = paths[i][0].Y;\n                        result.bottom = result.top;\n                        for(; i < cnt; i++){\n                            for(var j = 0, jlen = paths[i].length; j < jlen; j++){\n                                if (paths[i][j].X < result.left) {\n                                    result.left = paths[i][j].X;\n                                } else if (paths[i][j].X > result.right) {\n                                    result.right = paths[i][j].X;\n                                }\n                                if (paths[i][j].Y < result.top) {\n                                    result.top = paths[i][j].Y;\n                                } else if (paths[i][j].Y > result.bottom) {\n                                    result.bottom = paths[i][j].Y;\n                                }\n                            }\n                        }\n                        return result;\n                    };\n                    ClipperLib.Clipper.prototype.GetBounds2 = function(ops) {\n                        var opStart = ops;\n                        var result = new ClipperLib.IntRect();\n                        result.left = ops.Pt.X;\n                        result.right = ops.Pt.X;\n                        result.top = ops.Pt.Y;\n                        result.bottom = ops.Pt.Y;\n                        ops = ops.Next;\n                        while(ops !== opStart){\n                            if (ops.Pt.X < result.left) {\n                                result.left = ops.Pt.X;\n                            }\n                            if (ops.Pt.X > result.right) {\n                                result.right = ops.Pt.X;\n                            }\n                            if (ops.Pt.Y < result.top) {\n                                result.top = ops.Pt.Y;\n                            }\n                            if (ops.Pt.Y > result.bottom) {\n                                result.bottom = ops.Pt.Y;\n                            }\n                            ops = ops.Next;\n                        }\n                        return result;\n                    };\n                    ClipperLib.Clipper.PointInPolygon = function(pt, path) {\n                        var result = 0, cnt = path.length;\n                        if (cnt < 3) {\n                            return 0;\n                        }\n                        var ip = path[0];\n                        for(var i = 1; i <= cnt; ++i){\n                            var ipNext = i === cnt ? path[0] : path[i];\n                            if (ipNext.Y === pt.Y) {\n                                if (ipNext.X === pt.X || ip.Y === pt.Y && ipNext.X > pt.X === ip.X < pt.X) {\n                                    return -1;\n                                }\n                            }\n                            if (ip.Y < pt.Y !== ipNext.Y < pt.Y) {\n                                if (ip.X >= pt.X) {\n                                    if (ipNext.X > pt.X) {\n                                        result = 1 - result;\n                                    } else {\n                                        var d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n                                        if (d === 0) {\n                                            return -1;\n                                        } else if (d > 0 === ipNext.Y > ip.Y) {\n                                            result = 1 - result;\n                                        }\n                                    }\n                                } else {\n                                    if (ipNext.X > pt.X) {\n                                        var d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n                                        if (d === 0) {\n                                            return -1;\n                                        } else if (d > 0 === ipNext.Y > ip.Y) {\n                                            result = 1 - result;\n                                        }\n                                    }\n                                }\n                            }\n                            ip = ipNext;\n                        }\n                        return result;\n                    };\n                    ClipperLib.Clipper.prototype.PointInPolygon = function(pt, op) {\n                        var result = 0;\n                        var startOp = op;\n                        var ptx = pt.X, pty = pt.Y;\n                        var poly0x = op.Pt.X, poly0y = op.Pt.Y;\n                        do {\n                            op = op.Next;\n                            var poly1x = op.Pt.X, poly1y = op.Pt.Y;\n                            if (poly1y === pty) {\n                                if (poly1x === ptx || poly0y === pty && poly1x > ptx === poly0x < ptx) {\n                                    return -1;\n                                }\n                            }\n                            if (poly0y < pty !== poly1y < pty) {\n                                if (poly0x >= ptx) {\n                                    if (poly1x > ptx) {\n                                        result = 1 - result;\n                                    } else {\n                                        var d = (poly0x - ptx) * (poly1y - pty) - (poly1x - ptx) * (poly0y - pty);\n                                        if (d === 0) {\n                                            return -1;\n                                        }\n                                        if (d > 0 === poly1y > poly0y) {\n                                            result = 1 - result;\n                                        }\n                                    }\n                                } else {\n                                    if (poly1x > ptx) {\n                                        var d = (poly0x - ptx) * (poly1y - pty) - (poly1x - ptx) * (poly0y - pty);\n                                        if (d === 0) {\n                                            return -1;\n                                        }\n                                        if (d > 0 === poly1y > poly0y) {\n                                            result = 1 - result;\n                                        }\n                                    }\n                                }\n                            }\n                            poly0x = poly1x;\n                            poly0y = poly1y;\n                        }while (startOp !== op)\n                        return result;\n                    };\n                    ClipperLib.Clipper.prototype.Poly2ContainsPoly1 = function(outPt1, outPt2) {\n                        var op = outPt1;\n                        do {\n                            var res = this.PointInPolygon(op.Pt, outPt2);\n                            if (res >= 0) {\n                                return res > 0;\n                            }\n                            op = op.Next;\n                        }while (op !== outPt1)\n                        return true;\n                    };\n                    ClipperLib.Clipper.prototype.FixupFirstLefts1 = function(OldOutRec, NewOutRec) {\n                        var outRec, firstLeft;\n                        for(var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++){\n                            outRec = this.m_PolyOuts[i];\n                            firstLeft = ClipperLib.Clipper.ParseFirstLeft(outRec.FirstLeft);\n                            if (outRec.Pts !== null && firstLeft === OldOutRec) {\n                                if (this.Poly2ContainsPoly1(outRec.Pts, NewOutRec.Pts)) {\n                                    outRec.FirstLeft = NewOutRec;\n                                }\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.FixupFirstLefts2 = function(innerOutRec, outerOutRec) {\n                        var orfl = outerOutRec.FirstLeft;\n                        var outRec, firstLeft;\n                        for(var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++){\n                            outRec = this.m_PolyOuts[i];\n                            if (outRec.Pts === null || outRec === outerOutRec || outRec === innerOutRec) {\n                                continue;\n                            }\n                            firstLeft = ClipperLib.Clipper.ParseFirstLeft(outRec.FirstLeft);\n                            if (firstLeft !== orfl && firstLeft !== innerOutRec && firstLeft !== outerOutRec) {\n                                continue;\n                            }\n                            if (this.Poly2ContainsPoly1(outRec.Pts, innerOutRec.Pts)) {\n                                outRec.FirstLeft = innerOutRec;\n                            } else if (this.Poly2ContainsPoly1(outRec.Pts, outerOutRec.Pts)) {\n                                outRec.FirstLeft = outerOutRec;\n                            } else if (outRec.FirstLeft === innerOutRec || outRec.FirstLeft === outerOutRec) {\n                                outRec.FirstLeft = orfl;\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.FixupFirstLefts3 = function(OldOutRec, NewOutRec) {\n                        var outRec;\n                        var firstLeft;\n                        for(var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++){\n                            outRec = this.m_PolyOuts[i];\n                            firstLeft = ClipperLib.Clipper.ParseFirstLeft(outRec.FirstLeft);\n                            if (outRec.Pts !== null && firstLeft === OldOutRec) {\n                                outRec.FirstLeft = NewOutRec;\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.ParseFirstLeft = function(FirstLeft) {\n                        while(FirstLeft !== null && FirstLeft.Pts === null){\n                            FirstLeft = FirstLeft.FirstLeft;\n                        }\n                        return FirstLeft;\n                    };\n                    ClipperLib.Clipper.prototype.JoinCommonEdges = function() {\n                        for(var i = 0, ilen = this.m_Joins.length; i < ilen; i++){\n                            var join = this.m_Joins[i];\n                            var outRec1 = this.GetOutRec(join.OutPt1.Idx);\n                            var outRec2 = this.GetOutRec(join.OutPt2.Idx);\n                            if (outRec1.Pts === null || outRec2.Pts === null) {\n                                continue;\n                            }\n                            if (outRec1.IsOpen || outRec2.IsOpen) {\n                                continue;\n                            }\n                            var holeStateRec;\n                            if (outRec1 === outRec2) {\n                                holeStateRec = outRec1;\n                            } else if (this.OutRec1RightOfOutRec2(outRec1, outRec2)) {\n                                holeStateRec = outRec2;\n                            } else if (this.OutRec1RightOfOutRec2(outRec2, outRec1)) {\n                                holeStateRec = outRec1;\n                            } else {\n                                holeStateRec = this.GetLowermostRec(outRec1, outRec2);\n                            }\n                            if (!this.JoinPoints(join, outRec1, outRec2)) {\n                                continue;\n                            }\n                            if (outRec1 === outRec2) {\n                                outRec1.Pts = join.OutPt1;\n                                outRec1.BottomPt = null;\n                                outRec2 = this.CreateOutRec();\n                                outRec2.Pts = join.OutPt2;\n                                this.UpdateOutPtIdxs(outRec2);\n                                if (this.Poly2ContainsPoly1(outRec2.Pts, outRec1.Pts)) {\n                                    outRec2.IsHole = !outRec1.IsHole;\n                                    outRec2.FirstLeft = outRec1;\n                                    if (this.m_UsingPolyTree) {\n                                        this.FixupFirstLefts2(outRec2, outRec1);\n                                    }\n                                    if ((outRec2.IsHole ^ this.ReverseSolution) == this.Area$1(outRec2) > 0) {\n                                        this.ReversePolyPtLinks(outRec2.Pts);\n                                    }\n                                } else if (this.Poly2ContainsPoly1(outRec1.Pts, outRec2.Pts)) {\n                                    outRec2.IsHole = outRec1.IsHole;\n                                    outRec1.IsHole = !outRec2.IsHole;\n                                    outRec2.FirstLeft = outRec1.FirstLeft;\n                                    outRec1.FirstLeft = outRec2;\n                                    if (this.m_UsingPolyTree) {\n                                        this.FixupFirstLefts2(outRec1, outRec2);\n                                    }\n                                    if ((outRec1.IsHole ^ this.ReverseSolution) == this.Area$1(outRec1) > 0) {\n                                        this.ReversePolyPtLinks(outRec1.Pts);\n                                    }\n                                } else {\n                                    outRec2.IsHole = outRec1.IsHole;\n                                    outRec2.FirstLeft = outRec1.FirstLeft;\n                                    if (this.m_UsingPolyTree) {\n                                        this.FixupFirstLefts1(outRec1, outRec2);\n                                    }\n                                }\n                            } else {\n                                outRec2.Pts = null;\n                                outRec2.BottomPt = null;\n                                outRec2.Idx = outRec1.Idx;\n                                outRec1.IsHole = holeStateRec.IsHole;\n                                if (holeStateRec === outRec2) {\n                                    outRec1.FirstLeft = outRec2.FirstLeft;\n                                }\n                                outRec2.FirstLeft = outRec1;\n                                if (this.m_UsingPolyTree) {\n                                    this.FixupFirstLefts3(outRec2, outRec1);\n                                }\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.prototype.UpdateOutPtIdxs = function(outrec) {\n                        var op = outrec.Pts;\n                        do {\n                            op.Idx = outrec.Idx;\n                            op = op.Prev;\n                        }while (op !== outrec.Pts)\n                    };\n                    ClipperLib.Clipper.prototype.DoSimplePolygons = function() {\n                        var i = 0;\n                        while(i < this.m_PolyOuts.length){\n                            var outrec = this.m_PolyOuts[i++];\n                            var op = outrec.Pts;\n                            if (op === null || outrec.IsOpen) {\n                                continue;\n                            }\n                            do {\n                                var op2 = op.Next;\n                                while(op2 !== outrec.Pts){\n                                    if (ClipperLib.IntPoint.op_Equality(op.Pt, op2.Pt) && op2.Next !== op && op2.Prev !== op) {\n                                        var op3 = op.Prev;\n                                        var op4 = op2.Prev;\n                                        op.Prev = op4;\n                                        op4.Next = op;\n                                        op2.Prev = op3;\n                                        op3.Next = op2;\n                                        outrec.Pts = op;\n                                        var outrec2 = this.CreateOutRec();\n                                        outrec2.Pts = op2;\n                                        this.UpdateOutPtIdxs(outrec2);\n                                        if (this.Poly2ContainsPoly1(outrec2.Pts, outrec.Pts)) {\n                                            outrec2.IsHole = !outrec.IsHole;\n                                            outrec2.FirstLeft = outrec;\n                                            if (this.m_UsingPolyTree) {\n                                                this.FixupFirstLefts2(outrec2, outrec);\n                                            }\n                                        } else if (this.Poly2ContainsPoly1(outrec.Pts, outrec2.Pts)) {\n                                            outrec2.IsHole = outrec.IsHole;\n                                            outrec.IsHole = !outrec2.IsHole;\n                                            outrec2.FirstLeft = outrec.FirstLeft;\n                                            outrec.FirstLeft = outrec2;\n                                            if (this.m_UsingPolyTree) {\n                                                this.FixupFirstLefts2(outrec, outrec2);\n                                            }\n                                        } else {\n                                            outrec2.IsHole = outrec.IsHole;\n                                            outrec2.FirstLeft = outrec.FirstLeft;\n                                            if (this.m_UsingPolyTree) {\n                                                this.FixupFirstLefts1(outrec, outrec2);\n                                            }\n                                        }\n                                        op2 = op;\n                                    }\n                                    op2 = op2.Next;\n                                }\n                                op = op.Next;\n                            }while (op !== outrec.Pts)\n                        }\n                    };\n                    ClipperLib.Clipper.Area = function(poly) {\n                        if (!Array.isArray(poly)) {\n                            return 0;\n                        }\n                        var cnt = poly.length;\n                        if (cnt < 3) {\n                            return 0;\n                        }\n                        var a = 0;\n                        for(var i = 0, j = cnt - 1; i < cnt; ++i){\n                            a += (poly[j].X + poly[i].X) * (poly[j].Y - poly[i].Y);\n                            j = i;\n                        }\n                        return -a * 0.5;\n                    };\n                    ClipperLib.Clipper.prototype.Area = function(op) {\n                        var opFirst = op;\n                        if (op === null) {\n                            return 0;\n                        }\n                        var a = 0;\n                        do {\n                            a = a + (op.Prev.Pt.X + op.Pt.X) * (op.Prev.Pt.Y - op.Pt.Y);\n                            op = op.Next;\n                        }while (op !== opFirst)\n                        return a * 0.5;\n                    };\n                    ClipperLib.Clipper.prototype.Area$1 = function(outRec) {\n                        return this.Area(outRec.Pts);\n                    };\n                    ClipperLib.Clipper.SimplifyPolygon = function(poly, fillType) {\n                        var result = new Array();\n                        var c = new ClipperLib.Clipper(0);\n                        c.StrictlySimple = true;\n                        c.AddPath(poly, ClipperLib.PolyType.ptSubject, true);\n                        c.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n                        return result;\n                    };\n                    ClipperLib.Clipper.SimplifyPolygons = function(polys, fillType) {\n                        if (typeof fillType === \"undefined\") {\n                            fillType = ClipperLib.PolyFillType.pftEvenOdd;\n                        }\n                        var result = new Array();\n                        var c = new ClipperLib.Clipper(0);\n                        c.StrictlySimple = true;\n                        c.AddPaths(polys, ClipperLib.PolyType.ptSubject, true);\n                        c.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n                        return result;\n                    };\n                    ClipperLib.Clipper.DistanceSqrd = function(pt1, pt2) {\n                        var dx = pt1.X - pt2.X;\n                        var dy = pt1.Y - pt2.Y;\n                        return dx * dx + dy * dy;\n                    };\n                    ClipperLib.Clipper.DistanceFromLineSqrd = function(pt, ln1, ln2) {\n                        var A = ln1.Y - ln2.Y;\n                        var B = ln2.X - ln1.X;\n                        var C = A * ln1.X + B * ln1.Y;\n                        C = A * pt.X + B * pt.Y - C;\n                        return C * C / (A * A + B * B);\n                    };\n                    ClipperLib.Clipper.SlopesNearCollinear = function(pt1, pt2, pt3, distSqrd) {\n                        if (Math.abs(pt1.X - pt2.X) > Math.abs(pt1.Y - pt2.Y)) {\n                            if (pt1.X > pt2.X === pt1.X < pt3.X) {\n                                return ClipperLib.Clipper.DistanceFromLineSqrd(pt1, pt2, pt3) < distSqrd;\n                            } else if (pt2.X > pt1.X === pt2.X < pt3.X) {\n                                return ClipperLib.Clipper.DistanceFromLineSqrd(pt2, pt1, pt3) < distSqrd;\n                            } else {\n                                return ClipperLib.Clipper.DistanceFromLineSqrd(pt3, pt1, pt2) < distSqrd;\n                            }\n                        } else {\n                            if (pt1.Y > pt2.Y === pt1.Y < pt3.Y) {\n                                return ClipperLib.Clipper.DistanceFromLineSqrd(pt1, pt2, pt3) < distSqrd;\n                            } else if (pt2.Y > pt1.Y === pt2.Y < pt3.Y) {\n                                return ClipperLib.Clipper.DistanceFromLineSqrd(pt2, pt1, pt3) < distSqrd;\n                            } else {\n                                return ClipperLib.Clipper.DistanceFromLineSqrd(pt3, pt1, pt2) < distSqrd;\n                            }\n                        }\n                    };\n                    ClipperLib.Clipper.PointsAreClose = function(pt1, pt2, distSqrd) {\n                        var dx = pt1.X - pt2.X;\n                        var dy = pt1.Y - pt2.Y;\n                        return dx * dx + dy * dy <= distSqrd;\n                    };\n                    ClipperLib.Clipper.ExcludeOp = function(op) {\n                        var result = op.Prev;\n                        result.Next = op.Next;\n                        op.Next.Prev = result;\n                        result.Idx = 0;\n                        return result;\n                    };\n                    ClipperLib.Clipper.CleanPolygon = function(path, distance) {\n                        if (typeof distance === \"undefined\") {\n                            distance = 1.415;\n                        }\n                        var cnt = path.length;\n                        if (cnt === 0) {\n                            return new Array();\n                        }\n                        var outPts = new Array(cnt);\n                        for(var i = 0; i < cnt; ++i){\n                            outPts[i] = new ClipperLib.OutPt();\n                        }\n                        for(var i = 0; i < cnt; ++i){\n                            outPts[i].Pt = path[i];\n                            outPts[i].Next = outPts[(i + 1) % cnt];\n                            outPts[i].Next.Prev = outPts[i];\n                            outPts[i].Idx = 0;\n                        }\n                        var distSqrd = distance * distance;\n                        var op = outPts[0];\n                        while(op.Idx === 0 && op.Next !== op.Prev){\n                            if (ClipperLib.Clipper.PointsAreClose(op.Pt, op.Prev.Pt, distSqrd)) {\n                                op = ClipperLib.Clipper.ExcludeOp(op);\n                                cnt--;\n                            } else if (ClipperLib.Clipper.PointsAreClose(op.Prev.Pt, op.Next.Pt, distSqrd)) {\n                                ClipperLib.Clipper.ExcludeOp(op.Next);\n                                op = ClipperLib.Clipper.ExcludeOp(op);\n                                cnt -= 2;\n                            } else if (ClipperLib.Clipper.SlopesNearCollinear(op.Prev.Pt, op.Pt, op.Next.Pt, distSqrd)) {\n                                op = ClipperLib.Clipper.ExcludeOp(op);\n                                cnt--;\n                            } else {\n                                op.Idx = 1;\n                                op = op.Next;\n                            }\n                        }\n                        if (cnt < 3) {\n                            cnt = 0;\n                        }\n                        var result = new Array(cnt);\n                        for(var i = 0; i < cnt; ++i){\n                            result[i] = new ClipperLib.IntPoint1(op.Pt);\n                            op = op.Next;\n                        }\n                        outPts = null;\n                        return result;\n                    };\n                    ClipperLib.Clipper.CleanPolygons = function(polys, distance) {\n                        var result = new Array(polys.length);\n                        for(var i = 0, ilen = polys.length; i < ilen; i++){\n                            result[i] = ClipperLib.Clipper.CleanPolygon(polys[i], distance);\n                        }\n                        return result;\n                    };\n                    ClipperLib.Clipper.Minkowski = function(pattern, path, IsSum, IsClosed) {\n                        var delta = IsClosed ? 1 : 0;\n                        var polyCnt = pattern.length;\n                        var pathCnt = path.length;\n                        var result = new Array();\n                        if (IsSum) {\n                            for(var i = 0; i < pathCnt; i++){\n                                var p = new Array(polyCnt);\n                                for(var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j]){\n                                    p[j] = new ClipperLib.IntPoint2(path[i].X + ip.X, path[i].Y + ip.Y);\n                                }\n                                result.push(p);\n                            }\n                        } else {\n                            for(var i = 0; i < pathCnt; i++){\n                                var p = new Array(polyCnt);\n                                for(var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j]){\n                                    p[j] = new ClipperLib.IntPoint2(path[i].X - ip.X, path[i].Y - ip.Y);\n                                }\n                                result.push(p);\n                            }\n                        }\n                        var quads = new Array();\n                        for(var i = 0; i < pathCnt - 1 + delta; i++){\n                            for(var j = 0; j < polyCnt; j++){\n                                var quad = new Array();\n                                quad.push(result[i % pathCnt][j % polyCnt]);\n                                quad.push(result[(i + 1) % pathCnt][j % polyCnt]);\n                                quad.push(result[(i + 1) % pathCnt][(j + 1) % polyCnt]);\n                                quad.push(result[i % pathCnt][(j + 1) % polyCnt]);\n                                if (!ClipperLib.Clipper.Orientation(quad)) {\n                                    quad.reverse();\n                                }\n                                quads.push(quad);\n                            }\n                        }\n                        return quads;\n                    };\n                    ClipperLib.Clipper.MinkowskiSum = function(pattern, path_or_paths, pathIsClosed) {\n                        if (!(path_or_paths[0] instanceof Array)) {\n                            var path = path_or_paths;\n                            var paths = ClipperLib.Clipper.Minkowski(pattern, path, true, pathIsClosed);\n                            var c = new ClipperLib.Clipper();\n                            c.AddPaths(paths, ClipperLib.PolyType.ptSubject, true);\n                            c.Execute(ClipperLib.ClipType.ctUnion, paths, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n                            return paths;\n                        } else {\n                            var paths = path_or_paths;\n                            var solution = new ClipperLib.Paths();\n                            var c = new ClipperLib.Clipper();\n                            for(var i = 0; i < paths.length; ++i){\n                                var tmp = ClipperLib.Clipper.Minkowski(pattern, paths[i], true, pathIsClosed);\n                                c.AddPaths(tmp, ClipperLib.PolyType.ptSubject, true);\n                                if (pathIsClosed) {\n                                    var path = ClipperLib.Clipper.TranslatePath(paths[i], pattern[0]);\n                                    c.AddPath(path, ClipperLib.PolyType.ptClip, true);\n                                }\n                            }\n                            c.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n                            return solution;\n                        }\n                    };\n                    ClipperLib.Clipper.TranslatePath = function(path, delta) {\n                        var outPath = new ClipperLib.Path();\n                        for(var i = 0; i < path.length; i++){\n                            outPath.push(new ClipperLib.IntPoint2(path[i].X + delta.X, path[i].Y + delta.Y));\n                        }\n                        return outPath;\n                    };\n                    ClipperLib.Clipper.MinkowskiDiff = function(poly1, poly2) {\n                        var paths = ClipperLib.Clipper.Minkowski(poly1, poly2, false, true);\n                        var c = new ClipperLib.Clipper();\n                        c.AddPaths(paths, ClipperLib.PolyType.ptSubject, true);\n                        c.Execute(ClipperLib.ClipType.ctUnion, paths, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n                        return paths;\n                    };\n                    ClipperLib.Clipper.PolyTreeToPaths = function(polytree) {\n                        var result = new Array();\n                        ClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntAny, result);\n                        return result;\n                    };\n                    ClipperLib.Clipper.AddPolyNodeToPaths = function(polynode, nt, paths) {\n                        var match = true;\n                        switch(nt){\n                            case ClipperLib.Clipper.NodeType.ntOpen:\n                                return;\n                            case ClipperLib.Clipper.NodeType.ntClosed:\n                                match = !polynode.IsOpen;\n                                break;\n                        }\n                        if (polynode.m_polygon.length > 0 && match) {\n                            paths.push(polynode.m_polygon);\n                        }\n                        for(var $i3 = 0, $t3 = polynode.Childs(), $l3 = $t3.length, pn = $t3[$i3]; $i3 < $l3; $i3++, pn = $t3[$i3]){\n                            ClipperLib.Clipper.AddPolyNodeToPaths(pn, nt, paths);\n                        }\n                    };\n                    ClipperLib.Clipper.OpenPathsFromPolyTree = function(polytree) {\n                        var result = new ClipperLib.Paths();\n                        for(var i = 0, ilen = polytree.ChildCount(); i < ilen; i++){\n                            if (polytree.Childs()[i].IsOpen) {\n                                result.push(polytree.Childs()[i].m_polygon);\n                            }\n                        }\n                        return result;\n                    };\n                    ClipperLib.Clipper.ClosedPathsFromPolyTree = function(polytree) {\n                        var result = new ClipperLib.Paths();\n                        ClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntClosed, result);\n                        return result;\n                    };\n                    Inherit(ClipperLib.Clipper, ClipperLib.ClipperBase);\n                    ClipperLib.Clipper.NodeType = {\n                        ntAny: 0,\n                        ntOpen: 1,\n                        ntClosed: 2\n                    };\n                    ClipperLib.ClipperOffset = function(miterLimit, arcTolerance) {\n                        if (typeof miterLimit === \"undefined\") {\n                            miterLimit = 2;\n                        }\n                        if (typeof arcTolerance === \"undefined\") {\n                            arcTolerance = ClipperLib.ClipperOffset.def_arc_tolerance;\n                        }\n                        this.m_destPolys = new ClipperLib.Paths();\n                        this.m_srcPoly = new ClipperLib.Path();\n                        this.m_destPoly = new ClipperLib.Path();\n                        this.m_normals = new Array();\n                        this.m_delta = 0;\n                        this.m_sinA = 0;\n                        this.m_sin = 0;\n                        this.m_cos = 0;\n                        this.m_miterLim = 0;\n                        this.m_StepsPerRad = 0;\n                        this.m_lowest = new ClipperLib.IntPoint0();\n                        this.m_polyNodes = new ClipperLib.PolyNode();\n                        this.MiterLimit = miterLimit;\n                        this.ArcTolerance = arcTolerance;\n                        this.m_lowest.X = -1;\n                    };\n                    ClipperLib.ClipperOffset.two_pi = 6.28318530717959;\n                    ClipperLib.ClipperOffset.def_arc_tolerance = 0.25;\n                    ClipperLib.ClipperOffset.prototype.Clear = function() {\n                        ClipperLib.Clear(this.m_polyNodes.Childs());\n                        this.m_lowest.X = -1;\n                    };\n                    ClipperLib.ClipperOffset.Round = ClipperLib.Clipper.Round;\n                    ClipperLib.ClipperOffset.prototype.AddPath = function(path, joinType, endType) {\n                        var highI = path.length - 1;\n                        if (highI < 0) {\n                            return;\n                        }\n                        var newNode = new ClipperLib.PolyNode();\n                        newNode.m_jointype = joinType;\n                        newNode.m_endtype = endType;\n                        if (endType === ClipperLib.EndType.etClosedLine || endType === ClipperLib.EndType.etClosedPolygon) {\n                            while(highI > 0 && ClipperLib.IntPoint.op_Equality(path[0], path[highI])){\n                                highI--;\n                            }\n                        }\n                        newNode.m_polygon.push(path[0]);\n                        var j = 0, k = 0;\n                        for(var i = 1; i <= highI; i++){\n                            if (ClipperLib.IntPoint.op_Inequality(newNode.m_polygon[j], path[i])) {\n                                j++;\n                                newNode.m_polygon.push(path[i]);\n                                if (path[i].Y > newNode.m_polygon[k].Y || path[i].Y === newNode.m_polygon[k].Y && path[i].X < newNode.m_polygon[k].X) {\n                                    k = j;\n                                }\n                            }\n                        }\n                        if (endType === ClipperLib.EndType.etClosedPolygon && j < 2) {\n                            return;\n                        }\n                        this.m_polyNodes.AddChild(newNode);\n                        if (endType !== ClipperLib.EndType.etClosedPolygon) {\n                            return;\n                        }\n                        if (this.m_lowest.X < 0) {\n                            this.m_lowest = new ClipperLib.IntPoint2(this.m_polyNodes.ChildCount() - 1, k);\n                        } else {\n                            var ip = this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon[this.m_lowest.Y];\n                            if (newNode.m_polygon[k].Y > ip.Y || newNode.m_polygon[k].Y === ip.Y && newNode.m_polygon[k].X < ip.X) {\n                                this.m_lowest = new ClipperLib.IntPoint2(this.m_polyNodes.ChildCount() - 1, k);\n                            }\n                        }\n                    };\n                    ClipperLib.ClipperOffset.prototype.AddPaths = function(paths, joinType, endType) {\n                        for(var i = 0, ilen = paths.length; i < ilen; i++){\n                            this.AddPath(paths[i], joinType, endType);\n                        }\n                    };\n                    ClipperLib.ClipperOffset.prototype.FixOrientations = function() {\n                        if (this.m_lowest.X >= 0 && !ClipperLib.Clipper.Orientation(this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon)) {\n                            for(var i = 0; i < this.m_polyNodes.ChildCount(); i++){\n                                var node = this.m_polyNodes.Childs()[i];\n                                if (node.m_endtype === ClipperLib.EndType.etClosedPolygon || node.m_endtype === ClipperLib.EndType.etClosedLine && ClipperLib.Clipper.Orientation(node.m_polygon)) {\n                                    node.m_polygon.reverse();\n                                }\n                            }\n                        } else {\n                            for(var i = 0; i < this.m_polyNodes.ChildCount(); i++){\n                                var node = this.m_polyNodes.Childs()[i];\n                                if (node.m_endtype === ClipperLib.EndType.etClosedLine && !ClipperLib.Clipper.Orientation(node.m_polygon)) {\n                                    node.m_polygon.reverse();\n                                }\n                            }\n                        }\n                    };\n                    ClipperLib.ClipperOffset.GetUnitNormal = function(pt1, pt2) {\n                        var dx = pt2.X - pt1.X;\n                        var dy = pt2.Y - pt1.Y;\n                        if (dx === 0 && dy === 0) {\n                            return new ClipperLib.DoublePoint2(0, 0);\n                        }\n                        var f = 1 / Math.sqrt(dx * dx + dy * dy);\n                        dx *= f;\n                        dy *= f;\n                        return new ClipperLib.DoublePoint2(dy, -dx);\n                    };\n                    ClipperLib.ClipperOffset.prototype.DoOffset = function(delta) {\n                        this.m_destPolys = new Array();\n                        this.m_delta = delta;\n                        if (ClipperLib.ClipperBase.near_zero(delta)) {\n                            for(var i = 0; i < this.m_polyNodes.ChildCount(); i++){\n                                var node = this.m_polyNodes.Childs()[i];\n                                if (node.m_endtype === ClipperLib.EndType.etClosedPolygon) {\n                                    this.m_destPolys.push(node.m_polygon);\n                                }\n                            }\n                            return;\n                        }\n                        if (this.MiterLimit > 2) {\n                            this.m_miterLim = 2 / (this.MiterLimit * this.MiterLimit);\n                        } else {\n                            this.m_miterLim = 0.5;\n                        }\n                        var y;\n                        if (this.ArcTolerance <= 0) {\n                            y = ClipperLib.ClipperOffset.def_arc_tolerance;\n                        } else if (this.ArcTolerance > Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance) {\n                            y = Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance;\n                        } else {\n                            y = this.ArcTolerance;\n                        }\n                        var steps = 3.14159265358979 / Math.acos(1 - y / Math.abs(delta));\n                        this.m_sin = Math.sin(ClipperLib.ClipperOffset.two_pi / steps);\n                        this.m_cos = Math.cos(ClipperLib.ClipperOffset.two_pi / steps);\n                        this.m_StepsPerRad = steps / ClipperLib.ClipperOffset.two_pi;\n                        if (delta < 0) {\n                            this.m_sin = -this.m_sin;\n                        }\n                        for(var i = 0; i < this.m_polyNodes.ChildCount(); i++){\n                            var node = this.m_polyNodes.Childs()[i];\n                            this.m_srcPoly = node.m_polygon;\n                            var len = this.m_srcPoly.length;\n                            if (len === 0 || delta <= 0 && (len < 3 || node.m_endtype !== ClipperLib.EndType.etClosedPolygon)) {\n                                continue;\n                            }\n                            this.m_destPoly = new Array();\n                            if (len === 1) {\n                                if (node.m_jointype === ClipperLib.JoinType.jtRound) {\n                                    var X = 1, Y = 0;\n                                    for(var j = 1; j <= steps; j++){\n                                        this.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + Y * delta)));\n                                        var X2 = X;\n                                        X = X * this.m_cos - this.m_sin * Y;\n                                        Y = X2 * this.m_sin + Y * this.m_cos;\n                                    }\n                                } else {\n                                    var X = -1, Y = -1;\n                                    for(var j = 0; j < 4; ++j){\n                                        this.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + Y * delta)));\n                                        if (X < 0) {\n                                            X = 1;\n                                        } else if (Y < 0) {\n                                            Y = 1;\n                                        } else {\n                                            X = -1;\n                                        }\n                                    }\n                                }\n                                this.m_destPolys.push(this.m_destPoly);\n                                continue;\n                            }\n                            this.m_normals.length = 0;\n                            for(var j = 0; j < len - 1; j++){\n                                this.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[j], this.m_srcPoly[j + 1]));\n                            }\n                            if (node.m_endtype === ClipperLib.EndType.etClosedLine || node.m_endtype === ClipperLib.EndType.etClosedPolygon) {\n                                this.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[len - 1], this.m_srcPoly[0]));\n                            } else {\n                                this.m_normals.push(new ClipperLib.DoublePoint1(this.m_normals[len - 2]));\n                            }\n                            if (node.m_endtype === ClipperLib.EndType.etClosedPolygon) {\n                                var k = len - 1;\n                                for(var j = 0; j < len; j++){\n                                    k = this.OffsetPoint(j, k, node.m_jointype);\n                                }\n                                this.m_destPolys.push(this.m_destPoly);\n                            } else if (node.m_endtype === ClipperLib.EndType.etClosedLine) {\n                                var k = len - 1;\n                                for(var j = 0; j < len; j++){\n                                    k = this.OffsetPoint(j, k, node.m_jointype);\n                                }\n                                this.m_destPolys.push(this.m_destPoly);\n                                this.m_destPoly = new Array();\n                                var n = this.m_normals[len - 1];\n                                for(var j = len - 1; j > 0; j--){\n                                    this.m_normals[j] = new ClipperLib.DoublePoint2(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n                                }\n                                this.m_normals[0] = new ClipperLib.DoublePoint2(-n.X, -n.Y);\n                                k = 0;\n                                for(var j = len - 1; j >= 0; j--){\n                                    k = this.OffsetPoint(j, k, node.m_jointype);\n                                }\n                                this.m_destPolys.push(this.m_destPoly);\n                            } else {\n                                var k = 0;\n                                for(var j = 1; j < len - 1; ++j){\n                                    k = this.OffsetPoint(j, k, node.m_jointype);\n                                }\n                                var pt1;\n                                if (node.m_endtype === ClipperLib.EndType.etOpenButt) {\n                                    var j = len - 1;\n                                    pt1 = new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * delta));\n                                    this.m_destPoly.push(pt1);\n                                    pt1 = new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X - this.m_normals[j].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y - this.m_normals[j].Y * delta));\n                                    this.m_destPoly.push(pt1);\n                                } else {\n                                    var j = len - 1;\n                                    k = len - 2;\n                                    this.m_sinA = 0;\n                                    this.m_normals[j] = new ClipperLib.DoublePoint2(-this.m_normals[j].X, -this.m_normals[j].Y);\n                                    if (node.m_endtype === ClipperLib.EndType.etOpenSquare) {\n                                        this.DoSquare(j, k);\n                                    } else {\n                                        this.DoRound(j, k);\n                                    }\n                                }\n                                for(var j = len - 1; j > 0; j--){\n                                    this.m_normals[j] = new ClipperLib.DoublePoint2(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n                                }\n                                this.m_normals[0] = new ClipperLib.DoublePoint2(-this.m_normals[1].X, -this.m_normals[1].Y);\n                                k = len - 1;\n                                for(var j = k - 1; j > 0; --j){\n                                    k = this.OffsetPoint(j, k, node.m_jointype);\n                                }\n                                if (node.m_endtype === ClipperLib.EndType.etOpenButt) {\n                                    pt1 = new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X - this.m_normals[0].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y - this.m_normals[0].Y * delta));\n                                    this.m_destPoly.push(pt1);\n                                    pt1 = new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + this.m_normals[0].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + this.m_normals[0].Y * delta));\n                                    this.m_destPoly.push(pt1);\n                                } else {\n                                    k = 1;\n                                    this.m_sinA = 0;\n                                    if (node.m_endtype === ClipperLib.EndType.etOpenSquare) {\n                                        this.DoSquare(0, 1);\n                                    } else {\n                                        this.DoRound(0, 1);\n                                    }\n                                }\n                                this.m_destPolys.push(this.m_destPoly);\n                            }\n                        }\n                    };\n                    ClipperLib.ClipperOffset.prototype.Execute = function() {\n                        var a = arguments, ispolytree = a[0] instanceof ClipperLib.PolyTree;\n                        if (!ispolytree) {\n                            var solution = a[0], delta = a[1];\n                            ClipperLib.Clear(solution);\n                            this.FixOrientations();\n                            this.DoOffset(delta);\n                            var clpr = new ClipperLib.Clipper(0);\n                            clpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n                            if (delta > 0) {\n                                clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n                            } else {\n                                var r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n                                var outer = new ClipperLib.Path();\n                                outer.push(new ClipperLib.IntPoint2(r.left - 10, r.bottom + 10));\n                                outer.push(new ClipperLib.IntPoint2(r.right + 10, r.bottom + 10));\n                                outer.push(new ClipperLib.IntPoint2(r.right + 10, r.top - 10));\n                                outer.push(new ClipperLib.IntPoint2(r.left - 10, r.top - 10));\n                                clpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n                                clpr.ReverseSolution = true;\n                                clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n                                if (solution.length > 0) {\n                                    solution.splice(0, 1);\n                                }\n                            }\n                        } else {\n                            var solution = a[0], delta = a[1];\n                            solution.Clear();\n                            this.FixOrientations();\n                            this.DoOffset(delta);\n                            var clpr = new ClipperLib.Clipper(0);\n                            clpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n                            if (delta > 0) {\n                                clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n                            } else {\n                                var r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n                                var outer = new ClipperLib.Path();\n                                outer.push(new ClipperLib.IntPoint2(r.left - 10, r.bottom + 10));\n                                outer.push(new ClipperLib.IntPoint2(r.right + 10, r.bottom + 10));\n                                outer.push(new ClipperLib.IntPoint2(r.right + 10, r.top - 10));\n                                outer.push(new ClipperLib.IntPoint2(r.left - 10, r.top - 10));\n                                clpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n                                clpr.ReverseSolution = true;\n                                clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n                                if (solution.ChildCount() === 1 && solution.Childs()[0].ChildCount() > 0) {\n                                    var outerNode = solution.Childs()[0];\n                                    solution.Childs()[0] = outerNode.Childs()[0];\n                                    solution.Childs()[0].m_Parent = solution;\n                                    for(var i = 1; i < outerNode.ChildCount(); i++){\n                                        solution.AddChild(outerNode.Childs()[i]);\n                                    }\n                                } else {\n                                    solution.Clear();\n                                }\n                            }\n                        }\n                    };\n                    ClipperLib.ClipperOffset.prototype.OffsetPoint = function(j, k, jointype) {\n                        this.m_sinA = this.m_normals[k].X * this.m_normals[j].Y - this.m_normals[j].X * this.m_normals[k].Y;\n                        if (Math.abs(this.m_sinA * this.m_delta) < 1) {\n                            var cosA = this.m_normals[k].X * this.m_normals[j].X + this.m_normals[j].Y * this.m_normals[k].Y;\n                            if (cosA > 0) {\n                                this.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[k].X * this.m_delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[k].Y * this.m_delta)));\n                                return k;\n                            }\n                        } else if (this.m_sinA > 1) {\n                            this.m_sinA = 1;\n                        } else if (this.m_sinA < -1) {\n                            this.m_sinA = -1;\n                        }\n                        if (this.m_sinA * this.m_delta < 0) {\n                            this.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[k].X * this.m_delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[k].Y * this.m_delta)));\n                            this.m_destPoly.push(new ClipperLib.IntPoint1(this.m_srcPoly[j]));\n                            this.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta)));\n                        } else {\n                            switch(jointype){\n                                case ClipperLib.JoinType.jtMiter:\n                                    {\n                                        var r = 1 + (this.m_normals[j].X * this.m_normals[k].X + this.m_normals[j].Y * this.m_normals[k].Y);\n                                        if (r >= this.m_miterLim) {\n                                            this.DoMiter(j, k, r);\n                                        } else {\n                                            this.DoSquare(j, k);\n                                        }\n                                        break;\n                                    }\n                                case ClipperLib.JoinType.jtSquare:\n                                    this.DoSquare(j, k);\n                                    break;\n                                case ClipperLib.JoinType.jtRound:\n                                    this.DoRound(j, k);\n                                    break;\n                            }\n                        }\n                        k = j;\n                        return k;\n                    };\n                    ClipperLib.ClipperOffset.prototype.DoSquare = function(j, k) {\n                        var dx = Math.tan(Math.atan2(this.m_sinA, this.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y) / 4);\n                        this.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_delta * (this.m_normals[k].X - this.m_normals[k].Y * dx)), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_delta * (this.m_normals[k].Y + this.m_normals[k].X * dx))));\n                        this.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_delta * (this.m_normals[j].X + this.m_normals[j].Y * dx)), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_delta * (this.m_normals[j].Y - this.m_normals[j].X * dx))));\n                    };\n                    ClipperLib.ClipperOffset.prototype.DoMiter = function(j, k, r) {\n                        var q = this.m_delta / r;\n                        this.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + (this.m_normals[k].X + this.m_normals[j].X) * q), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + (this.m_normals[k].Y + this.m_normals[j].Y) * q)));\n                    };\n                    ClipperLib.ClipperOffset.prototype.DoRound = function(j, k) {\n                        var a = Math.atan2(this.m_sinA, this.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y);\n                        var steps = Math.max(ClipperLib.Cast_Int32(ClipperLib.ClipperOffset.Round(this.m_StepsPerRad * Math.abs(a))), 1);\n                        var X = this.m_normals[k].X, Y = this.m_normals[k].Y, X2;\n                        for(var i = 0; i < steps; ++i){\n                            this.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + X * this.m_delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + Y * this.m_delta)));\n                            X2 = X;\n                            X = X * this.m_cos - this.m_sin * Y;\n                            Y = X2 * this.m_sin + Y * this.m_cos;\n                        }\n                        this.m_destPoly.push(new ClipperLib.IntPoint2(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta)));\n                    };\n                    ClipperLib.Error = function(message) {\n                        try {\n                            throw new Error(message);\n                        } catch (err) {\n                            alert(err.message);\n                        }\n                    };\n                    ClipperLib.JS = {\n                    };\n                    ClipperLib.JS.AreaOfPolygon = function(poly, scale) {\n                        if (!scale) {\n                            scale = 1;\n                        }\n                        return ClipperLib.Clipper.Area(poly) / (scale * scale);\n                    };\n                    ClipperLib.JS.AreaOfPolygons = function(poly, scale) {\n                        if (!scale) {\n                            scale = 1;\n                        }\n                        var area = 0;\n                        for(var i = 0; i < poly.length; i++){\n                            area += ClipperLib.Clipper.Area(poly[i]);\n                        }\n                        return area / (scale * scale);\n                    };\n                    ClipperLib.JS.BoundsOfPath = function(path, scale) {\n                        return ClipperLib.JS.BoundsOfPaths([\n                            path\n                        ], scale);\n                    };\n                    ClipperLib.JS.BoundsOfPaths = function(paths, scale) {\n                        if (!scale) {\n                            scale = 1;\n                        }\n                        var bounds = ClipperLib.Clipper.GetBounds(paths);\n                        bounds.left /= scale;\n                        bounds.bottom /= scale;\n                        bounds.right /= scale;\n                        bounds.top /= scale;\n                        return bounds;\n                    };\n                    ClipperLib.JS.Clean = function(polygon, delta) {\n                        if (!(polygon instanceof Array)) {\n                            return [];\n                        }\n                        var isPolygons = polygon[0] instanceof Array;\n                        var polygon = ClipperLib.JS.Clone(polygon);\n                        if (typeof delta !== \"number\" || delta === null) {\n                            ClipperLib.Error(\"Delta is not a number in Clean().\");\n                            return polygon;\n                        }\n                        if (polygon.length === 0 || polygon.length === 1 && polygon[0].length === 0 || delta < 0) {\n                            return polygon;\n                        }\n                        if (!isPolygons) {\n                            polygon = [\n                                polygon\n                            ];\n                        }\n                        var k_length = polygon.length;\n                        var len, poly, result, d, p, j, i;\n                        var results = [];\n                        for(var k = 0; k < k_length; k++){\n                            poly = polygon[k];\n                            len = poly.length;\n                            if (len === 0) {\n                                continue;\n                            } else if (len < 3) {\n                                result = poly;\n                                results.push(result);\n                                continue;\n                            }\n                            result = poly;\n                            d = delta * delta;\n                            p = poly[0];\n                            j = 1;\n                            for(i = 1; i < len; i++){\n                                if ((poly[i].X - p.X) * (poly[i].X - p.X) + (poly[i].Y - p.Y) * (poly[i].Y - p.Y) <= d) {\n                                    continue;\n                                }\n                                result[j] = poly[i];\n                                p = poly[i];\n                                j++;\n                            }\n                            p = poly[j - 1];\n                            if ((poly[0].X - p.X) * (poly[0].X - p.X) + (poly[0].Y - p.Y) * (poly[0].Y - p.Y) <= d) {\n                                j--;\n                            }\n                            if (j < len) {\n                                result.splice(j, len - j);\n                            }\n                            if (result.length) {\n                                results.push(result);\n                            }\n                        }\n                        if (!isPolygons && results.length) {\n                            results = results[0];\n                        } else if (!isPolygons && results.length === 0) {\n                            results = [];\n                        } else if (isPolygons && results.length === 0) {\n                            results = [\n                                [], \n                            ];\n                        }\n                        return results;\n                    };\n                    ClipperLib.JS.Clone = function(polygon) {\n                        if (!(polygon instanceof Array)) {\n                            return [];\n                        }\n                        if (polygon.length === 0) {\n                            return [];\n                        } else if (polygon.length === 1 && polygon[0].length === 0) {\n                            return [\n                                [], \n                            ];\n                        }\n                        var isPolygons = polygon[0] instanceof Array;\n                        if (!isPolygons) {\n                            polygon = [\n                                polygon\n                            ];\n                        }\n                        var len = polygon.length, plen, i, j, result;\n                        var results = new Array(len);\n                        for(i = 0; i < len; i++){\n                            plen = polygon[i].length;\n                            result = new Array(plen);\n                            for(j = 0; j < plen; j++){\n                                result[j] = {\n                                    X: polygon[i][j].X,\n                                    Y: polygon[i][j].Y\n                                };\n                            }\n                            results[i] = result;\n                        }\n                        if (!isPolygons) {\n                            results = results[0];\n                        }\n                        return results;\n                    };\n                    ClipperLib.JS.Lighten = function(polygon, tolerance) {\n                        if (!(polygon instanceof Array)) {\n                            return [];\n                        }\n                        if (typeof tolerance !== \"number\" || tolerance === null) {\n                            ClipperLib.Error(\"Tolerance is not a number in Lighten().\");\n                            return ClipperLib.JS.Clone(polygon);\n                        }\n                        if (polygon.length === 0 || polygon.length === 1 && polygon[0].length === 0 || tolerance < 0) {\n                            return ClipperLib.JS.Clone(polygon);\n                        }\n                        var isPolygons = polygon[0] instanceof Array;\n                        if (!isPolygons) {\n                            polygon = [\n                                polygon\n                            ];\n                        }\n                        var i, j, poly, k, poly2, plen, A, B, P, d, rem, addlast;\n                        var bxax, byay, l, ax, ay;\n                        var len = polygon.length;\n                        var toleranceSq = tolerance * tolerance;\n                        var results = [];\n                        for(i = 0; i < len; i++){\n                            poly = polygon[i];\n                            plen = poly.length;\n                            if (plen === 0) {\n                                continue;\n                            }\n                            for(k = 0; k < 1000000; k++){\n                                poly2 = [];\n                                plen = poly.length;\n                                if (poly[plen - 1].X !== poly[0].X || poly[plen - 1].Y !== poly[0].Y) {\n                                    addlast = 1;\n                                    poly.push({\n                                        X: poly[0].X,\n                                        Y: poly[0].Y\n                                    });\n                                    plen = poly.length;\n                                } else {\n                                    addlast = 0;\n                                }\n                                rem = [];\n                                for(j = 0; j < plen - 2; j++){\n                                    A = poly[j];\n                                    P = poly[j + 1];\n                                    B = poly[j + 2];\n                                    ax = A.X;\n                                    ay = A.Y;\n                                    bxax = B.X - ax;\n                                    byay = B.Y - ay;\n                                    if (bxax !== 0 || byay !== 0) {\n                                        l = ((P.X - ax) * bxax + (P.Y - ay) * byay) / (bxax * bxax + byay * byay);\n                                        if (l > 1) {\n                                            ax = B.X;\n                                            ay = B.Y;\n                                        } else if (l > 0) {\n                                            ax += bxax * l;\n                                            ay += byay * l;\n                                        }\n                                    }\n                                    bxax = P.X - ax;\n                                    byay = P.Y - ay;\n                                    d = bxax * bxax + byay * byay;\n                                    if (d <= toleranceSq) {\n                                        rem[j + 1] = 1;\n                                        j++;\n                                    }\n                                }\n                                poly2.push({\n                                    X: poly[0].X,\n                                    Y: poly[0].Y\n                                });\n                                for(j = 1; j < plen - 1; j++){\n                                    if (!rem[j]) {\n                                        poly2.push({\n                                            X: poly[j].X,\n                                            Y: poly[j].Y\n                                        });\n                                    }\n                                }\n                                poly2.push({\n                                    X: poly[plen - 1].X,\n                                    Y: poly[plen - 1].Y\n                                });\n                                if (addlast) {\n                                    poly.pop();\n                                }\n                                if (!rem.length) {\n                                    break;\n                                } else {\n                                    poly = poly2;\n                                }\n                            }\n                            plen = poly2.length;\n                            if (poly2[plen - 1].X === poly2[0].X && poly2[plen - 1].Y === poly2[0].Y) {\n                                poly2.pop();\n                            }\n                            if (poly2.length > 2) {\n                                results.push(poly2);\n                            }\n                        }\n                        if (!isPolygons) {\n                            results = results[0];\n                        }\n                        if (typeof results === \"undefined\") {\n                            results = [];\n                        }\n                        return results;\n                    };\n                    ClipperLib.JS.PerimeterOfPath = function(path, closed, scale) {\n                        if (typeof path === \"undefined\") {\n                            return 0;\n                        }\n                        var sqrt = Math.sqrt;\n                        var perimeter = 0;\n                        var p1, p2, p1x = 0, p1y = 0, p2x = 0, p2y = 0;\n                        var j = path.length;\n                        if (j < 2) {\n                            return 0;\n                        }\n                        if (closed) {\n                            path[j] = path[0];\n                            j++;\n                        }\n                        while(--j){\n                            p1 = path[j];\n                            p1x = p1.X;\n                            p1y = p1.Y;\n                            p2 = path[j - 1];\n                            p2x = p2.X;\n                            p2y = p2.Y;\n                            perimeter += sqrt((p1x - p2x) * (p1x - p2x) + (p1y - p2y) * (p1y - p2y));\n                        }\n                        if (closed) {\n                            path.pop();\n                        }\n                        return perimeter / scale;\n                    };\n                    ClipperLib.JS.PerimeterOfPaths = function(paths, closed, scale) {\n                        if (!scale) {\n                            scale = 1;\n                        }\n                        var perimeter = 0;\n                        for(var i = 0; i < paths.length; i++){\n                            perimeter += ClipperLib.JS.PerimeterOfPath(paths[i], closed, scale);\n                        }\n                        return perimeter;\n                    };\n                    ClipperLib.JS.ScaleDownPath = function(path, scale) {\n                        var i, p;\n                        if (!scale) {\n                            scale = 1;\n                        }\n                        i = path.length;\n                        while(i--){\n                            p = path[i];\n                            p.X = p.X / scale;\n                            p.Y = p.Y / scale;\n                        }\n                    };\n                    ClipperLib.JS.ScaleDownPaths = function(paths, scale) {\n                        var i, j, p;\n                        if (!scale) {\n                            scale = 1;\n                        }\n                        i = paths.length;\n                        while(i--){\n                            j = paths[i].length;\n                            while(j--){\n                                p = paths[i][j];\n                                p.X = p.X / scale;\n                                p.Y = p.Y / scale;\n                            }\n                        }\n                    };\n                    ClipperLib.JS.ScaleUpPath = function(path, scale) {\n                        var i, p, round = Math.round;\n                        if (!scale) {\n                            scale = 1;\n                        }\n                        i = path.length;\n                        while(i--){\n                            p = path[i];\n                            p.X = round(p.X * scale);\n                            p.Y = round(p.Y * scale);\n                        }\n                    };\n                    ClipperLib.JS.ScaleUpPaths = function(paths, scale) {\n                        var i, j, p, round = Math.round;\n                        if (!scale) {\n                            scale = 1;\n                        }\n                        i = paths.length;\n                        while(i--){\n                            j = paths[i].length;\n                            while(j--){\n                                p = paths[i][j];\n                                p.X = round(p.X * scale);\n                                p.Y = round(p.Y * scale);\n                            }\n                        }\n                    };\n                    ClipperLib.ExPolygons = function() {\n                        return [];\n                    };\n                    ClipperLib.ExPolygon = function() {\n                        this.outer = null;\n                        this.holes = null;\n                    };\n                    ClipperLib.JS.AddOuterPolyNodeToExPolygons = function(polynode, expolygons) {\n                        var ep = new ClipperLib.ExPolygon();\n                        ep.outer = polynode.Contour();\n                        var childs = polynode.Childs();\n                        var ilen = childs.length;\n                        ep.holes = new Array(ilen);\n                        var node, n, i, j, childs2, jlen;\n                        for(i = 0; i < ilen; i++){\n                            node = childs[i];\n                            ep.holes[i] = node.Contour();\n                            for(j = 0, childs2 = node.Childs(), jlen = childs2.length; j < jlen; j++){\n                                n = childs2[j];\n                                ClipperLib.JS.AddOuterPolyNodeToExPolygons(n, expolygons);\n                            }\n                        }\n                        expolygons.push(ep);\n                    };\n                    ClipperLib.JS.ExPolygonsToPaths = function(expolygons) {\n                        var a, i, alen, ilen;\n                        var paths = new ClipperLib.Paths();\n                        for(a = 0, alen = expolygons.length; a < alen; a++){\n                            paths.push(expolygons[a].outer);\n                            for(i = 0, ilen = expolygons[a].holes.length; i < ilen; i++){\n                                paths.push(expolygons[a].holes[i]);\n                            }\n                        }\n                        return paths;\n                    };\n                    ClipperLib.JS.PolyTreeToExPolygons = function(polytree) {\n                        var expolygons = new ClipperLib.ExPolygons();\n                        var node, i, childs, ilen;\n                        for(i = 0, childs = polytree.Childs(), ilen = childs.length; i < ilen; i++){\n                            node = childs[i];\n                            ClipperLib.JS.AddOuterPolyNodeToExPolygons(node, expolygons);\n                        }\n                        return expolygons;\n                    };\n                })();\n            });\n            exports_1(\"default\", clipper);\n            exports_1(\"__esModule\", __esModule = true);\n        }\n    };\n});\nSystem.register(\"-/clipper-js@v1.0.2-Mou0diNPTgyilhisGDlW/dist=es2020/clipper-js\", [\n    \"-/clipper-lib@v6.4.2-JisZmmhC7gDAFmHQLYDu/dist=es2020/clipper-lib\"\n], function(exports_2, context_2) {\n    \"use strict\";\n    var dist_es2020_from_clipper_js_1, lib, index1, __esModule;\n    var __moduleName = context_2 && context_2.id;\n    function unwrapExports(x) {\n        return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, \"default\") ? x[\"default\"] : x;\n    }\n    function createCommonjsModule(fn, basedir, module) {\n        return module = {\n            path: basedir,\n            exports: {\n            },\n            require: function(path, base) {\n                return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n            }\n        }, fn(module, module.exports), module.exports;\n    }\n    function commonjsRequire() {\n        throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n    }\n    return {\n        setters: [\n            function(dist_es2020_from_clipper_js_1_1) {\n                dist_es2020_from_clipper_js_1 = dist_es2020_from_clipper_js_1_1;\n            }, \n        ],\n        execute: function() {\n            lib = createCommonjsModule(function(module, exports) {\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports.setErrorCallback = undefined;\n                var _createClass1 = function() {\n                    function defineProperties(target, props) {\n                        for(var i = 0; i < props.length; i++){\n                            var descriptor = props[i];\n                            descriptor.enumerable = descriptor.enumerable || false;\n                            descriptor.configurable = true;\n                            if (\"value\" in descriptor) {\n                                descriptor.writable = true;\n                            }\n                            Object.defineProperty(target, descriptor.key, descriptor);\n                        }\n                    }\n                    return function(Constructor, protoProps, staticProps) {\n                        if (protoProps) {\n                            defineProperties(Constructor.prototype, protoProps);\n                        }\n                        if (staticProps) {\n                            defineProperties(Constructor, staticProps);\n                        }\n                        return Constructor;\n                    };\n                }();\n                var _clipperLib2 = _interopRequireDefault(dist_es2020_from_clipper_js_1.default);\n                function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                        default: obj\n                    };\n                }\n                function _toConsumableArray(arr) {\n                    if (Array.isArray(arr)) {\n                        for(var i = 0, arr2 = Array(arr.length); i < arr.length; i++){\n                            arr2[i] = arr[i];\n                        }\n                        return arr2;\n                    } else {\n                        return Array.from(arr);\n                    }\n                }\n                function _classCallCheck1(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) {\n                        throw new TypeError(\"Cannot call a class as a function\");\n                    }\n                }\n                var errorCallback = void 0;\n                var setErrorCallback = exports.setErrorCallback = function setErrorCallback1(callback) {\n                    errorCallback = callback;\n                };\n                _clipperLib2.default.Error = function(message) {\n                    if (errorCallback) {\n                        errorCallback(message);\n                    }\n                };\n                var CLIPPER = new _clipperLib2.default.Clipper();\n                var CLIPPER_OFFSET = new _clipperLib2.default.ClipperOffset();\n                var Shape = function() {\n                    function Shape1() {\n                        var paths = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n                        var closed = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n                        var capitalConversion = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n                        var integerConversion = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n                        var removeDuplicates = arguments.length <= 4 || arguments[4] === undefined ? false : arguments[4];\n                        _classCallCheck1(this, Shape1);\n                        this.paths = paths;\n                        if (capitalConversion) {\n                            this.paths = this.paths.map(mapLowerToCapital);\n                        }\n                        if (integerConversion) {\n                            this.paths = this.paths.map(mapToRound);\n                        }\n                        if (removeDuplicates) {\n                            this.paths = this.paths.map(filterPathsDuplicates);\n                        }\n                        this.closed = closed;\n                    }\n                    _createClass1(Shape1, [\n                        {\n                            key: \"_clip\",\n                            value: function _clip(clipShape, type) {\n                                var solution = new _clipperLib2.default.PolyTree();\n                                CLIPPER.Clear();\n                                CLIPPER.AddPaths(this.paths, _clipperLib2.default.PolyType.ptSubject, this.closed);\n                                CLIPPER.AddPaths(clipShape.paths, _clipperLib2.default.PolyType.ptClip, clipShape.closed);\n                                CLIPPER.Execute(type, solution);\n                                var newShape = _clipperLib2.default.Clipper.PolyTreeToPaths(solution);\n                                return new Shape1(newShape, this.closed);\n                            }\n                        },\n                        {\n                            key: \"union\",\n                            value: function union1(clipShape) {\n                                return this._clip(clipShape, _clipperLib2.default.ClipType.ctUnion);\n                            }\n                        },\n                        {\n                            key: \"difference\",\n                            value: function difference1(clipShape) {\n                                return this._clip(clipShape, _clipperLib2.default.ClipType.ctDifference);\n                            }\n                        },\n                        {\n                            key: \"intersect\",\n                            value: function intersect(clipShape) {\n                                return this._clip(clipShape, _clipperLib2.default.ClipType.ctIntersection);\n                            }\n                        },\n                        {\n                            key: \"xor\",\n                            value: function xor1(clipShape) {\n                                return this._clip(clipShape, _clipperLib2.default.ClipType.ctXor);\n                            }\n                        },\n                        {\n                            key: \"offset\",\n                            value: function offset(_offset) {\n                                var options = arguments.length <= 1 || arguments[1] === undefined ? {\n                                } : arguments[1];\n                                var _options$jointType = options.jointType;\n                                var jointType = _options$jointType === undefined ? \"jtSquare\" : _options$jointType;\n                                var _options$endType = options.endType;\n                                var endType = _options$endType === undefined ? \"etClosedPolygon\" : _options$endType;\n                                var _options$miterLimit = options.miterLimit;\n                                var miterLimit = _options$miterLimit === undefined ? 2 : _options$miterLimit;\n                                var _options$roundPrecisi = options.roundPrecision;\n                                var roundPrecision = _options$roundPrecisi === undefined ? 0.25 : _options$roundPrecisi;\n                                CLIPPER_OFFSET.Clear();\n                                CLIPPER_OFFSET.ArcTolerance = roundPrecision;\n                                CLIPPER_OFFSET.MiterLimit = miterLimit;\n                                var offsetPaths = new _clipperLib2.default.Paths();\n                                CLIPPER_OFFSET.AddPaths(this.paths, _clipperLib2.default.JoinType[jointType], _clipperLib2.default.EndType[endType]);\n                                CLIPPER_OFFSET.Execute(offsetPaths, _offset);\n                                return new Shape1(offsetPaths, true);\n                            }\n                        },\n                        {\n                            key: \"scaleUp\",\n                            value: function scaleUp(factor) {\n                                _clipperLib2.default.JS.ScaleUpPaths(this.paths, factor);\n                                return this;\n                            }\n                        },\n                        {\n                            key: \"scaleDown\",\n                            value: function scaleDown(factor) {\n                                _clipperLib2.default.JS.ScaleDownPaths(this.paths, factor);\n                                return this;\n                            }\n                        },\n                        {\n                            key: \"firstPoint\",\n                            value: function firstPoint() {\n                                var toLower = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n                                if (this.paths.length === 0) {\n                                    return;\n                                }\n                                var firstPath = this.paths[0];\n                                var firstPoint = firstPath[0];\n                                if (toLower) {\n                                    return vectorToLower(firstPoint);\n                                } else {\n                                    return firstPoint;\n                                }\n                            }\n                        },\n                        {\n                            key: \"lastPoint\",\n                            value: function lastPoint() {\n                                var toLower = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n                                if (this.paths.length === 0) {\n                                    return;\n                                }\n                                var lastPath = this.paths[this.paths.length - 1];\n                                var lastPoint = this.closed ? lastPath[0] : lastPath[lastPath.length - 1];\n                                if (toLower) {\n                                    return vectorToLower(lastPoint);\n                                } else {\n                                    return lastPoint;\n                                }\n                            }\n                        },\n                        {\n                            key: \"areas\",\n                            value: function areas() {\n                                var _this = this;\n                                var areas = this.paths.map(function(path, i) {\n                                    return _this.area(i);\n                                });\n                                return areas;\n                            }\n                        },\n                        {\n                            key: \"area\",\n                            value: function area(index2) {\n                                var path = this.paths[index2];\n                                var area = _clipperLib2.default.Clipper.Area(path);\n                                return area;\n                            }\n                        },\n                        {\n                            key: \"totalArea\",\n                            value: function totalArea() {\n                                return this.areas().reduce(function(totalArea1, area) {\n                                    return totalArea1 + area;\n                                }, 0);\n                            }\n                        },\n                        {\n                            key: \"perimeter\",\n                            value: function perimeter(index2) {\n                                var path = this.paths[index2];\n                                var perimeter = _clipperLib2.default.JS.PerimeterOfPath(path, this.closed, 1);\n                                return perimeter;\n                            }\n                        },\n                        {\n                            key: \"perimeters\",\n                            value: function perimeters() {\n                                var _this2 = this;\n                                return this.paths.map(function(path) {\n                                    return _clipperLib2.default.JS.PerimeterOfPath(path, _this2.closed, 1);\n                                });\n                            }\n                        },\n                        {\n                            key: \"totalPerimeter\",\n                            value: function totalPerimeter() {\n                                var perimeter = _clipperLib2.default.JS.PerimeterOfPaths(this.paths, this.closed);\n                                return perimeter;\n                            }\n                        },\n                        {\n                            key: \"reverse\",\n                            value: function reverse() {\n                                _clipperLib2.default.Clipper.ReversePaths(this.paths);\n                                return this;\n                            }\n                        },\n                        {\n                            key: \"thresholdArea\",\n                            value: function thresholdArea(minArea) {\n                                var _arr = [].concat(_toConsumableArray(this.paths));\n                                for(var _i = 0; _i < _arr.length; _i++){\n                                    var path = _arr[_i];\n                                    var area = Math.abs(_clipperLib2.default.Clipper.Area(shape));\n                                    if (area < minArea) {\n                                        var index2 = this.paths.indexOf(path);\n                                        this.splice(index2, 1);\n                                    }\n                                }\n                            }\n                        },\n                        {\n                            key: \"join\",\n                            value: function join(shape) {\n                                var _paths;\n                                (_paths = this.paths).splice.apply(_paths, [\n                                    this.paths.length,\n                                    0\n                                ].concat(_toConsumableArray(shape.paths)));\n                                return this;\n                            }\n                        },\n                        {\n                            key: \"clone\",\n                            value: function clone() {\n                                return new Shape1(_clipperLib2.default.JS.Clone(this.paths), this.closed);\n                            }\n                        },\n                        {\n                            key: \"shapeBounds\",\n                            value: function shapeBounds() {\n                                var bounds = _clipperLib2.default.JS.BoundsOfPaths(this.paths);\n                                bounds.width = bounds.right - bounds.left;\n                                bounds.height = bounds.bottom - bounds.top;\n                                bounds.size = bounds.width * bounds.height;\n                                return bounds;\n                            }\n                        },\n                        {\n                            key: \"pathBounds\",\n                            value: function pathBounds(index3) {\n                                var path = this.paths[index3];\n                                var bounds = _clipperLib2.default.JS.BoundsOfPath(path);\n                                bounds.width = bounds.right - bounds.left;\n                                bounds.height = bounds.bottom - bounds.top;\n                                bounds.size = bounds.width * bounds.height;\n                                return bounds;\n                            }\n                        },\n                        {\n                            key: \"clean\",\n                            value: function clean(cleanDelta) {\n                                return new Shape1(_clipperLib2.default.Clipper.CleanPolygons(this.paths, cleanDelta), this.closed);\n                            }\n                        },\n                        {\n                            key: \"orientation\",\n                            value: function orientation(index3) {\n                                var path = this.paths[index3];\n                                return _clipperLib2.default.Clipper.Orientation(path);\n                            }\n                        },\n                        {\n                            key: \"pointInShape\",\n                            value: function pointInShape(point) {\n                                var capitalConversion = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n                                var integerConversion = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n                                if (capitalConversion) {\n                                    point = vectorToCapital(point);\n                                }\n                                if (integerConversion) {\n                                    point = roundVector(point);\n                                }\n                                for(var i = 0; i < this.paths.length; i++){\n                                    var pointInPath = this.pointInPath(i, point);\n                                    var orientation = this.orientation(i);\n                                    if (!pointInPath && orientation || pointInPath && !orientation) {\n                                        return false;\n                                    }\n                                }\n                                return true;\n                            }\n                        },\n                        {\n                            key: \"pointInPath\",\n                            value: function pointInPath(index3, point) {\n                                var capitalConversion = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n                                var integerConversion = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n                                if (capitalConversion) {\n                                    point = vectorToCapital(point);\n                                }\n                                if (integerConversion) {\n                                    point = roundVector(point);\n                                }\n                                var path = this.paths[index3];\n                                var intPoint = {\n                                    X: Math.round(point.X),\n                                    Y: Math.round(point.Y)\n                                };\n                                return _clipperLib2.default.Clipper.PointInPolygon(intPoint, path) > 0;\n                            }\n                        },\n                        {\n                            key: \"fixOrientation\",\n                            value: function fixOrientation() {\n                                if (!this.closed) {\n                                    return this;\n                                }\n                                if (this.totalArea() < 0) {\n                                    this.reverse();\n                                }\n                                return this;\n                            }\n                        },\n                        {\n                            key: \"removeOverlap\",\n                            value: function removeOverlap() {\n                                console.warn(\"Shape.removeOverlap is being depricated, use Shape.simplify('pftNonZero') instead\");\n                                this.simplify(\"pftNonZero\");\n                            }\n                        },\n                        {\n                            key: \"simplify\",\n                            value: function simplify(fillType) {\n                                if (this.closed) {\n                                    var _shape = _clipperLib2.default.Clipper.SimplifyPolygons(this.paths, _clipperLib2.default.PolyFillType[fillType]);\n                                    return new Shape1(_shape, true);\n                                } else {\n                                    return this;\n                                }\n                            }\n                        },\n                        {\n                            key: \"seperateShapes\",\n                            value: function seperateShapes() {\n                                var _this3 = this;\n                                var shapes = [];\n                                if (!this.closed) {\n                                    var _iteratorNormalCompletion = true;\n                                    var _didIteratorError = false;\n                                    var _iteratorError = undefined;\n                                    try {\n                                        for(var _iterator = this.paths[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                                            var path = _step.value;\n                                            shapes.push(new Shape1([\n                                                path\n                                            ], false));\n                                        }\n                                    } catch (err) {\n                                        _didIteratorError = true;\n                                        _iteratorError = err;\n                                    } finally{\n                                        try {\n                                            if (!_iteratorNormalCompletion && _iterator.return) {\n                                                _iterator.return();\n                                            }\n                                        } finally{\n                                            if (_didIteratorError) {\n                                                throw _iteratorError;\n                                            }\n                                        }\n                                    }\n                                } else {\n                                    (function() {\n                                        var areas = new WeakMap();\n                                        var outlines = [];\n                                        var holes = [];\n                                        for(var i = 0; i < _this3.paths.length; i++){\n                                            var _path = _this3.paths[i];\n                                            var orientation = _this3.orientation(i);\n                                            if (orientation) {\n                                                var area = _this3.area(i);\n                                                areas.set(_path, area);\n                                                outlines.push(_path);\n                                            } else {\n                                                holes.push(_path);\n                                            }\n                                        }\n                                        outlines.sort(function(a, b) {\n                                            return areas.get(a) - areas.get(b);\n                                        });\n                                        var _iteratorNormalCompletion2 = true;\n                                        var _didIteratorError2 = false;\n                                        var _iteratorError2 = undefined;\n                                        try {\n                                            for(var _iterator2 = outlines[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true){\n                                                var outline = _step2.value;\n                                                var _shape2 = [\n                                                    outline\n                                                ];\n                                                var index3 = _this3.paths.indexOf(outline);\n                                                var _arr2 = [].concat(holes);\n                                                for(var _i2 = 0; _i2 < _arr2.length; _i2++){\n                                                    var hole = _arr2[_i2];\n                                                    var pointInHole = _this3.pointInPath(index3, hole[0]);\n                                                    if (pointInHole) {\n                                                        _shape2.push(hole);\n                                                        var _index = holes.indexOf(hole);\n                                                        holes.splice(_index, 1);\n                                                    }\n                                                }\n                                                shapes.push(new Shape1(_shape2, true));\n                                            }\n                                        } catch (err) {\n                                            _didIteratorError2 = true;\n                                            _iteratorError2 = err;\n                                        } finally{\n                                            try {\n                                                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                                    _iterator2.return();\n                                                }\n                                            } finally{\n                                                if (_didIteratorError2) {\n                                                    throw _iteratorError2;\n                                                }\n                                            }\n                                        }\n                                    })();\n                                }\n                                return shapes;\n                            }\n                        },\n                        {\n                            key: \"round\",\n                            value: function round() {\n                                return new Shape1(this.paths.map(mapToRound), this.closed);\n                            }\n                        },\n                        {\n                            key: \"removeDuplicates\",\n                            value: function removeDuplicates() {\n                                return new Shape1(this.paths.map(filterPathsDuplicates), this.closed);\n                            }\n                        },\n                        {\n                            key: \"mapToLower\",\n                            value: function mapToLower() {\n                                return this.paths.map(mapCapitalToLower);\n                            }\n                        }\n                    ]);\n                    return Shape1;\n                }();\n                exports.default = Shape;\n                function mapCapitalToLower(path) {\n                    return path.map(vectorToLower);\n                }\n                function vectorToLower(_ref) {\n                    var X = _ref.X;\n                    var Y = _ref.Y;\n                    return {\n                        x: X,\n                        y: Y\n                    };\n                }\n                function mapLowerToCapital(path) {\n                    return path.map(vectorToCapital);\n                }\n                function vectorToCapital(_ref2) {\n                    var x = _ref2.x;\n                    var y = _ref2.y;\n                    return {\n                        X: x,\n                        Y: y\n                    };\n                }\n                function mapToRound(path) {\n                    return path.map(roundVector);\n                }\n                function roundVector(_ref3) {\n                    var X = _ref3.X;\n                    var Y = _ref3.Y;\n                    return {\n                        X: Math.round(X),\n                        Y: Math.round(Y)\n                    };\n                }\n                function filterPathsDuplicates(path) {\n                    return path.filter(filterPathDuplicates);\n                }\n                function filterPathDuplicates(point, i, array) {\n                    if (i === 0) {\n                        return true;\n                    }\n                    var prevPoint = array[i - 1];\n                    return !(point.X === prevPoint.X && point.Y === prevPoint.Y);\n                }\n            });\n            index1 = unwrapExports(lib);\n            exports_2(\"default\", index1);\n            exports_2(\"__esModule\", __esModule = true);\n        }\n    };\n});\nSystem.register(\"clipper-js\", [\n    \"-/clipper-js@v1.0.2-Mou0diNPTgyilhisGDlW/dist=es2020/clipper-js\"\n], function(exports_3, context_3) {\n    \"use strict\";\n    var __moduleName = context_3 && context_3.id;\n    var exportedNames_1 = {\n        \"default\": true\n    };\n    function exportStar_1(m) {\n        var exports = {\n        };\n        for(var n in m){\n            if (n !== \"default\" && !exportedNames_1.hasOwnProperty(n)) {\n                exports[n] = m[n];\n            }\n        }\n        exports_3(exports);\n    }\n    return {\n        setters: [\n            function(dist_es2020_1_1) {\n                exportStar_1(dist_es2020_1_1);\n                exports_3({\n                    \"default\": dist_es2020_1_1[\"default\"]\n                });\n            }, \n        ],\n        execute: function() {\n        }\n    };\n});\nconst __exp = __instantiate(\"clipper-js\");\nconst __default = __exp[\"default\"];\nconst commandsMap = {\n    \"Z\": \"Z\",\n    \"M\": \"M\",\n    \"L\": \"L\",\n    \"C\": \"C\",\n    \"Q\": \"Q\",\n    \"A\": \"A\",\n    \"H\": \"H\",\n    \"V\": \"V\",\n    \"S\": \"S\",\n    \"T\": \"T\",\n    \"z\": \"Z\",\n    \"m\": \"m\",\n    \"l\": \"l\",\n    \"c\": \"c\",\n    \"q\": \"q\",\n    \"a\": \"a\",\n    \"h\": \"h\",\n    \"v\": \"v\",\n    \"s\": \"s\",\n    \"t\": \"t\"\n};\nconst Source = function(string) {\n    this._string = string;\n    this._currentIndex = 0;\n    this._endIndex = this._string.length;\n    this._prevCommand = null;\n    this._skipOptionalSpaces();\n};\nSource.prototype = {\n    parseSegment: function() {\n        var __char = this._string[this._currentIndex];\n        var command = commandsMap[__char] ? commandsMap[__char] : null;\n        if (command === null) {\n            if (this._prevCommand === null) {\n                return null;\n            }\n            if ((__char === \"+\" || __char === \"-\" || __char === \".\" || __char >= \"0\" && __char <= \"9\") && this._prevCommand !== \"Z\") {\n                if (this._prevCommand === \"M\") {\n                    command = \"L\";\n                } else if (this._prevCommand === \"m\") {\n                    command = \"l\";\n                } else {\n                    command = this._prevCommand;\n                }\n            } else {\n                command = null;\n            }\n            if (command === null) {\n                return null;\n            }\n        } else {\n            this._currentIndex += 1;\n        }\n        this._prevCommand = command;\n        var values = null;\n        var cmd = command.toUpperCase();\n        if (cmd === \"H\" || cmd === \"V\") {\n            values = [\n                this._parseNumber()\n            ];\n        } else if (cmd === \"M\" || cmd === \"L\" || cmd === \"T\") {\n            values = [\n                this._parseNumber(),\n                this._parseNumber()\n            ];\n        } else if (cmd === \"S\" || cmd === \"Q\") {\n            values = [\n                this._parseNumber(),\n                this._parseNumber(),\n                this._parseNumber(),\n                this._parseNumber()\n            ];\n        } else if (cmd === \"C\") {\n            values = [\n                this._parseNumber(),\n                this._parseNumber(),\n                this._parseNumber(),\n                this._parseNumber(),\n                this._parseNumber(),\n                this._parseNumber()\n            ];\n        } else if (cmd === \"A\") {\n            values = [\n                this._parseNumber(),\n                this._parseNumber(),\n                this._parseNumber(),\n                this._parseArcFlag(),\n                this._parseArcFlag(),\n                this._parseNumber(),\n                this._parseNumber()\n            ];\n        } else if (cmd === \"Z\") {\n            this._skipOptionalSpaces();\n            values = [];\n        }\n        if (values === null || values.indexOf(null) >= 0) {\n            return null;\n        } else {\n            return {\n                type: command,\n                values: values\n            };\n        }\n    },\n    hasMoreData: function() {\n        return this._currentIndex < this._endIndex;\n    },\n    peekSegmentType: function() {\n        var __char = this._string[this._currentIndex];\n        return commandsMap[__char] ? commandsMap[__char] : null;\n    },\n    initialCommandIsMoveTo: function() {\n        if (!this.hasMoreData()) {\n            return true;\n        }\n        var command = this.peekSegmentType();\n        return command === \"M\" || command === \"m\";\n    },\n    _isCurrentSpace: function() {\n        var __char = this._string[this._currentIndex];\n        return __char <= \" \" && (__char === \" \" || __char === \"\\n\" || __char === \"\\t\" || __char === \"\\r\" || __char === \"\\f\");\n    },\n    _skipOptionalSpaces: function() {\n        while(this._currentIndex < this._endIndex && this._isCurrentSpace()){\n            this._currentIndex += 1;\n        }\n        return this._currentIndex < this._endIndex;\n    },\n    _skipOptionalSpacesOrDelimiter: function() {\n        if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string[this._currentIndex] !== \",\") {\n            return false;\n        }\n        if (this._skipOptionalSpaces()) {\n            if (this._currentIndex < this._endIndex && this._string[this._currentIndex] === \",\") {\n                this._currentIndex += 1;\n                this._skipOptionalSpaces();\n            }\n        }\n        return this._currentIndex < this._endIndex;\n    },\n    _parseNumber: function() {\n        var exponent = 0;\n        var integer = 0;\n        var frac = 1;\n        var decimal = 0;\n        var sign = 1;\n        var expsign = 1;\n        var startIndex = this._currentIndex;\n        this._skipOptionalSpaces();\n        if (this._currentIndex < this._endIndex && this._string[this._currentIndex] === \"+\") {\n            this._currentIndex += 1;\n        } else if (this._currentIndex < this._endIndex && this._string[this._currentIndex] === \"-\") {\n            this._currentIndex += 1;\n            sign = -1;\n        }\n        if (this._currentIndex === this._endIndex || (this._string[this._currentIndex] < \"0\" || this._string[this._currentIndex] > \"9\") && this._string[this._currentIndex] !== \".\") {\n            return null;\n        }\n        var startIntPartIndex = this._currentIndex;\n        while(this._currentIndex < this._endIndex && this._string[this._currentIndex] >= \"0\" && this._string[this._currentIndex] <= \"9\"){\n            this._currentIndex += 1;\n        }\n        if (this._currentIndex !== startIntPartIndex) {\n            var scanIntPartIndex = this._currentIndex - 1;\n            var multiplier = 1;\n            while(scanIntPartIndex >= startIntPartIndex){\n                integer += multiplier * (this._string[scanIntPartIndex] - \"0\");\n                scanIntPartIndex -= 1;\n                multiplier *= 10;\n            }\n        }\n        if (this._currentIndex < this._endIndex && this._string[this._currentIndex] === \".\") {\n            this._currentIndex += 1;\n            if (this._currentIndex >= this._endIndex || this._string[this._currentIndex] < \"0\" || this._string[this._currentIndex] > \"9\") {\n                return null;\n            }\n            while(this._currentIndex < this._endIndex && this._string[this._currentIndex] >= \"0\" && this._string[this._currentIndex] <= \"9\"){\n                frac *= 10;\n                decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n                this._currentIndex += 1;\n            }\n        }\n        if (this._currentIndex !== startIndex && this._currentIndex + 1 < this._endIndex && (this._string[this._currentIndex] === \"e\" || this._string[this._currentIndex] === \"E\") && this._string[this._currentIndex + 1] !== \"x\" && this._string[this._currentIndex + 1] !== \"m\") {\n            this._currentIndex += 1;\n            if (this._string[this._currentIndex] === \"+\") {\n                this._currentIndex += 1;\n            } else if (this._string[this._currentIndex] === \"-\") {\n                this._currentIndex += 1;\n                expsign = -1;\n            }\n            if (this._currentIndex >= this._endIndex || this._string[this._currentIndex] < \"0\" || this._string[this._currentIndex] > \"9\") {\n                return null;\n            }\n            while(this._currentIndex < this._endIndex && this._string[this._currentIndex] >= \"0\" && this._string[this._currentIndex] <= \"9\"){\n                exponent *= 10;\n                exponent += this._string[this._currentIndex] - \"0\";\n                this._currentIndex += 1;\n            }\n        }\n        var number = integer + decimal;\n        number *= sign;\n        if (exponent) {\n            number *= Math.pow(10, expsign * exponent);\n        }\n        if (startIndex === this._currentIndex) {\n            return null;\n        }\n        this._skipOptionalSpacesOrDelimiter();\n        return number;\n    },\n    _parseArcFlag: function() {\n        if (this._currentIndex >= this._endIndex) {\n            return null;\n        }\n        var flag = null;\n        var flagChar = this._string[this._currentIndex];\n        this._currentIndex += 1;\n        if (flagChar === \"0\") {\n            flag = 0;\n        } else if (flagChar === \"1\") {\n            flag = 1;\n        } else {\n            return null;\n        }\n        this._skipOptionalSpacesOrDelimiter();\n        return flag;\n    }\n};\nconst parsePathDataString = function(string) {\n    if (!string || string.length === 0) return [];\n    var source = new Source(string);\n    var pathData = [];\n    if (source.initialCommandIsMoveTo()) {\n        while(source.hasMoreData()){\n            var pathSeg = source.parseSegment();\n            if (pathSeg === null) {\n                break;\n            } else {\n                pathData.push(pathSeg);\n            }\n        }\n    }\n    return pathData;\n};\nconst $cachedPathData = typeof Symbol !== 'undefined' ? Symbol() : \"__cachedPathData\";\nconst $cachedNormalizedPathData = typeof Symbol !== 'undefined' ? Symbol() : \"__cachedNormalizedPathData\";\nvar arcToCubicCurves = function(x1, y1, x2, y2, r1, r2, angle, largeArcFlag, sweepFlag, _recursive) {\n    var degToRad = function(degrees) {\n        return Math.PI * degrees / 180;\n    };\n    var rotate = function(x, y, angleRad) {\n        var X = x * Math.cos(angleRad) - y * Math.sin(angleRad);\n        var Y = x * Math.sin(angleRad) + y * Math.cos(angleRad);\n        return {\n            x: X,\n            y: Y\n        };\n    };\n    var angleRad = degToRad(angle);\n    var params = [];\n    var f1, f2, cx, cy;\n    if (_recursive) {\n        f1 = _recursive[0];\n        f2 = _recursive[1];\n        cx = _recursive[2];\n        cy = _recursive[3];\n    } else {\n        var p1 = rotate(x1, y1, -angleRad);\n        x1 = p1.x;\n        y1 = p1.y;\n        var p2 = rotate(x2, y2, -angleRad);\n        x2 = p2.x;\n        y2 = p2.y;\n        var x = (x1 - x2) / 2;\n        var y = (y1 - y2) / 2;\n        var h = x * x / (r1 * r1) + y * y / (r2 * r2);\n        if (h > 1) {\n            h = Math.sqrt(h);\n            r1 = h * r1;\n            r2 = h * r2;\n        }\n        var sign;\n        if (largeArcFlag === sweepFlag) {\n            sign = -1;\n        } else {\n            sign = 1;\n        }\n        var r1Pow = r1 * r1;\n        var r2Pow = r2 * r2;\n        var left = r1Pow * r2Pow - r1Pow * y * y - r2Pow * x * x;\n        var right = r1Pow * y * y + r2Pow * x * x;\n        var k = sign * Math.sqrt(Math.abs(left / right));\n        cx = k * r1 * y / r2 + (x1 + x2) / 2;\n        cy = k * -r2 * x / r1 + (y1 + y2) / 2;\n        f1 = Math.asin(parseFloat(((y1 - cy) / r2).toFixed(9)));\n        f2 = Math.asin(parseFloat(((y2 - cy) / r2).toFixed(9)));\n        if (x1 < cx) {\n            f1 = Math.PI - f1;\n        }\n        if (x2 < cx) {\n            f2 = Math.PI - f2;\n        }\n        if (f1 < 0) {\n            f1 = Math.PI * 2 + f1;\n        }\n        if (f2 < 0) {\n            f2 = Math.PI * 2 + f2;\n        }\n        if (sweepFlag && f1 > f2) {\n            f1 = f1 - Math.PI * 2;\n        }\n        if (!sweepFlag && f2 > f1) {\n            f2 = f2 - Math.PI * 2;\n        }\n    }\n    var df = f2 - f1;\n    if (Math.abs(df) > Math.PI * 120 / 180) {\n        var f2old = f2;\n        var x2old = x2;\n        var y2old = y2;\n        if (sweepFlag && f2 > f1) {\n            f2 = f1 + Math.PI * 120 / 180 * 1;\n        } else {\n            f2 = f1 + Math.PI * 120 / 180 * -1;\n        }\n        x2 = cx + r1 * Math.cos(f2);\n        y2 = cy + r2 * Math.sin(f2);\n        params = arcToCubicCurves(x2, y2, x2old, y2old, r1, r2, angle, 0, sweepFlag, [\n            f2,\n            f2old,\n            cx,\n            cy\n        ]);\n    }\n    df = f2 - f1;\n    var c1 = Math.cos(f1);\n    var s1 = Math.sin(f1);\n    var c2 = Math.cos(f2);\n    var s2 = Math.sin(f2);\n    var t = Math.tan(df / 4);\n    var hx = 4 / 3 * r1 * t;\n    var hy = 4 / 3 * r2 * t;\n    var m1 = [\n        x1,\n        y1\n    ];\n    var m2 = [\n        x1 + hx * s1,\n        y1 - hy * c1\n    ];\n    var m3 = [\n        x2 + hx * s2,\n        y2 - hy * c2\n    ];\n    var m4 = [\n        x2,\n        y2\n    ];\n    m2[0] = 2 * m1[0] - m2[0];\n    m2[1] = 2 * m1[1] - m2[1];\n    if (_recursive) {\n        return [\n            m2,\n            m3,\n            m4\n        ].concat(params);\n    } else {\n        params = [\n            m2,\n            m3,\n            m4\n        ].concat(params);\n        var curves = [];\n        for(var i = 0; i < params.length; i += 3){\n            var r1 = rotate(params[i][0], params[i][1], angleRad);\n            var r2 = rotate(params[i + 1][0], params[i + 1][1], angleRad);\n            var r3 = rotate(params[i + 2][0], params[i + 2][1], angleRad);\n            curves.push([\n                r1.x,\n                r1.y,\n                r2.x,\n                r2.y,\n                r3.x,\n                r3.y\n            ]);\n        }\n        return curves;\n    }\n};\nvar clonePathData = function(pathData) {\n    return pathData.map(function(seg) {\n        return {\n            type: seg.type,\n            values: Array.prototype.slice.call(seg.values)\n        };\n    });\n};\nvar absolutizePathData = function(pathData) {\n    var absolutizedPathData = [];\n    var currentX = null;\n    var currentY = null;\n    var subpathX = null;\n    var subpathY = null;\n    pathData.forEach(function(seg) {\n        var type = seg.type;\n        if (type === \"M\") {\n            var x = seg.values[0];\n            var y = seg.values[1];\n            absolutizedPathData.push({\n                type: \"M\",\n                values: [\n                    x,\n                    y\n                ]\n            });\n            subpathX = x;\n            subpathY = y;\n            currentX = x;\n            currentY = y;\n        } else if (type === \"m\") {\n            var x = currentX + seg.values[0];\n            var y = currentY + seg.values[1];\n            absolutizedPathData.push({\n                type: \"M\",\n                values: [\n                    x,\n                    y\n                ]\n            });\n            subpathX = x;\n            subpathY = y;\n            currentX = x;\n            currentY = y;\n        } else if (type === \"L\") {\n            var x = seg.values[0];\n            var y = seg.values[1];\n            absolutizedPathData.push({\n                type: \"L\",\n                values: [\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"l\") {\n            var x = currentX + seg.values[0];\n            var y = currentY + seg.values[1];\n            absolutizedPathData.push({\n                type: \"L\",\n                values: [\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"C\") {\n            var x1 = seg.values[0];\n            var y1 = seg.values[1];\n            var x2 = seg.values[2];\n            var y2 = seg.values[3];\n            var x = seg.values[4];\n            var y = seg.values[5];\n            absolutizedPathData.push({\n                type: \"C\",\n                values: [\n                    x1,\n                    y1,\n                    x2,\n                    y2,\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"c\") {\n            var x1 = currentX + seg.values[0];\n            var y1 = currentY + seg.values[1];\n            var x2 = currentX + seg.values[2];\n            var y2 = currentY + seg.values[3];\n            var x = currentX + seg.values[4];\n            var y = currentY + seg.values[5];\n            absolutizedPathData.push({\n                type: \"C\",\n                values: [\n                    x1,\n                    y1,\n                    x2,\n                    y2,\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"Q\") {\n            var x1 = seg.values[0];\n            var y1 = seg.values[1];\n            var x = seg.values[2];\n            var y = seg.values[3];\n            absolutizedPathData.push({\n                type: \"Q\",\n                values: [\n                    x1,\n                    y1,\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"q\") {\n            var x1 = currentX + seg.values[0];\n            var y1 = currentY + seg.values[1];\n            var x = currentX + seg.values[2];\n            var y = currentY + seg.values[3];\n            absolutizedPathData.push({\n                type: \"Q\",\n                values: [\n                    x1,\n                    y1,\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"A\") {\n            var x = seg.values[5];\n            var y = seg.values[6];\n            absolutizedPathData.push({\n                type: \"A\",\n                values: [\n                    seg.values[0],\n                    seg.values[1],\n                    seg.values[2],\n                    seg.values[3],\n                    seg.values[4],\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"a\") {\n            var x = currentX + seg.values[5];\n            var y = currentY + seg.values[6];\n            absolutizedPathData.push({\n                type: \"A\",\n                values: [\n                    seg.values[0],\n                    seg.values[1],\n                    seg.values[2],\n                    seg.values[3],\n                    seg.values[4],\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"H\") {\n            var x = seg.values[0];\n            absolutizedPathData.push({\n                type: \"H\",\n                values: [\n                    x\n                ]\n            });\n            currentX = x;\n        } else if (type === \"h\") {\n            var x = currentX + seg.values[0];\n            absolutizedPathData.push({\n                type: \"H\",\n                values: [\n                    x\n                ]\n            });\n            currentX = x;\n        } else if (type === \"V\") {\n            var y = seg.values[0];\n            absolutizedPathData.push({\n                type: \"V\",\n                values: [\n                    y\n                ]\n            });\n            currentY = y;\n        } else if (type === \"v\") {\n            var y = currentY + seg.values[0];\n            absolutizedPathData.push({\n                type: \"V\",\n                values: [\n                    y\n                ]\n            });\n            currentY = y;\n        } else if (type === \"S\") {\n            var x2 = seg.values[0];\n            var y2 = seg.values[1];\n            var x = seg.values[2];\n            var y = seg.values[3];\n            absolutizedPathData.push({\n                type: \"S\",\n                values: [\n                    x2,\n                    y2,\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"s\") {\n            var x2 = currentX + seg.values[0];\n            var y2 = currentY + seg.values[1];\n            var x = currentX + seg.values[2];\n            var y = currentY + seg.values[3];\n            absolutizedPathData.push({\n                type: \"S\",\n                values: [\n                    x2,\n                    y2,\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"T\") {\n            var x = seg.values[0];\n            var y = seg.values[1];\n            absolutizedPathData.push({\n                type: \"T\",\n                values: [\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"t\") {\n            var x = currentX + seg.values[0];\n            var y = currentY + seg.values[1];\n            absolutizedPathData.push({\n                type: \"T\",\n                values: [\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (type === \"Z\" || type === \"z\") {\n            absolutizedPathData.push({\n                type: \"Z\",\n                values: []\n            });\n            currentX = subpathX;\n            currentY = subpathY;\n        }\n    });\n    return absolutizedPathData;\n};\nvar reducePathData = function(pathData) {\n    var reducedPathData = [];\n    var lastType = null;\n    var lastControlX = null;\n    var lastControlY = null;\n    var currentX = null;\n    var currentY = null;\n    var subpathX = null;\n    var subpathY = null;\n    pathData.forEach(function(seg) {\n        if (seg.type === \"M\") {\n            var x = seg.values[0];\n            var y = seg.values[1];\n            reducedPathData.push({\n                type: \"M\",\n                values: [\n                    x,\n                    y\n                ]\n            });\n            subpathX = x;\n            subpathY = y;\n            currentX = x;\n            currentY = y;\n        } else if (seg.type === \"C\") {\n            var x1 = seg.values[0];\n            var y1 = seg.values[1];\n            var x2 = seg.values[2];\n            var y2 = seg.values[3];\n            var x = seg.values[4];\n            var y = seg.values[5];\n            reducedPathData.push({\n                type: \"C\",\n                values: [\n                    x1,\n                    y1,\n                    x2,\n                    y2,\n                    x,\n                    y\n                ]\n            });\n            lastControlX = x2;\n            lastControlY = y2;\n            currentX = x;\n            currentY = y;\n        } else if (seg.type === \"L\") {\n            var x = seg.values[0];\n            var y = seg.values[1];\n            reducedPathData.push({\n                type: \"L\",\n                values: [\n                    x,\n                    y\n                ]\n            });\n            currentX = x;\n            currentY = y;\n        } else if (seg.type === \"H\") {\n            var x = seg.values[0];\n            reducedPathData.push({\n                type: \"L\",\n                values: [\n                    x,\n                    currentY\n                ]\n            });\n            currentX = x;\n        } else if (seg.type === \"V\") {\n            var y = seg.values[0];\n            reducedPathData.push({\n                type: \"L\",\n                values: [\n                    currentX,\n                    y\n                ]\n            });\n            currentY = y;\n        } else if (seg.type === \"S\") {\n            var x2 = seg.values[0];\n            var y2 = seg.values[1];\n            var x = seg.values[2];\n            var y = seg.values[3];\n            var cx1, cy1;\n            if (lastType === \"C\" || lastType === \"S\") {\n                cx1 = currentX + (currentX - lastControlX);\n                cy1 = currentY + (currentY - lastControlY);\n            } else {\n                cx1 = currentX;\n                cy1 = currentY;\n            }\n            reducedPathData.push({\n                type: \"C\",\n                values: [\n                    cx1,\n                    cy1,\n                    x2,\n                    y2,\n                    x,\n                    y\n                ]\n            });\n            lastControlX = x2;\n            lastControlY = y2;\n            currentX = x;\n            currentY = y;\n        } else if (seg.type === \"T\") {\n            var x = seg.values[0];\n            var y = seg.values[1];\n            var x1, y1;\n            if (lastType === \"Q\" || lastType === \"T\") {\n                x1 = currentX + (currentX - lastControlX);\n                y1 = currentY + (currentY - lastControlY);\n            } else {\n                x1 = currentX;\n                y1 = currentY;\n            }\n            var cx1 = currentX + 2 * (x1 - currentX) / 3;\n            var cy1 = currentY + 2 * (y1 - currentY) / 3;\n            var cx2 = x + 2 * (x1 - x) / 3;\n            var cy2 = y + 2 * (y1 - y) / 3;\n            reducedPathData.push({\n                type: \"C\",\n                values: [\n                    cx1,\n                    cy1,\n                    cx2,\n                    cy2,\n                    x,\n                    y\n                ]\n            });\n            lastControlX = x1;\n            lastControlY = y1;\n            currentX = x;\n            currentY = y;\n        } else if (seg.type === \"Q\") {\n            var x1 = seg.values[0];\n            var y1 = seg.values[1];\n            var x = seg.values[2];\n            var y = seg.values[3];\n            var cx1 = currentX + 2 * (x1 - currentX) / 3;\n            var cy1 = currentY + 2 * (y1 - currentY) / 3;\n            var cx2 = x + 2 * (x1 - x) / 3;\n            var cy2 = y + 2 * (y1 - y) / 3;\n            reducedPathData.push({\n                type: \"C\",\n                values: [\n                    cx1,\n                    cy1,\n                    cx2,\n                    cy2,\n                    x,\n                    y\n                ]\n            });\n            lastControlX = x1;\n            lastControlY = y1;\n            currentX = x;\n            currentY = y;\n        } else if (seg.type === \"A\") {\n            var r1 = Math.abs(seg.values[0]);\n            var r2 = Math.abs(seg.values[1]);\n            var angle = seg.values[2];\n            var largeArcFlag = seg.values[3];\n            var sweepFlag = seg.values[4];\n            var x = seg.values[5];\n            var y = seg.values[6];\n            if (r1 === 0 || r2 === 0) {\n                reducedPathData.push({\n                    type: \"C\",\n                    values: [\n                        currentX,\n                        currentY,\n                        x,\n                        y,\n                        x,\n                        y\n                    ]\n                });\n                currentX = x;\n                currentY = y;\n            } else {\n                if (currentX !== x || currentY !== y) {\n                    var curves = arcToCubicCurves(currentX, currentY, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n                    curves.forEach(function(curve) {\n                        reducedPathData.push({\n                            type: \"C\",\n                            values: curve\n                        });\n                    });\n                    currentX = x;\n                    currentY = y;\n                }\n            }\n        } else if (seg.type === \"Z\") {\n            reducedPathData.push(seg);\n            currentX = subpathX;\n            currentY = subpathY;\n        }\n        lastType = seg.type;\n    });\n    return reducedPathData;\n};\nconst getLength = (el, key)=>{\n    if (key in el && \"baseVal\" in el[key]) {\n        return el[key].baseVal.value;\n    } else {\n        return +el.getAttribute(key);\n    }\n};\nconst path = function(options) {\n    if (options && options.normalize) {\n        if (this[$cachedNormalizedPathData]) {\n            return clonePathData(this[$cachedNormalizedPathData]);\n        } else {\n            var pathData;\n            if (this[$cachedPathData]) {\n                pathData = clonePathData(this[$cachedPathData]);\n            } else {\n                pathData = parsePathDataString(this.getAttribute(\"d\") || \"\");\n                this[$cachedPathData] = clonePathData(pathData);\n            }\n            var normalizedPathData = reducePathData(absolutizePathData(pathData));\n            this[$cachedNormalizedPathData] = clonePathData(normalizedPathData);\n            return normalizedPathData;\n        }\n    } else {\n        if (this[$cachedPathData]) {\n            return clonePathData(this[$cachedPathData]);\n        } else {\n            var pathData = parsePathDataString(this.getAttribute(\"d\") || \"\");\n            this[$cachedPathData] = clonePathData(pathData);\n            return pathData;\n        }\n    }\n};\nconst rect = function(options) {\n    var x = getLength(this, \"x\");\n    var y = getLength(this, \"y\");\n    var width = getLength(this, \"width\");\n    var height = getLength(this, \"height\");\n    var rx = this.hasAttribute(\"rx\") ? getLength(this, \"rx\") : getLength(this, \"ry\");\n    var ry = this.hasAttribute(\"ry\") ? getLength(this, \"ry\") : getLength(this, \"rx\");\n    if (rx > width / 2) {\n        rx = width / 2;\n    }\n    if (ry > height / 2) {\n        ry = height / 2;\n    }\n    var pathData = [\n        {\n            type: \"M\",\n            values: [\n                x + rx,\n                y\n            ]\n        },\n        {\n            type: \"H\",\n            values: [\n                x + width - rx\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                rx,\n                ry,\n                0,\n                0,\n                1,\n                x + width,\n                y + ry\n            ]\n        },\n        {\n            type: \"V\",\n            values: [\n                y + height - ry\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                rx,\n                ry,\n                0,\n                0,\n                1,\n                x + width - rx,\n                y + height\n            ]\n        },\n        {\n            type: \"H\",\n            values: [\n                x + rx\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                rx,\n                ry,\n                0,\n                0,\n                1,\n                x,\n                y + height - ry\n            ]\n        },\n        {\n            type: \"V\",\n            values: [\n                y + ry\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                rx,\n                ry,\n                0,\n                0,\n                1,\n                x + rx,\n                y\n            ]\n        },\n        {\n            type: \"Z\",\n            values: []\n        }\n    ];\n    pathData = pathData.filter(function(s) {\n        return s.type === \"A\" && (s.values[0] === 0 || s.values[1] === 0) ? false : true;\n    });\n    if (options && options.normalize === true) {\n        pathData = reducePathData(pathData);\n    }\n    return pathData;\n};\nconst circle = function(options) {\n    var cx = getLength(this, \"cx\");\n    var cy = getLength(this, \"cy\");\n    var r = getLength(this, \"r\");\n    var pathData = [\n        {\n            type: \"M\",\n            values: [\n                cx + r,\n                cy\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                r,\n                r,\n                0,\n                0,\n                1,\n                cx,\n                cy + r\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                r,\n                r,\n                0,\n                0,\n                1,\n                cx - r,\n                cy\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                r,\n                r,\n                0,\n                0,\n                1,\n                cx,\n                cy - r\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                r,\n                r,\n                0,\n                0,\n                1,\n                cx + r,\n                cy\n            ]\n        },\n        {\n            type: \"Z\",\n            values: []\n        }\n    ];\n    if (options && options.normalize === true) {\n        pathData = reducePathData(pathData);\n    }\n    return pathData;\n};\nconst ellipse = function(options) {\n    var cx = getLength(this, \"cx\");\n    var cy = getLength(this, \"cy\");\n    var rx = getLength(this, \"rx\");\n    var ry = getLength(this, \"ry\");\n    var pathData = [\n        {\n            type: \"M\",\n            values: [\n                cx + rx,\n                cy\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                rx,\n                ry,\n                0,\n                0,\n                1,\n                cx,\n                cy + ry\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                rx,\n                ry,\n                0,\n                0,\n                1,\n                cx - rx,\n                cy\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                rx,\n                ry,\n                0,\n                0,\n                1,\n                cx,\n                cy - ry\n            ]\n        },\n        {\n            type: \"A\",\n            values: [\n                rx,\n                ry,\n                0,\n                0,\n                1,\n                cx + rx,\n                cy\n            ]\n        },\n        {\n            type: \"Z\",\n            values: []\n        }\n    ];\n    if (options && options.normalize === true) {\n        pathData = reducePathData(pathData);\n    }\n    return pathData;\n};\nconst line = function() {\n    const x1 = getLength(this, \"x1\");\n    const x2 = getLength(this, \"x2\");\n    const y1 = getLength(this, \"y1\");\n    const y2 = getLength(this, \"y2\");\n    return [\n        {\n            type: \"M\",\n            values: [\n                x1,\n                y1\n            ]\n        },\n        {\n            type: \"L\",\n            values: [\n                x2,\n                y2\n            ]\n        }\n    ];\n};\nconst polyline = function() {\n    var pathData = [];\n    for(var i = 0; i < this.points.numberOfItems; i += 1){\n        var point = this.points.getItem(i);\n        pathData.push({\n            type: i === 0 ? \"M\" : \"L\",\n            values: [\n                point.x,\n                point.y\n            ]\n        });\n    }\n    return pathData;\n};\nconst polygon = function() {\n    var pathData = [];\n    for(var i = 0; i < this.points.numberOfItems; i += 1){\n        var point = this.points.getItem(i);\n        pathData.push({\n            type: i === 0 ? \"M\" : \"L\",\n            values: [\n                point.x,\n                point.y\n            ]\n        });\n    }\n    pathData.push({\n        type: \"Z\",\n        values: []\n    });\n    return pathData;\n};\nconst pathDataGetters = {\n    circle,\n    ellipse,\n    path,\n    polygon,\n    polyline,\n    line,\n    rect\n};\nfunction getPathData(svgElement, options) {\n    const type = svgElement.nodeName.toLowerCase();\n    if (type in pathDataGetters) {\n        return pathDataGetters[type].call(svgElement, options);\n    } else {\n        throw new Error(`Unsupported SVG element type: '${type}'`);\n    }\n}\nfunction isFlatEnough([x0, y0, x1, y1, x2, y2, x3, y3], flatness) {\n    const ux = 3 * x1 - 2 * x0 - x3, uy = 3 * y1 - 2 * y0 - y3, vx = 3 * x2 - 2 * x3 - x0, vy = 3 * y2 - 2 * y3 - y0;\n    return Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy) <= 16 * flatness * flatness;\n}\nfunction subdivide([x0, y0, x1, y1, x2, y2, x3, y3], t) {\n    if (t === undefined) t = 0.5;\n    let u = 1 - t, x4 = u * x0 + t * x1, y4 = u * y0 + t * y1, x5 = u * x1 + t * x2, y5 = u * y1 + t * y2, x6 = u * x2 + t * x3, y6 = u * y2 + t * y3, x7 = u * x4 + t * x5, y7 = u * y4 + t * y5, x8 = u * x5 + t * x6, y8 = u * y5 + t * y6, x9 = u * x7 + t * x8, y9 = u * y7 + t * y8;\n    return [\n        [\n            x0,\n            y0,\n            x4,\n            y4,\n            x7,\n            y7,\n            x9,\n            y9\n        ],\n        [\n            x9,\n            y9,\n            x8,\n            y8,\n            x6,\n            y6,\n            x3,\n            y3\n        ]\n    ];\n}\nfunction flatten(v, flatness, maxRecursion = 32) {\n    const minSpan = 1 / maxRecursion;\n    const parts = [];\n    function computeParts(curve, t1, t2) {\n        if (t2 - t1 > minSpan && !isFlatEnough(curve, flatness)) {\n            const halves = subdivide(curve, 0.5);\n            const tMid = (t1 + t2) / 2;\n            computeParts(halves[0], t1, tMid);\n            computeParts(halves[1], tMid, t2);\n        } else {\n            const dx = curve[6] - curve[0];\n            const dy = curve[7] - curve[1];\n            const dist = Math.sqrt(dx * dx + dy * dy);\n            if (dist > 0) {\n                parts.push(curve);\n            }\n        }\n    }\n    computeParts(v, 0, 1);\n    return parts;\n}\nfunction flattenPath(d, options = {\n}) {\n    const pathEl = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\n    pathEl.setAttribute(\"d\", d);\n    const { maxError =0.1  } = options;\n    const paths = [];\n    const xf = ([x, y])=>[\n            x,\n            y\n        ]\n    ;\n    const pathData = getPathData(pathEl, {\n        normalize: true\n    });\n    let cur = null;\n    let closePoint = null;\n    for (const cmd of pathData){\n        if (cmd.type === 'M') {\n            cur = xf(cmd.values);\n            closePoint = cur;\n            paths.push({\n                points: [\n                    cur\n                ]\n            });\n        } else if (cmd.type === 'L') {\n            cur = xf(cmd.values);\n            paths[paths.length - 1].points.push(cur);\n        } else if (cmd.type === 'C') {\n            const [x1, y1, x2, y2, x3, y3] = cmd.values;\n            const [x0, y0] = cur;\n            const [tx1, ty1] = xf([\n                x1,\n                y1\n            ]);\n            const [tx2, ty2] = xf([\n                x2,\n                y2\n            ]);\n            const [tx3, ty3] = xf([\n                x3,\n                y3\n            ]);\n            const parts = flatten([\n                x0,\n                y0,\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                tx3,\n                ty3\n            ], maxError);\n            for (const part of parts){\n                paths[paths.length - 1].points.push([\n                    part[6],\n                    part[7]\n                ]);\n            }\n            cur = [\n                tx3,\n                ty3\n            ];\n        } else if (cmd.type === 'A') {\n            const [rx_, ry_, xAxisRotation, largeArc, sweep, x, y] = cmd.values;\n            const phi = xAxisRotation;\n            const fS = sweep;\n            const fA = largeArc;\n            const { cos , sin , atan2 , sqrt , sign , acos , abs , ceil  } = Math;\n            const mpx = (cur[0] - x) / 2, mpy = (cur[1] - y) / 2;\n            const x1_ = cos(phi) * mpx + sin(phi) * mpy, y1_ = -sin(phi) * mpx + cos(phi) * mpy;\n            const x1_2 = x1_ * x1_, y1_2 = y1_ * y1_;\n            const L = x1_2 / (rx_ * rx_) + y1_2 / (ry_ * ry_);\n            const rx = L <= 1 ? sqrt(L) * rx_ : rx_;\n            const ry = L <= 1 ? sqrt(L) * ry_ : ry_;\n            const rx2 = rx * rx, ry2 = ry * ry;\n            let factor = (rx2 * ry2 - rx2 * y1_2 - ry2 * x1_2) / (rx2 * y1_2 + ry2 * x1_2);\n            if (abs(factor) < 0.0001) factor = 0;\n            if (factor < 0) throw new Error(`bad arc args ${factor}`);\n            const k = (fA === fS ? -1 : 1) * sqrt(factor);\n            const cx_ = k * rx * y1_ / ry, cy_ = k * -ry * x1_ / rx;\n            const cx = cos(phi) * cx_ - sin(phi) * cy_ + (cur[0] + x) / 2, cy = sin(phi) * cx_ + cos(phi) * cy_ + (cur[1] + y) / 2;\n            const ang = (ux, uy, vx, vy)=>{\n                return atan2(ux * vy - uy * vx, ux * vx + uy * vy);\n            };\n            const t1 = ang(1, 0, (x1_ - cx_) / rx, (y1_ - cy_) / ry);\n            const dt_ = ang((x1_ - cx_) / rx, (y1_ - cy_) / ry, (-x1_ - cx_) / rx, (-y1_ - cy_) / ry) % (Math.PI * 2);\n            const dt = fS === 0 && dt_ > 0 ? dt_ - Math.PI * 2 : fS === 1 && dt_ < 0 ? dt_ + Math.PI * 2 : dt_;\n            const e0 = maxError;\n            const n = ceil(abs(dt) / acos(1 - e0 / rx));\n            for(let i = 1; i <= n; i++){\n                const theta = t1 + dt * i / n;\n                const tx = cos(phi) * rx * cos(theta) - sin(phi) * ry * sin(theta) + cx;\n                const ty = sin(phi) * rx * cos(theta) + cos(phi) * ry * sin(theta) + cy;\n                paths[paths.length - 1].points.push([\n                    tx,\n                    ty\n                ]);\n            }\n            cur = [\n                x,\n                y\n            ];\n        } else if (cmd.type === 'Z') {\n            if (closePoint && (cur[0] !== closePoint[0] || cur[1] !== closePoint[1])) {\n                paths[paths.length - 1].points.push(closePoint);\n            }\n        } else {\n            throw Error(`Unexpected path command: \"${cmd}\"`);\n        }\n    }\n    return paths;\n}\nconst pointConversion = (point)=>{\n    if (Array.isArray(point)) return {\n        x: point[0],\n        y: point[1]\n    };\n    else return point;\n};\nfunction copy(turtle) {\n    return new Turtle1(JSON.parse(JSON.stringify({\n        angle: turtle.angle,\n        path: turtle.path\n    })));\n}\nfunction createPath() {\n    return [\n        {\n            points: [\n                {\n                    x: 0,\n                    y: 0\n                }\n            ],\n            fillColor: \"none\",\n            strokeWidth: 1,\n            strokeColor: \"black\",\n            construction: false,\n            dashed: 0,\n            linecap: \"butt\",\n            linejoin: \"mitre\"\n        }\n    ];\n}\nfunction translate(toPoint, fromPoint, turtle) {\n    const { x: x0 , y: y0  } = fromPoint;\n    const { x: x1 , y: y1  } = toPoint;\n    const x = x1 - x0;\n    const y = y1 - y0;\n    turtle.path = turtle.pointMap((point)=>({\n            x: point.x + x,\n            y: point.y + y\n        })\n    );\n    return turtle;\n}\nfunction rotate(angle, point, turtle) {\n    if (!point) point = turtle.centroid;\n    turtle.path = turtle.pointMap((p)=>{\n        let delta = angle * 2 * Math.PI / 360;\n        let hereX = p.x - point.x;\n        let hereY = p.y - point.y;\n        let newPoint = {\n            x: hereX * Math.cos(delta) - hereY * Math.sin(delta) + point.x,\n            y: hereY * Math.cos(delta) + hereX * Math.sin(delta) + point.y\n        };\n        return newPoint;\n    });\n    turtle.angle = turtle.angle + angle;\n    return turtle;\n}\nfunction scale([xScale, yScale], point, turtle) {\n    const { x , y  } = point;\n    turtle.path = turtle.pointMap((p)=>{\n        let newPoint = {\n            x: (p.x - x) * xScale + x,\n            y: (p.y - y) * yScale + y\n        };\n        return newPoint;\n    });\n    turtle.alignHead();\n    return turtle;\n}\nfunction goTo(point, down, turtle) {\n    const end = turtle.end;\n    const { x , y  } = point;\n    turtle.addPoint({\n        x,\n        y\n    }, down);\n    turtle.angle = Math.atan2(end.y - y, end.x - x) * 180 / Math.PI + 180;\n    return turtle;\n}\nfunction setAngle(angle, turtle) {\n    turtle.angle = angle;\n    return turtle;\n}\nfunction reverse(turtle) {\n    turtle.path = turtle.path.map((x)=>({\n            ...x,\n            points: x.points.reverse()\n        })\n    );\n    turtle.alignHead();\n    return turtle;\n}\nfunction setBooleanForm(clippedPaths, turtle) {\n    let newPaths = Object.values(clippedPaths.paths).map((p)=>{\n        p = p.map(({ X , Y  })=>({\n                x: X / turtle.booleanScale,\n                y: Y / turtle.booleanScale\n            })\n        );\n        const points = [\n            ...p,\n            p[0]\n        ];\n        return {\n            points,\n            fillColor: \"none\",\n            strokeWidth: 1,\n            strokeColor: \"black\",\n            construction: false\n        };\n    });\n    turtle.path = newPaths;\n    return turtle;\n}\nfunction flatten1(items) {\n    const flat = [];\n    items.forEach((item)=>{\n        if (Array.isArray(item)) {\n            flat.push(...flatten1(item));\n        } else {\n            flat.push(item);\n        }\n    });\n    return flat;\n}\nfunction construction(turtle) {\n    turtle.pathMap((p)=>p.construction = true\n    );\n    return turtle;\n}\nfunction lastPath(turtle) {\n    let last = turtle.path;\n    while(Array.isArray(last)){\n        last = last[last.length - 1];\n    }\n    return last;\n}\nfunction firstPath(turtle) {\n    return firstPathHelper(turtle.path);\n}\nfunction pointsFromLast(i, turtle) {\n    return turtle.lastPath().points.slice(-1 - i)[0];\n}\nfunction pointsFromFirst(i, turtle) {\n    return turtle.firstPath().points[i];\n}\nfunction flatten2(items) {\n    const flat = [];\n    items.forEach((item)=>{\n        if (Array.isArray(item)) {\n            flat.push(...flatten2(item));\n        } else {\n            flat.push(item);\n        }\n    });\n    return flat;\n}\nfunction addPoint(point, down, turtle) {\n    const lastPath1 = turtle.lastPath();\n    const lastPathPoints = lastPath1.points;\n    if (down) lastPathPoints.push(point);\n    else if (lastPathPoints.length === 1) lastPath1.points = [\n        point\n    ];\n    else {\n        turtle.path.push({\n            points: [\n                point\n            ],\n            fillColor: \"none\",\n            strokeWidth: 1,\n            strokeColor: \"black\",\n            construction: false,\n            linecap: \"butt\",\n            linejoin: \"mitre\"\n        });\n    }\n    return turtle;\n}\nfunction pathMap(f, turtle) {\n    return turtle.path.map((path1)=>pathMapHelper(path1, f)\n    );\n}\nfunction pointMap(f, turtle) {\n    return turtle.pathMap((path1)=>({\n            ...path1,\n            points: path1.points.map(f)\n        })\n    );\n}\nfunction pointFilter(f, turtle) {\n    return turtle.pathMap((shape)=>({\n            ...shape,\n            points: shape.points.filter(f)\n        })\n    );\n}\nfunction lastAngle(turtle) {\n    let angle;\n    if (turtle.points.length > 1) {\n        let lastPoint = turtle.pointsFromLast(0);\n        let secondLastPoint = turtle.pointsFromLast(1);\n        let x = lastPoint.x - secondLastPoint.x;\n        let y = lastPoint.y - secondLastPoint.y;\n        angle = Math.atan2(y, x) * 180 / Math.PI;\n    } else {\n        angle = 0;\n    }\n    return angle;\n}\nfunction alignHead(turtle) {\n    turtle.angle = turtle.lastAngle();\n    return turtle;\n}\nfunction extrema(turtle) {\n    let xMin = Number.POSITIVE_INFINITY;\n    let xMax = Number.NEGATIVE_INFINITY;\n    let yMin = Number.POSITIVE_INFINITY;\n    let yMax = Number.NEGATIVE_INFINITY;\n    turtle.points.forEach((p)=>{\n        if (xMin > p.x) xMin = p.x;\n        if (xMax < p.x) xMax = p.x;\n        if (yMin > p.y) yMin = p.y;\n        if (yMax < p.y) yMax = p.y;\n    });\n    return {\n        xMin,\n        xMax,\n        yMin,\n        yMax\n    };\n}\nfunction width(turtle) {\n    const { xMin , xMax  } = turtle.extrema();\n    return Math.abs(xMin - xMax);\n}\nfunction height(turtle) {\n    const { yMin , yMax  } = turtle.extrema();\n    return Math.abs(yMin - yMax);\n}\nfunction fillColor(color, turtle) {\n    turtle.pathMap((p)=>p.fillColor = color\n    );\n    return turtle;\n}\nfunction polygonArea(vertices) {\n    var area = 0;\n    for(var i = 0; i < vertices.length; i++){\n        let j = (i + 1) % vertices.length;\n        area += vertices[i].x * vertices[j].y;\n        area -= vertices[j].x * vertices[i].y;\n    }\n    return area / 2;\n}\nfunction strokeWidth(width1, turtle) {\n    turtle.pathMap((p)=>p.strokeWidth = width1\n    );\n    return turtle;\n}\nfunction strokeColor(color, turtle) {\n    turtle.pathMap((p)=>p.strokeColor = color\n    );\n    return turtle;\n}\nfunction strokeLinecap(type, turtle) {\n    const TYPES = [\n        \"round\",\n        \"butt\",\n        \"square\"\n    ];\n    if (!TYPES.includes(type)) throw \"Unrecognized type: \" + type;\n    turtle.pathMap((p)=>p.linecap = type\n    );\n    return turtle;\n}\nfunction strokeLinejoin(type, turtle) {\n    const TYPES = [\n        \"round\",\n        \"mitre\",\n        \"bevel\"\n    ];\n    if (!TYPES.includes(type)) throw \"Unrecognized type: \" + type;\n    turtle.pathMap((p)=>p.linejoin = type\n    );\n    return turtle;\n}\nfunction turn(turn1, turtle) {\n    const angle = turtle.angle + turn1 % 360;\n    turtle.angle = angle;\n    return turtle;\n}\nconst degreesToRad = (deg)=>deg / 360 * 2 * Math.PI\n;\nfunction turnForward(turn1, distance, turtle) {\n    turtle.turn(turn1);\n    turtle.forward(distance);\n    return turtle;\n}\nfunction closePath(turtle) {\n    turtle.addPoint({\n        ...turtle.start\n    });\n    turtle.alignHead();\n    return turtle;\n}\nfunction point1(target, turtle) {\n    if (target === \"start\") return turtle.pointsFromFirst(0);\n    else if (target === \"end\") return turtle.pointsFromLast(0);\n    let { xMax , xMin , yMax , yMin  } = turtle.extrema();\n    let middX = (xMax + xMin) / 2;\n    let middY = (yMax + yMin) / 2;\n    if (target === \"center\" || target === \"center center\" || target === \"cc\") return {\n        x: middX,\n        y: middY\n    };\n    else if (target === \"min\" || target === \"left bottom\" || target === \"lb\") return {\n        x: xMin,\n        y: yMin\n    };\n    else if (target === \"max\" || target === \"right top\" || target === \"rt\") return {\n        x: xMax,\n        y: yMax\n    };\n    else if (target === \"min center\" || target === \"left center\" || target === \"lc\") return {\n        x: xMin,\n        y: middY\n    };\n    else if (target === \"min max\" || target === \"left top\" || target === \"lt\") return {\n        x: xMin,\n        y: yMax\n    };\n    else if (target === \"center min\" || target === \"center bottom\" || target === \"cb\") return {\n        x: middX,\n        y: yMin\n    };\n    else if (target === \"center max\" || target === \"center top\" || target === \"ct\") return {\n        x: middX,\n        y: yMax\n    };\n    else if (target === \"max min\" || target === \"right bottom\" || target === \"rb\") return {\n        x: xMax,\n        y: yMin\n    };\n    else if (target === \"max center\" || target === \"right center\" || target === \"rc\") return {\n        x: xMax,\n        y: middY\n    };\n    else throw \"\\\"\" + target + \"\\\"\" + ` is not an origin point. \"right\" or \"left\" come first then \"bottom\" or \"top\"`;\n}\nfunction arc(angle, radius, down, turtle) {\n    const chord = (r, theta)=>2 * r * Math.sin(theta * Math.PI / 360)\n    ;\n    const newPoint = (curAngle, curPoint, distance)=>{\n        const xCos = Math.cos(curAngle * Math.PI / 180);\n        const ySin = Math.sin(curAngle * Math.PI / 180);\n        const x = curPoint.x + distance * xCos;\n        const y = curPoint.y + distance * ySin;\n        return {\n            x,\n            y\n        };\n    };\n    if (angle < 0) radius = -radius;\n    const endPoint = turtle.end;\n    const ogAngle = turtle.angle;\n    const res = Math.abs(Math.floor(angle / 2));\n    [\n        ...Array(res).keys()\n    ].forEach((step)=>{\n        const ang = 180 - (360 - angle / res * (step + 1)) / 2 + ogAngle;\n        const { x , y  } = newPoint(ang, endPoint, chord(radius, angle / res * (step + 1)));\n        turtle.goTo({\n            x,\n            y\n        }, down);\n    });\n    turtle.setAngle(angle + ogAngle);\n    return turtle;\n}\nfunction flip(direction, turtle) {\n    const center = turtle.point(\"cc\");\n    let xDist, yDist;\n    turtle.path = turtle.pointMap((p)=>{\n        xDist = Math.abs(center.x - p.x);\n        yDist = Math.abs(center.y - p.y);\n        if (direction.includes(\"y\")) {\n            p.x = p.x < center.x ? p.x + 2 * xDist : p.x - 2 * xDist;\n        }\n        if (direction.includes(\"x\")) {\n            p.y = p.y < center.y ? p.y + 2 * yDist : p.y - 2 * yDist;\n        }\n        return p;\n    });\n    return turtle;\n}\nfunction repeat(num, turtle) {\n    let ogTurtle = turtle.copy();\n    let start = ogTurtle.start;\n    let startAngle = turtle.angle;\n    let newTurtle, end;\n    for(let i = 0; i < num; i++){\n        newTurtle = ogTurtle.copy();\n        end = turtle.end;\n        newTurtle.translate([\n            end.x - start.x,\n            end.y - start.y\n        ]);\n        newTurtle.rotate(startAngle * (i + 1), newTurtle.start);\n        newTurtle.points.forEach((p, i1)=>{\n            if (i1 !== 0) turtle.addPoint(p);\n        });\n    }\n    turtle.angle = startAngle * (num + 1);\n    return turtle;\n}\nfunction mirror(turtle) {\n    let newTurtle = turtle.copy();\n    newTurtle.reverse();\n    newTurtle.flip(\"y\");\n    const { x , y  } = turtle.end;\n    newTurtle.translate({\n        x,\n        y\n    }, newTurtle.start);\n    newTurtle.rotate(turtle.angle * 2, newTurtle.start);\n    newTurtle.points.forEach((p, i)=>{\n        if (i > 0) turtle.addPoint(p);\n    });\n    turtle.alignHead();\n    return turtle;\n}\nconst getDistance = (p1, p2)=>Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2)\n;\nfunction flatGoTo(point1, axis, turtle) {\n    const { x , y  } = point1;\n    const angle = turtle.angle;\n    const end = turtle.end;\n    const m = Math.tan(angle * Math.PI / 180);\n    const b = end.y - m * end.x;\n    if (axis === \"x\") {\n        const nextX = (y - b) / m;\n        turtle.goTo({\n            x: nextX,\n            y\n        });\n    } else if (axis === \"y\") {\n        const nextY = m * x + b;\n        turtle.goTo({\n            x,\n            y: nextY\n        });\n    }\n    turtle.goTo({\n        x,\n        y\n    });\n    return turtle;\n}\nfunction originate(turtle) {\n    return turtle.translate({\n        x: 0,\n        y: 0\n    }, turtle.cc);\n}\nconst overlap = (p0, p1)=>0.00000001 > Math.abs(p0.x - p1.x) + Math.abs(p0.y - p1.y)\n;\nfunction copyPaste(num, transformations, turtle) {\n    let newTurtles = [];\n    let lastTurtle = turtle.copy();\n    let angle;\n    for(let i = 0; i < num; i++){\n        transformations(lastTurtle);\n        newTurtles.push(lastTurtle);\n        lastTurtle = lastTurtle.copy();\n        angle = lastTurtle.angle;\n    }\n    let path1 = [\n        ...turtle.path\n    ];\n    for (const newTurtle of newTurtles){\n        path1 = [\n            ...path1,\n            ...newTurtle.path\n        ];\n    }\n    turtle.path = path1;\n    turtle.angle = angle;\n    return turtle;\n}\nfunction newStroke(start, type, turtle) {\n    const { x , y  } = turtle.end;\n    if (Math.abs(start.x - x) < 0.00001 && Math.abs(start.y - y) < 0.00001) return turtle;\n    const ps = turtle.points;\n    if (ps.length === 1) {\n        turtle.lastPath().points[0] = start;\n    } else {\n        turtle.path.push({\n            points: [\n                start\n            ],\n            fillColor: \"none\",\n            strokeWidth: 1,\n            strokeColor: \"black\",\n            construction: false,\n            linecap: \"butt\",\n            linejoin: \"mitre\"\n        });\n        turtle.angle = 0;\n    }\n    return turtle;\n}\nfunction getSqDist(p1, p2) {\n    var dx = p1[0] - p2[0], dy = p1[1] - p2[1];\n    return dx * dx + dy * dy;\n}\nconst getDistance1 = (p1, p2)=>Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2)\n;\nfunction placeAlong(turtle, ogTurtle) {\n    const fp = turtle.start;\n    const lp = turtle.end;\n    const newTurtles = turtle.points.reduce((acc, cur, i)=>{\n        const newTurtle = ogTurtle.copy().translate(ogTurtle.cc, cur);\n        return acc.concat(newTurtle);\n    }, []);\n    const grouped = group1(...newTurtles);\n    ogTurtle.path = grouped.path;\n    return ogTurtle;\n}\nfunction trim(start, end, turtle) {\n    const newTurtle = new Turtle1();\n    let count = 0;\n    turtle.pathMap((path1)=>{\n        let started = false;\n        path1.points.forEach((p)=>{\n            if (count >= start && count <= end) {\n                if (!started) {\n                    newTurtle.newStroke(p);\n                    started = true;\n                } else {\n                    newTurtle.addPoint(p);\n                }\n            }\n            count++;\n        });\n    });\n    turtle.path = newTurtle.path;\n    turtle.alignHead();\n    return turtle;\n}\nfunction dashed(num, turtle) {\n    turtle.pathMap((p)=>p.dashed = num\n    );\n    return turtle;\n}\nfunction centroid(turtle) {\n    const pts = turtle.points;\n    if (pts.length === 1) return pts[0];\n    else if (pts.length === 2) return {\n        x: (pts[0].x + pts[1].x) / 2,\n        y: (pts[0].y + pts[1].y) / 2\n    };\n    var first = pts[0], last = pts[pts.length - 1];\n    if (first.x != last.x || first.y != last.y) pts.push(first);\n    var twicearea = 0, x = 0, y = 0, nPts = pts.length, p1, p2, f;\n    for(var i = 0, j = nPts - 1; i < nPts; j = i++){\n        p1 = pts[i];\n        p2 = pts[j];\n        f = p1.x * p2.y - p2.x * p1.y;\n        twicearea += f;\n        x += (p1.x + p2.x) * f;\n        y += (p1.y + p2.y) * f;\n    }\n    f = twicearea * 3;\n    return {\n        x: x / f,\n        y: y / f\n    };\n}\nfunction vec([x, y], down, turtle) {\n    if (x === 0 && y === 0) return turtle;\n    const { x: lx , y: ly  } = turtle.end;\n    turtle.addPoint({\n        x: lx + x,\n        y: ly + y\n    }, down);\n    turtle.angle = Math.atan2(y, x) * 180 / Math.PI;\n    return turtle;\n}\nfunction bezier(string, turtle) {\n    const polylines = flattenPath(string, {\n        maxError: 0.001\n    }).map((x)=>x.points\n    );\n    polylines.forEach((pl)=>{\n        pl.forEach((point1, i)=>i === 0 ? turtle.newStroke(point1) : turtle.goTo(point1)\n        );\n    });\n    return turtle;\n}\nfunction slide(angle, distance, turtle) {\n    turtle.path = turtle.pointMap((point1)=>({\n            x: point1.x + distance * Math.cos(angle / 180 * Math.PI),\n            y: point1.y + distance * Math.sin(angle / 180 * Math.PI)\n        })\n    );\n    return turtle;\n}\nfunction lSystem({ axiom , rules , instructions , steps , max ,  }, turtle) {\n    let state = typeof axiom === \"string\" ? axiom.split(\"\") : axiom;\n    for(let i = 0; i < steps; i++){\n        let newState = [];\n        state.forEach((symbol)=>{\n            let replacement = rules[symbol] ?? [\n                symbol\n            ];\n            if (typeof replacement === \"string\") replacement = replacement.split(\"\");\n            newState.push(...replacement);\n        });\n        state = newState;\n    }\n    const t = turtle;\n    t.l_system_tape = state;\n    state.forEach((c, i1)=>{\n        if ((max === undefined || i1 < max) && instructions[c]) return instructions[c](t);\n    });\n    return t;\n}\nfunction transform(matrix, turtle) {\n    turtle.path = turtle.pointMap((p)=>({\n            x: matrix[0][0] * p.x + matrix[0][1] * p.y + matrix[0][2],\n            y: matrix[1][0] * p.x + matrix[1][1] * p.y + matrix[1][2]\n        })\n    );\n    return turtle;\n}\nconst pointAdjust = (p, scale1)=>{\n    const temp = {\n    };\n    temp[\"X\"] = Math.round(p.x * scale1);\n    temp[\"Y\"] = Math.round(p.y * scale1);\n    return temp;\n};\nfunction group1() {\n    const turtles = arguments;\n    let path1 = [];\n    for (const turtle of turtles){\n        if (turtle.points.length === 1) continue;\n        path1 = turtle.path.length === 1 ? [\n            ...path1,\n            ...turtle.path\n        ] : [\n            ...path1,\n            turtle.path\n        ];\n    }\n    const __final = new Turtle1();\n    if (path1.length > 0) __final.path = path1;\n    __final.angle = turtles[turtles.length - 1].angle;\n    return __final;\n}\nfunction flatten3(items) {\n    const flat = [];\n    items.forEach((item)=>{\n        if (Array.isArray(item)) {\n            flat.push(...flatten3(item));\n        } else {\n            flat.push(item);\n        }\n    });\n    return flat;\n}\nfunction flatten4(items) {\n    const flat = [];\n    items.forEach((item)=>{\n        if (Array.isArray(item)) {\n            flat.push(...flatten4(item));\n        } else {\n            flat.push(item);\n        }\n    });\n    return flat;\n}\nfunction flatten5(items) {\n    const flat = [];\n    items.forEach((item)=>{\n        if (Array.isArray(item)) {\n            flat.push(...flatten5(item));\n        } else {\n            flat.push(item);\n        }\n    });\n    return flat;\n}\nfunction flatten6(items) {\n    const flat = [];\n    items.forEach((item)=>{\n        if (Array.isArray(item)) {\n            flat.push(...flatten6(item));\n        } else {\n            flat.push(item);\n        }\n    });\n    return flat;\n}\nconst pointAdjust1 = (p, scale1)=>{\n    const temp = {\n    };\n    temp[\"X\"] = Math.round(p.x * scale1);\n    temp[\"Y\"] = Math.round(p.y * scale1);\n    return temp;\n};\nfunction getBooleanForm(turtle) {\n    let [tool, ...body] = turtle.path.reverse();\n    tool = Array.isArray(tool) ? flatten1(tool) : [\n        tool\n    ];\n    body = Array.isArray(body) ? flatten1(body) : [\n        body\n    ];\n    tool = tool.map((p)=>p.points.map((p1)=>pointAdjust1(p1, turtle.booleanScale)\n        )\n    );\n    body = body.map((p)=>p.points.map((p1)=>pointAdjust1(p1, turtle.booleanScale)\n        )\n    );\n    return body && tool ? [\n        body,\n        tool\n    ] : tool;\n}\nfunction forward(distance, down, turtle) {\n    if (distance === 0) return turtle;\n    const lastPoint = turtle.end;\n    const angle = turtle.angle;\n    const xCos = Math.cos(degreesToRad(angle));\n    const ySin = Math.sin(degreesToRad(angle));\n    const x = lastPoint.x + distance * xCos;\n    const y = lastPoint.y + distance * ySin;\n    turtle.addPoint({\n        x,\n        y\n    }, down);\n    return turtle;\n}\nconst getAngle = (p1, p2)=>180 / Math.PI * Math.atan2(p2.y - p1.y, p2.x - p1.x)\n;\nconst getIntraDist = (turtle, i0, i1)=>getDistance(turtle.pointsFromLast(i0), turtle.pointsFromLast(i1))\n;\nconst getIntraAngle = (turtle, i0, i1)=>getAngle(turtle.pointsFromLast(i0), turtle.pointsFromLast(i1))\n;\nconst isClosed = ({ points  })=>{\n    const path1 = points;\n    const EPSILON = 0.00000001;\n    const firstPoint = path1[0];\n    const lastPoint = path1[path1.length - 1];\n    const xDelta = Math.abs(firstPoint.x - lastPoint.x);\n    const yDelta = Math.abs(firstPoint.y - lastPoint.y);\n    const closed = xDelta < 0.00000001 && yDelta < 0.00000001;\n    return closed;\n};\nfunction fillet(radius, turtle) {\n    const lastPath1 = turtle.lastPath();\n    const l = lastPath1.points.length;\n    if (l < 3) return turtle;\n    const dist1 = getIntraDist(turtle, 0, 1);\n    const dist0 = getIntraDist(turtle, 1, 2);\n    const ang0 = getIntraAngle(turtle, 1, 0);\n    const ang1 = getIntraAngle(turtle, 2, 1);\n    const ang = ang0 - ang1;\n    const lose = Math.abs(Math.tan(ang / 360 * Math.PI) * radius);\n    lastPath1.points = lastPath1.points.slice(0, -2);\n    turtle.setAngle(ang1);\n    turtle.forward(dist0 - lose);\n    let circleAng = ang;\n    if (circleAng > 180) {\n        circleAng = ang - 360;\n    } else if (circleAng < -180) {\n        circleAng = 360 + ang;\n    }\n    arc(circleAng, radius, true, turtle);\n    turtle.forward(dist1 - lose);\n    return turtle;\n}\nfunction offset(distance, ops, turtle) {\n    let { endType , jointType =\"jtRound\" , miterLimit =2 , roundPrecision =0.25  } = ops;\n    if (!endType) {\n        const closed = overlap(turtle.start, turtle.end);\n        endType = closed ? 'etClosedRound' : \"etOpenRound\";\n    }\n    const paths = turtle.getBooleanForm().flat();\n    const subject = new __default(paths, true);\n    const result = subject.offset(distance * turtle.booleanScale, {\n        jointType,\n        endType,\n        miterLimit,\n        roundPrecision\n    });\n    turtle.setBooleanForm(result);\n    return turtle;\n}\nfunction getSqSegDist(p, p1, p2) {\n    var x = p1[0], y = p1[1], dx = p2[0] - x, dy = p2[1] - y;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x = p2[0];\n            y = p2[1];\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n    dx = p[0] - x;\n    dy = p[1] - y;\n    return dx * dx + dy * dy;\n}\nfunction simplifyRadialDist(points, sqTolerance) {\n    var prevPoint = points[0], newPoints = [\n        prevPoint\n    ], point1;\n    for(var i = 1, len = points.length; i < len; i++){\n        point1 = points[i];\n        if (getSqDist(point1, prevPoint) > sqTolerance) {\n            newPoints.push(point1);\n            prevPoint = point1;\n        }\n    }\n    if (prevPoint !== point1) newPoints.push(point1);\n    return newPoints;\n}\nfunction simplifyDPStep(points, first, last, sqTolerance, simplified) {\n    var maxSqDist = sqTolerance, index1;\n    for(var i = first + 1; i < last; i++){\n        var sqDist = getSqSegDist(points[i], points[first], points[last]);\n        if (sqDist > maxSqDist) {\n            index1 = i;\n            maxSqDist = sqDist;\n        }\n    }\n    if (maxSqDist > sqTolerance) {\n        if (index1 - first > 1) simplifyDPStep(points, first, index1, sqTolerance, simplified);\n        simplified.push(points[index1]);\n        if (last - index1 > 1) simplifyDPStep(points, index1, last, sqTolerance, simplified);\n    }\n}\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n    var last = points.length - 1;\n    var simplified = [\n        points[0]\n    ];\n    simplifyDPStep(points, 0, last, sqTolerance, simplified);\n    simplified.push(points[last]);\n    return simplified;\n}\nfunction simplify(points, tolerance, highestQuality) {\n    if (points.length <= 2) return points;\n    var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n    points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n    points = simplifyDouglasPeucker(points, sqTolerance);\n    return points;\n}\nfunction resize(canvas) {\n    const { width: w , height: h  } = canvas.getBoundingClientRect();\n    canvas.width = w;\n    canvas.height = h;\n    return {\n        w,\n        h\n    };\n}\nconst getImgData = (canvas)=>canvas.getContext(\"2d\").getImageData(0, 0, canvas.width, canvas.height)\n;\nfunction draw(textString, canvas, resizeIt = true) {\n    const { w , h  } = resize(canvas);\n    var ctx = canvas.getContext(\"2d\");\n    const padding = 0;\n    ctx.font = \"100pt helvetica\";\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = \"center\";\n    const mT = ctx.measureText(textString);\n    const tw = mT.width + 0;\n    const textHeight = mT.fontBoundingBoxAscent + mT.fontBoundingBoxDescent;\n    if (resizeIt) {\n        canvas.style.height = `${textHeight}px`;\n        canvas.style.width = `${tw}px`;\n    }\n    ctx.fillText(textString, tw / 2, h / 2);\n    if (resizeIt) draw(textString, canvas, false);\n}\nfunction interpolate(side, neighbors, step) {\n    let y0, y1;\n    if (side === 0) {\n        y0 = neighbors[0];\n        y1 = neighbors[1];\n    } else if (side === 1) {\n        y0 = neighbors[1];\n        y1 = neighbors[2];\n    } else if (side === 2) {\n        y0 = neighbors[3];\n        y1 = neighbors[2];\n    } else if (side === 3) {\n        y0 = neighbors[3];\n        y1 = neighbors[0];\n    }\n    let x0 = -1;\n    let x1 = 1;\n    let m = (y1 - y0) / (x1 - x0);\n    let b = y1 - m * x1;\n    let pointFiveX = (0.5 - b) / m;\n    return step * pointFiveX;\n}\nconst RULES_INTERPOLATED = {\n    \"0000\": ([x, y], step, neighbors)=>[]\n    ,\n    \"0001\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x - step,\n                    y - interpolate(3, neighbors, step)\n                ],\n                [\n                    x + interpolate(2, neighbors, step),\n                    y + step\n                ]\n            ]\n        ]\n    ,\n    \"0010\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x + interpolate(2, neighbors, step),\n                    y + step\n                ],\n                [\n                    x + step,\n                    y + interpolate(1, neighbors, step)\n                ]\n            ]\n        ]\n    ,\n    \"0100\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x + step,\n                    y + interpolate(1, neighbors, step)\n                ],\n                [\n                    x + interpolate(0, neighbors, step),\n                    y - step\n                ]\n            ]\n        ]\n    ,\n    \"1000\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x + interpolate(0, neighbors, step),\n                    y - step\n                ],\n                [\n                    x - step,\n                    y - interpolate(3, neighbors, step)\n                ]\n            ]\n        ]\n    ,\n    \"0011\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x - step,\n                    y - interpolate(3, neighbors, step)\n                ],\n                [\n                    x + step,\n                    y + interpolate(1, neighbors, step)\n                ]\n            ]\n        ]\n    ,\n    \"0101\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x - step,\n                    y - interpolate(3, neighbors, step)\n                ],\n                [\n                    x + interpolate(0, neighbors, step),\n                    y - step\n                ]\n            ],\n            [\n                [\n                    x + step,\n                    y + interpolate(1, neighbors, step)\n                ],\n                [\n                    x + interpolate(2, neighbors, step),\n                    y + step\n                ]\n            ]\n        ]\n    ,\n    \"1001\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x + interpolate(0, neighbors, step),\n                    y - step\n                ],\n                [\n                    x + interpolate(2, neighbors, step),\n                    y + step\n                ]\n            ]\n        ]\n    ,\n    \"0110\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x + interpolate(2, neighbors, step),\n                    y + step\n                ],\n                [\n                    x + interpolate(0, neighbors, step),\n                    y - step\n                ]\n            ]\n        ]\n    ,\n    \"1010\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x + interpolate(2, neighbors, step),\n                    y + step\n                ],\n                [\n                    x - step,\n                    y - interpolate(3, neighbors, step)\n                ]\n            ],\n            [\n                [\n                    x + interpolate(0, neighbors, step),\n                    y - step\n                ],\n                [\n                    x + step,\n                    y + interpolate(1, neighbors, step)\n                ]\n            ]\n        ]\n    ,\n    \"1100\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x + step,\n                    y + interpolate(1, neighbors, step)\n                ],\n                [\n                    x - step,\n                    y - interpolate(3, neighbors, step)\n                ]\n            ]\n        ]\n    ,\n    \"0111\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x - step,\n                    y - interpolate(3, neighbors, step)\n                ],\n                [\n                    x + interpolate(0, neighbors, step),\n                    y - step\n                ]\n            ]\n        ]\n    ,\n    \"1011\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x + interpolate(0, neighbors, step),\n                    y - step\n                ],\n                [\n                    x + step,\n                    y + interpolate(1, neighbors, step)\n                ]\n            ]\n        ]\n    ,\n    \"1110\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x + interpolate(2, neighbors, step),\n                    y + step\n                ],\n                [\n                    x - step,\n                    y - interpolate(3, neighbors, step)\n                ]\n            ]\n        ]\n    ,\n    \"1101\": ([x, y], step, neighbors)=>[\n            [\n                [\n                    x + step,\n                    y + interpolate(1, neighbors, step)\n                ],\n                [\n                    x + interpolate(2, neighbors, step),\n                    y + step\n                ]\n            ]\n        ]\n    ,\n    \"1111\": ([x, y], step, neighbors)=>[]\n};\nconst DIRECTION = {\n    \"0000\": undefined,\n    \"0001\": \"down\",\n    \"0010\": \"right\",\n    \"0100\": \"up\",\n    \"1000\": \"left\",\n    \"0011\": \"right\",\n    \"0101\": undefined,\n    \"1001\": \"down\",\n    \"0110\": \"up\",\n    \"1010\": undefined,\n    \"1100\": \"left\",\n    \"0111\": \"up\",\n    \"1011\": \"right\",\n    \"1110\": \"left\",\n    \"1101\": \"down\",\n    \"1111\": undefined\n};\nfunction marchImage(imgData) {\n    let { data: og , width: w , height: h  } = imgData;\n    const getGrey = (row, col)=>og[(row * w + col) * 4 + 3] / 255\n    ;\n    const getNeighbors = (row, col)=>[\n            getGrey(row - 1, col - 1),\n            getGrey(row - 1, col),\n            getGrey(row, col),\n            getGrey(row, col - 1), \n        ]\n    ;\n    const getCode = (neighbors)=>neighbors.map((x)=>x >= 0.5 ? 1 : 0\n        ).join(\"\")\n    ;\n    const allLines = [];\n    const seen = {\n    };\n    let last = [];\n    for(let y = 1; y < h; y++){\n        for(let x = 1; x < w; x++){\n            if (seen[`${x},${y}`]) continue;\n            let neighbors = getNeighbors(y, x);\n            let string = getCode(neighbors);\n            let rule = RULES_INTERPOLATED[string];\n            let direction = DIRECTION[string];\n            const lines = rule([\n                x,\n                y\n            ], 0.5, neighbors);\n            seen[`${x},${y}`] = true;\n            let newPoints = lines.flat();\n            if (newPoints.length > 0) allLines.push(lines.flat());\n            if (direction) {\n                let last1 = [\n                    x,\n                    y\n                ];\n                while(direction){\n                    if (direction === \"up\") y -= 1;\n                    else if (direction === \"down\") y += 1;\n                    else if (direction === \"right\") x += 1;\n                    else if (direction === \"left\") x -= 1;\n                    if (seen[`${x},${y}`] === true) break;\n                    neighbors = getNeighbors(y, x);\n                    string = getCode(neighbors);\n                    rule = RULES_INTERPOLATED[string];\n                    direction = DIRECTION[string];\n                    seen[`${x},${y}`] = true;\n                    let lines1 = rule([\n                        x,\n                        y\n                    ], 0.5, neighbors);\n                    let lastPolyLine = allLines[allLines.length - 1];\n                    lines1.forEach((l)=>{\n                        lastPolyLine.push(l[1]);\n                    });\n                }\n                [x, y] = last1;\n            }\n        }\n    }\n    return allLines;\n}\nfunction textToPolylines(str) {\n    const canvas = document.createElement(\"canvas\");\n    document.body.appendChild(canvas);\n    draw(str, canvas);\n    const imgData = getImgData(canvas);\n    let lines = marchImage(imgData);\n    lines = lines.map((line1)=>{\n        line1 = simplify(line1, 0.1);\n        return line1.reverse();\n    });\n    document.body.removeChild(canvas);\n    return lines;\n}\nconst cache = {\n};\nfunction text(string, turtle) {\n    const polylines = cache[string] || textToPolylines(string);\n    cache[string] = polylines;\n    polylines.forEach((pl)=>{\n        pl.forEach((point1, i)=>{\n            if (i === 0) turtle.newStroke(point1);\n            turtle.goTo(point1);\n        });\n    });\n    turtle.flip(\"x\");\n    return turtle;\n}\nconst convert = (turtle)=>flatten3(turtle.path).map((x)=>x.points.map(({ x: x1 , y  })=>[\n                x1,\n                y\n            ]\n        )\n    )\n;\nfunction newUnion(turtle, args) {\n    const target = convert(turtle);\n    const tools = [\n        ...args\n    ].map(convert);\n    const result = index.union(target, tools);\n    let newPaths = result.flat().map((points)=>{\n        return {\n            points: points.map((p)=>({\n                    x: p[0],\n                    y: p[1]\n                })\n            ),\n            fillColor: \"none\",\n            strokeWidth: 1,\n            strokeColor: \"black\",\n            construction: false\n        };\n    });\n    turtle.path = newPaths;\n    return turtle;\n}\nconst convert1 = (turtle)=>flatten4(turtle.path).map((x)=>x.points.map(({ x: x1 , y  })=>[\n                x1,\n                y\n            ]\n        )\n    )\n;\nfunction newIntersection(turtle, args) {\n    const target = convert1(turtle);\n    const tools = [\n        ...args\n    ].map(convert1);\n    const result = index.intersection(target, tools);\n    let newPaths = result.flat().map((points)=>{\n        return {\n            points: points.map((p)=>({\n                    x: p[0],\n                    y: p[1]\n                })\n            ),\n            fillColor: \"none\",\n            strokeWidth: 1,\n            strokeColor: \"black\",\n            construction: false\n        };\n    });\n    turtle.path = newPaths;\n    return turtle;\n}\nconst convert2 = (turtle)=>flatten5(turtle.path).map((x)=>x.points.map(({ x: x1 , y  })=>[\n                x1,\n                y\n            ]\n        )\n    )\n;\nfunction newDifference(turtle, args) {\n    const target = convert2(turtle);\n    const tools = [\n        ...args\n    ].map(convert2);\n    const result = index.difference(target, tools);\n    let newPaths = result.flat().map((points)=>{\n        return {\n            points: points.map((p)=>({\n                    x: p[0],\n                    y: p[1]\n                })\n            ),\n            fillColor: \"none\",\n            strokeWidth: 1,\n            strokeColor: \"black\",\n            construction: false\n        };\n    });\n    turtle.path = newPaths;\n    return turtle;\n}\nconst convert3 = (turtle)=>flatten6(turtle.path).map((x)=>x.points.map(({ x: x1 , y  })=>[\n                x1,\n                y\n            ]\n        )\n    )\n;\nfunction newXor(turtle, args) {\n    const target = convert3(turtle);\n    const tools = [\n        ...args\n    ].map(convert3);\n    const result = index.xor(target, tools);\n    let newPaths = result.flat().map((points)=>{\n        return {\n            points: points.map((p)=>({\n                    x: p[0],\n                    y: p[1]\n                })\n            ),\n            fillColor: \"none\",\n            strokeWidth: 1,\n            strokeColor: \"black\",\n            construction: false\n        };\n    });\n    turtle.path = newPaths;\n    return turtle;\n}\nfunction flatten7(items) {\n    const flat = [];\n    items.forEach((item)=>{\n        if (Array.isArray(item)) {\n            flat.push(...flatten7(item));\n        } else {\n            flat.push(item);\n        }\n    });\n    return flat;\n}\nfunction polylines(asArray, prec, turtle) {\n    const roundPathPts = (path1)=>({\n            inside: path1.fillColor === \"white\",\n            pts: path1.points.map(({ x , y  })=>asArray ? [\n                    x,\n                    y\n                ] : {\n                    x,\n                    y\n                }\n            )\n        })\n    ;\n    const pls = flatten7(turtle.path).map(roundPathPts);\n    return pls;\n}\nfunction crossProduct1(a, b) {\n    return a.x * b.y - b.x * a.y;\n}\nfunction doBoundingBoxesIntersect(a, b) {\n    return a.xMin <= b.xMax && a.xMax >= b.xMin && a.yMin <= b.yMax && a.yMax >= b.yMin;\n}\nfunction isPointRightOfLine(line1, point1) {\n    let aTmp = [\n        {\n            x: 0,\n            y: 0\n        },\n        {\n            x: line1[1].x - line1[0].x,\n            y: line1[1].y - line1[0].y\n        }\n    ];\n    let bTmp = {\n        x: point1.x - line1[0].x,\n        y: point1.y - line1[0].y\n    };\n    let r = crossProduct1(aTmp[1], bTmp);\n    return r < 0;\n}\nfunction lineSegmentCrossesLine(a, b) {\n    return isPointRightOfLine(a, b[0]) ^ isPointRightOfLine(a, b[1]);\n}\nfunction getBoundingBox(line1) {\n    let xMin = Math.min(line1[0].x, line1[1].x);\n    let xMax = Math.max(line1[0].x, line1[1].x);\n    let yMin = Math.min(line1[0].y, line1[1].y);\n    let yMax = Math.max(line1[0].y, line1[1].y);\n    return {\n        xMin,\n        xMax,\n        yMin,\n        yMax\n    };\n}\nfunction doLinesIntersect(a, b) {\n    let box1 = getBoundingBox(a);\n    let box2 = getBoundingBox(b);\n    return doBoundingBoxesIntersect(box1, box2) && lineSegmentCrossesLine(a, b) && lineSegmentCrossesLine(b, a);\n}\nfunction isRectangle({ x: x0 , y: y0  }, { x: x1 , y: y1  }, { x: x2 , y: y2  }, { x: x3 , y: y3  }) {\n    let cx, cy, dd0, dd1, dd2, dd3;\n    cx = (x0 + x1 + x2 + x3) / 4;\n    cy = (y0 + y1 + y2 + y3) / 4;\n    dd0 = (cx - x0) ** 2 + (cy - y0) ** 2;\n    dd1 = (cx - x1) ** 2 + (cy - y1) ** 2;\n    dd2 = (cx - x2) ** 2 + (cy - y2) ** 2;\n    dd3 = (cx - x3) ** 2 + (cy - y3) ** 2;\n    return approxEq(dd0, dd1) && approxEq(dd0, dd2) && approxEq(dd0, dd3);\n}\nconst approxEq = (x, y)=>Math.abs(x - y) < 1\n;\nconst samePt = (pt0, pt1)=>approxEq(pt0.x, pt1.x) && approxEq(pt0.y, pt1.y)\n;\nconst dist2 = (pt0, pt1)=>(pt1.x - pt0.x) ** 2 + (pt1.y - pt0.y) ** 2\n;\nfunction getMidpoint(p0, p1) {\n    return {\n        x: (p0.x + p1.x) / 2,\n        y: (p0.y + p1.y) / 2\n    };\n}\nfunction ptContained(pt, pts) {\n    let numPoints = pts.length;\n    let intersections = 0;\n    for(let i = 0, j = 1; j < numPoints; j++, i++){\n        let seg = [\n            pts[i],\n            pts[j]\n        ];\n        let ray = [\n            pt,\n            {\n                x: pt.x,\n                y: -999999999999\n            }\n        ];\n        if (doLinesIntersect(seg, ray)) intersections++;\n    }\n    return intersections % 2 !== 0;\n}\nfunction ptsAreRight(p0, p1, p2) {\n    const midPt = getMidpoint(p0, p2);\n    const a = dist2(p0, p1);\n    const b = dist2(p1, p2);\n    const c = dist2(p0, p2);\n    const isRight = approxEq(a + b, c);\n    return {\n        isRight,\n        midPt\n    };\n}\nfunction getTabsPls(pls) {\n    let tabs = [];\n    for(let i = 0; i < pls.length; i++){\n        let pl = pls[i];\n        const n = pl.pts.length;\n        for(let i1 = 0; i1 < n - 2; i1++){\n            const [p0, p1, p2] = pl.pts.slice(i1);\n            const { isRight , midPt  } = ptsAreRight(p0, p1, p2);\n            if (isRight) {\n                let contained = ptContained(midPt, pl.pts);\n                tabs.push({\n                    contained: contained && !pl.inside,\n                    midPt,\n                    pts: [\n                        p0,\n                        p1,\n                        p2\n                    ]\n                });\n                const fivePts = pl.pts.length === 5;\n                if (fivePts) {\n                    const [p01, p11, p21, p3] = pl.pts;\n                    let isRect = isRectangle(p01, p11, p21, p3);\n                    if (isRect) i1 += 1;\n                }\n            }\n            if (i1 === n - 3) {\n                const p21 = pl.pts[1];\n                const [p01, p11] = pl.pts.slice(i1 + 1);\n                const { isRight: isRight1 , midPt: midPt1  } = ptsAreRight(p01, p11, p21);\n                if (true) {\n                    let contained = ptContained(midPt1, pl.pts);\n                    tabs.push({\n                        contained: contained && !pl.inside,\n                        midPt: midPt1,\n                        pts: [\n                            p01,\n                            p11,\n                            p21\n                        ],\n                        last: true\n                    });\n                    const fivePts = pl.pts.length === 5;\n                    if (fivePts) {\n                        const [p02, p12, p22, p3] = pl.pts;\n                        let isRect = isRectangle(p02, p12, p22, p3);\n                        if (isRect) i1 += 1;\n                    }\n                }\n            }\n        }\n    }\n    const fusedTabs = [];\n    for(let i1 = 0; i1 < tabs.length; i1++){\n        let tab0 = tabs[i1];\n        for(let j = i1 + 1; j < tabs.length; j++){\n            let tab1 = tabs[j];\n            if (samePt(tab0.midPt, tab1.midPt)) {\n                tab0.pts.push(tab1.pts[2]);\n                fusedTabs.push(tab0);\n            }\n        }\n    }\n    return [\n        tabs,\n        fusedTabs\n    ];\n}\nfunction getTabs(turtle) {\n    return getTabsPls(turtle.copy().polylines());\n}\nfunction points(turtle) {\n    return flatten2(turtle.pathMap((x)=>x.points\n    ));\n}\nconst clockwise = (ps)=>polygonArea(ps) > 0\n;\nfunction floodFill(color, turtle) {\n    turtle.xor();\n    turtle.pathMap((p, i)=>{\n        let cw = clockwise(p.points);\n        if (cw) p.fillColor = color;\n        else p.fillColor = \"white\";\n    });\n    return turtle;\n}\nfunction flatten8(turtle) {\n    const pls = turtle.polylines();\n    const adjustedPls = pls.map((x)=>x.pts.map((p)=>pointAdjust(p, turtle.booleanScale)\n        )\n    );\n    const [first, ...rest] = adjustedPls;\n    let subject = new __default([\n        first\n    ], true);\n    rest.forEach((pl)=>{\n        const clip = new __default([\n            pl\n        ], true);\n        subject = subject.union(clip);\n    });\n    return turtle.setBooleanForm(subject);\n}\nclass Turtle1 {\n    constructor(init){\n        this.angle = 0;\n        this.path = createPath();\n        this.savedStates = [];\n        this.booleanScale = 10000;\n        if (init) {\n            this.angle = init.angle;\n            this.path = init.path;\n        }\n    }\n    overwrite(turtle) {\n        this.angle = turtle.angle;\n        this.path = turtle.path;\n        this.savedStates = turtle.savedStates;\n        this.booleanScale = turtle.booleanScale;\n        return this;\n    }\n    firstPath() {\n        return firstPath(this);\n    }\n    lastPath() {\n        return lastPath(this);\n    }\n    pointsFromLast(i) {\n        return pointsFromLast(i, this);\n    }\n    pointsFromFirst(i) {\n        return pointsFromFirst(i, this);\n    }\n    getPoint(i) {\n        return i >= 0 ? pointsFromFirst(i, this) : pointsFromLast(-i, this);\n    }\n    addPoint(point, down = true) {\n        return addPoint(point, down, this);\n    }\n    pathMap(func) {\n        return pathMap(func, this);\n    }\n    pointMap(func) {\n        return pointMap(func, this);\n    }\n    pointFilter(func) {\n        return pointFilter(func, this);\n    }\n    extrema() {\n        return extrema(this);\n    }\n    copy() {\n        return copy(this);\n    }\n    setBooleanForm(paths) {\n        return setBooleanForm(paths, this);\n    }\n    getBooleanForm() {\n        return getBooleanForm(this);\n    }\n    point(target) {\n        return point1(target, this);\n    }\n    store() {\n        this.savedStates.push({\n            pos: this.end,\n            angle: this.angle\n        });\n        return this;\n    }\n    restore() {\n        const state = this.savedStates.pop();\n        this.goTo(state.pos, false);\n        this.angle = state.angle;\n        return this;\n    }\n    newStroke(start = [\n        0,\n        0\n    ], type = \"point\") {\n        return newStroke(pointConversion(start), type, this);\n    }\n    construction() {\n        return construction(this);\n    }\n    lastAngle() {\n        return lastAngle(this);\n    }\n    lastangle() {\n        return lastAngle(this);\n    }\n    last_angle() {\n        return lastAngle(this);\n    }\n    alignHead() {\n        return alignHead(this);\n    }\n    alignhead() {\n        return alignHead(this);\n    }\n    align_head() {\n        return alignHead(this);\n    }\n    fillColor(color) {\n        return fillColor(color, this);\n    }\n    fillcolor(color) {\n        return fillColor(color, this);\n    }\n    fill_color(color) {\n        return fillColor(color, this);\n    }\n    strokeWidth(thickness) {\n        return strokeWidth(thickness, this);\n    }\n    strokewidth(thickness) {\n        return strokeWidth(thickness, this);\n    }\n    stroke_width(thickness) {\n        return strokeWidth(thickness, this);\n    }\n    strokeColor(color) {\n        return strokeColor(color, this);\n    }\n    strokecolor(color) {\n        return strokeColor(color, this);\n    }\n    stroke_color(color) {\n        return strokeColor(color, this);\n    }\n    strokeLinecap(type) {\n        return strokeLinecap(type, this);\n    }\n    strokelinecap(type) {\n        return strokeLinecap(type, this);\n    }\n    stroke_linecap(type) {\n        return strokeLinecap(type, this);\n    }\n    strokeLinejoin(type) {\n        return strokeLinejoin(type, this);\n    }\n    strokelinejoin(type) {\n        return strokeLinejoin(type, this);\n    }\n    stroke_linejoin(type) {\n        return strokeLinejoin(type, this);\n    }\n    goTo(point, down = true) {\n        return goTo(pointConversion(point), down, this);\n    }\n    goto(point, down = true) {\n        return goTo(pointConversion(point), down, this);\n    }\n    go_to(point, down = true) {\n        return goTo(pointConversion(point), down, this);\n    }\n    forward(distance, down = true) {\n        return forward(distance, down, this);\n    }\n    vec(vector, down = true) {\n        return vec(vector, down, this);\n    }\n    arc(angle, radius, down = true) {\n        return arc(angle, radius, down, this);\n    }\n    turnForward(angle, distance) {\n        return turnForward(angle, distance, this);\n    }\n    turnforward(angle, distance) {\n        return turnForward(angle, distance, this);\n    }\n    turn_forward(angle, distance) {\n        return turnForward(angle, distance, this);\n    }\n    turn(angle) {\n        return turn(angle, this);\n    }\n    right(angle) {\n        return turn(-angle, this);\n    }\n    left(angle) {\n        return turn(angle, this);\n    }\n    setAngle(angle) {\n        return setAngle(angle, this);\n    }\n    setangle(angle) {\n        return setAngle(angle, this);\n    }\n    set_angle(angle) {\n        return setAngle(angle, this);\n    }\n    flatGoTo(point, axis) {\n        return flatGoTo(pointConversion(point), axis, this);\n    }\n    flatgoto(point, axis) {\n        return flatGoTo(pointConversion(point), axis, this);\n    }\n    flat_goto(point, axis) {\n        return flatGoTo(pointConversion(point), axis, this);\n    }\n    closePath() {\n        return closePath(this);\n    }\n    closepath() {\n        return closePath(this);\n    }\n    close_path() {\n        return closePath(this);\n    }\n    translate(toPoint, fromPoint = [\n        0,\n        0\n    ]) {\n        return translate(pointConversion(toPoint), pointConversion(fromPoint), this);\n    }\n    rotate(angle, point) {\n        return rotate(angle, point ? pointConversion(point) : this.centroid, this);\n    }\n    scale(factor, point) {\n        point = point ? pointConversion(point) : this.centroid;\n        if (typeof factor === \"number\") factor = [\n            factor,\n            factor\n        ];\n        return scale(factor, point, this);\n    }\n    originate() {\n        return originate(this);\n    }\n    reverse() {\n        return reverse(this);\n    }\n    flip(axis) {\n        return flip(axis, this);\n    }\n    repeat(num) {\n        return repeat(num, this);\n    }\n    mirror() {\n        return mirror(this);\n    }\n    fillet(radius) {\n        return fillet(radius, this);\n    }\n    roundCorners(radius, all = false) {\n        return roundCorners(radius, all, this);\n    }\n    roundcorners(radius, all = false) {\n        return roundCorners(radius, all, this);\n    }\n    round_corners(radius, all = false) {\n        return roundCorners(radius, all, this);\n    }\n    thicken(thickness) {\n        return thicken(thickness, this);\n    }\n    copyPaste(num, transformations) {\n        return copyPaste(num, transformations, this);\n    }\n    copypaste(num, transformations) {\n        return copyPaste(num, transformations, this);\n    }\n    copy_paste(num, transformations) {\n        return copyPaste(num, transformations, this);\n    }\n    offset(distance, options = {\n    }) {\n        return offset(distance, options, this);\n    }\n    outline() {\n        return offset(0, {\n            endType: \"etClosedPolygon\"\n        }, this);\n    }\n    expand(distance) {\n        return offset(distance, {\n            endType: \"etClosedPolygon\"\n        }, this);\n    }\n    text(word) {\n        return text(word, this);\n    }\n    dogbone(radius, all = false) {\n        return dogbone(radius, all, this);\n    }\n    trim(start, end) {\n        return trim(start, end, this);\n    }\n    union() {\n        return this.overwrite(newUnion(this, arguments));\n    }\n    intersect() {\n        return this.overwrite(newIntersection(this, arguments));\n    }\n    difference() {\n        return this.overwrite(newDifference(this, arguments));\n    }\n    xor() {\n        return this.overwrite(newXor(this, arguments));\n    }\n    placeAlong(turtle) {\n        return placeAlong(turtle, this);\n    }\n    placealong(turtle) {\n        return placeAlong(turtle, this);\n    }\n    place_along(turtle) {\n        return placeAlong(turtle, this);\n    }\n    dashed(number) {\n        return dashed(number, this);\n    }\n    bezier(string) {\n        return bezier(string, this);\n    }\n    slide(angle, distance) {\n        return slide(angle, distance, this);\n    }\n    polylines(asArray = false, prec = 0) {\n        return polylines(asArray, prec, this);\n    }\n    getTabs() {\n        return getTabs(this);\n    }\n    gettabs() {\n        return getTabs(this);\n    }\n    get_tabs() {\n        return getTabs(this);\n    }\n    lSystem(args) {\n        return lSystem(args, this);\n    }\n    lsystem(args) {\n        return lSystem(args, this);\n    }\n    l_system(args) {\n        return lSystem(args, this);\n    }\n    transform(matrix) {\n        return transform(matrix, this);\n    }\n    get start() {\n        return point1(\"start\", this);\n    }\n    get end() {\n        return point1(\"end\", this);\n    }\n    get lt() {\n        return point1(\"lt\", this);\n    }\n    get lc() {\n        return point1(\"lc\", this);\n    }\n    get lb() {\n        return point1(\"lb\", this);\n    }\n    get ct() {\n        return point1(\"ct\", this);\n    }\n    get cc() {\n        return point1(\"cc\", this);\n    }\n    get cb() {\n        return point1(\"cb\", this);\n    }\n    get rt() {\n        return point1(\"rt\", this);\n    }\n    get rc() {\n        return point1(\"rc\", this);\n    }\n    get rb() {\n        return point1(\"rb\", this);\n    }\n    get centroid() {\n        return centroid(this);\n    }\n    get width() {\n        return width(this);\n    }\n    get height() {\n        return height(this);\n    }\n    get points() {\n        return points(this);\n    }\n    floodFill(color) {\n        return floodFill(color, this);\n    }\n    floodfill(color) {\n        return floodFill(color, this);\n    }\n    flood_fill(color) {\n        return floodFill(color, this);\n    }\n    group() {\n        return this.overwrite(group1(this, ...arguments));\n    }\n    flatten() {\n        return this.overwrite(flatten8(this));\n    }\n    getPathData(merge = true) {\n        let result = [];\n        const pls = this.polylines();\n        for(let i = 0; i < pls.length; i++){\n            for(let j = 0; j < pls[i].pts.length; j++){\n                let pt = pls[i].pts[j];\n                if (j === 0) result.push(`M ${pt.x} ${pt.y}`);\n                else result[result.length - 1] += `L ${pt.x} ${pt.y}`;\n            }\n        }\n        return merge ? result.join(\" \") : result;\n    }\n}\nfunction firstPathHelper(path1) {\n    const first = path1[0];\n    return Array.isArray(first) ? firstPathHelper(first) : first;\n}\nfunction pathMapHelper(path1, f) {\n    return Array.isArray(path1) ? path1.map((p)=>pathMapHelper(p, f)\n    ) : f(path1);\n}\nconst getIntraDist2 = (path1, i0, i1)=>getDistance(path1[i0], path1[i1])\n;\nconst getIntraAngle2 = (path1, i0, i1)=>getAngle(path1[i0], path1[i1])\n;\nfunction roundCornersPath(radius, all, path1) {\n    const l = path1.points.length;\n    if (l < 3) return path1;\n    const newTurtle = new Turtle1();\n    const numPoints = path1.points.length;\n    const { x , y  } = path1.points[0];\n    newTurtle.translate({\n        x,\n        y\n    }, newTurtle.start);\n    let remove = 0;\n    let firstLose = 0;\n    for(let i = 0; i < numPoints - 2; i++){\n        const dist0 = getIntraDist2(path1.points, i, i + 1);\n        const dist1 = getIntraDist2(path1.points, i + 1, i + 2);\n        const ang0 = getIntraAngle2(path1.points, i, i + 1);\n        const ang1 = getIntraAngle2(path1.points, i + 1, i + 2);\n        let ang = ang1 - ang0;\n        if (Math.abs(ang) < 3 && !all) {\n            newTurtle.goTo(path1.points[i + 1]);\n            if (i === path1.points.length - 3) {\n                newTurtle.goTo(path1.points[i + 2]);\n            }\n            remove = 0;\n            continue;\n        }\n        let lose = Math.abs(Math.tan(ang / 360 * Math.PI) * radius);\n        if (i === 0) firstLose = lose;\n        newTurtle.setAngle(ang0);\n        newTurtle.forward(dist0 - lose - remove);\n        if (ang > 180) ang -= 360;\n        else if (ang < -180) ang += 360;\n        arc(ang, radius, true, newTurtle);\n        if (i === path1.points.length - 3) {\n            if (isClosed(path1)) {\n                const dist21 = getIntraDist2(path1.points, 0, 1);\n                const ang2 = getIntraAngle2(path1.points, 0, 1);\n                let ang3 = ang2 - ang1;\n                const lose2 = Math.abs(Math.tan(ang3 / 360 * Math.PI) * radius);\n                newTurtle.path = newTurtle.pointFilter((x1, i1)=>i1 !== 0\n                );\n                newTurtle.forward(dist1 - lose - lose2);\n                if (ang3 > 180) ang3 -= 360;\n                else if (ang3 < -180) ang3 += 360;\n                arc(ang3, radius, true, newTurtle);\n                newTurtle.forward(dist21 - lose2 - firstLose);\n            } else {\n                newTurtle.forward(dist1 - lose);\n            }\n        }\n        remove = lose;\n    }\n    return newTurtle.path;\n}\nfunction roundCorners(radius, all, turtle) {\n    turtle.path = turtle.pathMap((p)=>roundCornersPath(radius, all, p)\n    );\n    return turtle;\n}\nfunction overlap1(p0, p1) {\n    return 0.0000001 > Math.abs(p0.x - p1.x) + Math.abs(p0.y - p1.y);\n}\nfunction deepFlatten(array) {\n    var result = [];\n    array.forEach(function(elem) {\n        if (Array.isArray(elem)) {\n            result = result.concat(deepFlatten(elem));\n        } else {\n            result.push(elem);\n        }\n    });\n    return result;\n}\nfunction thicken(distance, turtle) {\n    const turtles = deepFlatten(turtle.pathMap((p)=>new Turtle1({\n            angle: 0,\n            path: [\n                p\n            ]\n        })\n    ));\n    turtles.forEach((t)=>{\n        const endType = overlap1(t.start, t.end) ? \"etClosedLine\" : \"etOpenButt\";\n        t.offset(distance / 2, {\n            endType,\n            jointType: \"jtMiter\"\n        });\n    });\n    turtle.path = group1(...turtles).path;\n    return turtle;\n}\nconst getAngle1 = (p1, p2)=>180 / Math.PI * Math.atan2(p2.y - p1.y, p2.x - p1.x)\n;\nconst getIntraDist1 = (path1, i0, i1)=>getDistance1(path1[i0], path1[i1])\n;\nconst getIntraAngle1 = (path1, i0, i1)=>getAngle1(path1[i0], path1[i1])\n;\nconst isClosed1 = ({ points: points1  })=>{\n    const path1 = points1;\n    const EPSILON = 0.00000001;\n    const firstPoint = path1[0];\n    const lastPoint = path1[path1.length - 1];\n    const xDelta = Math.abs(firstPoint.x - lastPoint.x);\n    const yDelta = Math.abs(firstPoint.y - lastPoint.y);\n    const closed = xDelta < 0.00000001 && yDelta < 0.00000001;\n    return closed;\n};\nfunction dogbonePath(radius, all, path1) {\n    const l = path1.points.length;\n    if (l < 3) return path1;\n    const newTurtle = new Turtle1();\n    const numPoints = path1.points.length;\n    const { x , y  } = path1.points[0];\n    newTurtle.translate({\n        x,\n        y\n    }, newTurtle.start);\n    let remove = 0;\n    let firstLose = 0;\n    for(let i = 0; i < numPoints - 2; i++){\n        const dist0 = getIntraDist1(path1.points, i, i + 1);\n        const ang0 = getIntraAngle1(path1.points, i, i + 1);\n        const ang1 = getIntraAngle1(path1.points, i + 1, i + 2);\n        let ang = ang1 - ang0;\n        if (ang > 180) ang -= 360;\n        else if (ang < -180) ang += ang;\n        if (Math.abs(ang) < 3 && !all) {\n            newTurtle.goTo(path1.points[i + 1]);\n            if (i === path1.points.length - 3) {\n                newTurtle.goTo(path1.points[i + 2]);\n            }\n            remove = 0;\n            continue;\n        }\n        let lose = Math.abs(2 * radius * Math.sin(ang * Math.PI / 180 / 2));\n        if (i === 0) firstLose = lose;\n        newTurtle.forward(dist0 - lose - remove).left(-ang / 2).arc(2 * ang, radius).left(-ang / 2);\n        remove = lose;\n        if (i === path1.points.length - 3) {\n            const dist1 = getIntraDist1(path1.points, i + 1, i + 2);\n            if (isClosed1(path1)) {\n                const dist21 = getIntraDist1(path1.points, 0, 1);\n                const ang2 = getIntraAngle1(path1.points, 0, 1);\n                let ang3 = ang2 - ang1;\n                const lose2 = Math.abs(2 * radius * Math.sin(ang3 * Math.PI / 180 / 2));\n                newTurtle.path = newTurtle.pointFilter((x1, i1)=>i1 !== 0\n                );\n                newTurtle.forward(dist1 - lose - lose2);\n                newTurtle.left(-ang3 / 2).arc(2 * ang3, radius).left(-ang3 / 2).forward(dist21 - lose2 - firstLose);\n            } else {\n                newTurtle.forward(dist1 - lose);\n            }\n        }\n    }\n    return newTurtle.path;\n}\nfunction dogbone(radius, all, turtle) {\n    turtle.path = turtle.pathMap((p)=>dogbonePath(radius, all, p)\n    );\n    return turtle;\n}\nconst directives = new WeakMap();\nconst directive = (f)=>(...args)=>{\n        const d = f(...args);\n        directives.set(d, true);\n        return d;\n    }\n;\nconst isDirective = (o)=>{\n    return typeof o === \"function\" && directives.has(o);\n};\nconst isCEPolyfill = typeof window !== \"undefined\" && window.customElements != null && window.customElements.polyfillWrapFlushCallback !== void 0;\nconst reparentNodes = (container, start, end = null, before = null)=>{\n    while(start !== end){\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\nconst removeNodes = (container, start, end = null)=>{\n    while(start !== end){\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\nconst noChange = {\n};\nconst nothing = {\n};\nconst marker = `{{lit-${String(Math.random()).slice(2)}}}`;\nconst nodeMarker = `<!--${marker}-->`;\nconst markerRegex = new RegExp(`${marker}|${nodeMarker}`);\nconst boundAttributeSuffix = \"$lit$\";\nclass Template {\n    constructor(result, element5){\n        this.parts = [];\n        this.element = element5;\n        const nodesToRemove = [];\n        const stack = [];\n        const walker = document.createTreeWalker(element5.content, 133, null, false);\n        let lastPartIndex = 0;\n        let index1 = -1;\n        let partIndex = 0;\n        const { strings: strings5 , values: { length: length1  }  } = result;\n        while(partIndex < length1){\n            const node = walker.nextNode();\n            if (node === null) {\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index1++;\n            if (node.nodeType === 1) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length: length21  } = attributes;\n                    let count = 0;\n                    for(let i = 0; i < length21; i++){\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while((count--) > 0){\n                        const stringForPart = strings5[partIndex];\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({\n                            type: \"attribute\",\n                            index: index1,\n                            name,\n                            strings: statics\n                        });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === \"TEMPLATE\") {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            } else if (node.nodeType === 3) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings2 = data.split(markerRegex);\n                    const lastIndex = strings2.length - 1;\n                    for(let i = 0; i < lastIndex; i++){\n                        let insert1;\n                        let s = strings2[i];\n                        if (s === \"\") {\n                            insert1 = createMarker();\n                        } else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] + match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert1 = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert1, node);\n                        this.parts.push({\n                            type: \"node\",\n                            index: ++index1\n                        });\n                    }\n                    if (strings2[lastIndex] === \"\") {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    } else {\n                        node.data = strings2[lastIndex];\n                    }\n                    partIndex += lastIndex;\n                }\n            } else if (node.nodeType === 8) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    if (node.previousSibling === null || index1 === lastPartIndex) {\n                        index1++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index1;\n                    this.parts.push({\n                        type: \"node\",\n                        index: index1\n                    });\n                    if (node.nextSibling === null) {\n                        node.data = \"\";\n                    } else {\n                        nodesToRemove.push(node);\n                        index1--;\n                    }\n                    partIndex++;\n                } else {\n                    let i = -1;\n                    while((i = node.data.indexOf(marker, i + 1)) !== -1){\n                        this.parts.push({\n                            type: \"node\",\n                            index: -1\n                        });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        for (const n of nodesToRemove){\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix)=>{\n    const index4 = str.length - suffix.length;\n    return index4 >= 0 && str.slice(index4) === suffix;\n};\nconst isTemplatePartActive = (part)=>part.index !== -1\n;\nconst createMarker = ()=>document.createComment(\"\")\n;\nconst lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\nclass TemplateInstance {\n    constructor(template, processor, options2){\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options2;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts){\n            if (part !== void 0) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part1 of this.__parts){\n            if (part1 !== void 0) {\n                part1.commit();\n            }\n        }\n    }\n    _clone() {\n        const fragment = isCEPolyfill ? this.template.element.content.cloneNode(true) : document.importNode(this.template.element.content, true);\n        const stack1 = [];\n        const parts2 = this.template.parts;\n        const walker1 = document.createTreeWalker(fragment, 133, null, false);\n        let partIndex1 = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker1.nextNode();\n        while(partIndex1 < parts2.length){\n            part = parts2[partIndex1];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(void 0);\n                partIndex1++;\n                continue;\n            }\n            while(nodeIndex < part.index){\n                nodeIndex++;\n                if (node.nodeName === \"TEMPLATE\") {\n                    stack1.push(node);\n                    walker1.currentNode = node.content;\n                }\n                if ((node = walker1.nextNode()) === null) {\n                    walker1.currentNode = stack1.pop();\n                    node = walker1.nextNode();\n                }\n            }\n            if (part.type === \"node\") {\n                const part2 = this.processor.handleTextExpression(this.options);\n                part2.insertAfterNode(node.previousSibling);\n                this.__parts.push(part2);\n            } else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex1++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\nconst policy = window.trustedTypes && trustedTypes.createPolicy(\"lit-html\", {\n    createHTML: (s)=>s\n});\nconst commentMarker = ` ${marker} `;\nclass TemplateResult {\n    constructor(strings1, values, type, processor1){\n        this.strings = strings1;\n        this.values = values;\n        this.type = type;\n        this.processor = processor1;\n    }\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html2 = \"\";\n        let isCommentBinding = false;\n        for(let i = 0; i < l; i++){\n            const s = this.strings[i];\n            const commentOpen = s.lastIndexOf(\"<!--\");\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) && s.indexOf(\"-->\", commentOpen + 1) === -1;\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                html2 += s + (isCommentBinding ? commentMarker : nodeMarker);\n            } else {\n                html2 += s.substr(0, attributeMatch.index) + attributeMatch[1] + attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] + marker;\n            }\n        }\n        html2 += this.strings[l];\n        return html2;\n    }\n    getTemplateElement() {\n        const template1 = document.createElement(\"template\");\n        let value = this.getHTML();\n        if (policy !== void 0) {\n            value = policy.createHTML(value);\n        }\n        template1.innerHTML = value;\n        return template1;\n    }\n}\nclass SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template1 = super.getTemplateElement();\n        const content = template1.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template1;\n    }\n}\nconst isPrimitive = (value)=>{\n    return value === null || !(typeof value === \"object\" || typeof value === \"function\");\n};\nconst isIterable = (value)=>{\n    return Array.isArray(value) || !!(value && value[Symbol.iterator]);\n};\nclass AttributeCommitter {\n    constructor(element1, name3, strings2){\n        this.dirty = true;\n        this.element = element1;\n        this.name = name3;\n        this.strings = strings2;\n        this.parts = [];\n        for(let i = 0; i < strings2.length - 1; i++){\n            this.parts[i] = this._createPart();\n        }\n    }\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings3 = this.strings;\n        const l = strings3.length - 1;\n        const parts2 = this.parts;\n        if (l === 1 && strings3[0] === \"\" && strings3[1] === \"\") {\n            const v = parts2[0].value;\n            if (typeof v === \"symbol\") {\n                return String(v);\n            }\n            if (typeof v === \"string\" || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text1 = \"\";\n        for(let i1 = 0; i1 < l; i1++){\n            text1 += strings3[i1];\n            const part = parts2[i1];\n            if (part !== void 0) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text1 += typeof v === \"string\" ? v : String(v);\n                } else {\n                    for (const t of v){\n                        text1 += typeof t === \"string\" ? t : String(t);\n                    }\n                }\n            }\n        }\n        text1 += strings3[l];\n        return text1;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\nclass AttributePart {\n    constructor(committer){\n        this.value = void 0;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while(isDirective(this.value)){\n            const directive2 = this.value;\n            this.value = noChange;\n            directive2(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\nclass NodePart {\n    constructor(options1){\n        this.value = void 0;\n        this.__pendingValue = void 0;\n        this.options = options1;\n    }\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while(isDirective(this.__pendingValue)){\n            const directive2 = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive2(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        } else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        } else if (value instanceof Node) {\n            this.__commitNode(value);\n        } else if (isIterable(value)) {\n            this.__commitIterable(value);\n        } else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        } else {\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? \"\" : value;\n        const valueAsString = typeof value === \"string\" ? value : String(value);\n        if (node === this.endNode.previousSibling && node.nodeType === 3) {\n            node.data = valueAsString;\n        } else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template1 = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance && this.value.template === template1) {\n            this.value.update(value.values);\n        } else {\n            const instance = new TemplateInstance(template1, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        const itemParts = this.value;\n        let partIndex1 = 0;\n        let itemPart;\n        for (const item of value){\n            itemPart = itemParts[partIndex1];\n            if (itemPart === void 0) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex1 === 0) {\n                    itemPart.appendIntoPart(this);\n                } else {\n                    itemPart.insertAfterPart(itemParts[partIndex1 - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex1++;\n        }\n        if (partIndex1 < itemParts.length) {\n            itemParts.length = partIndex1;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\nclass BooleanAttributePart {\n    constructor(element2, name1, strings3){\n        this.value = void 0;\n        this.__pendingValue = void 0;\n        if (strings3.length !== 2 || strings3[0] !== \"\" || strings3[1] !== \"\") {\n            throw new Error(\"Boolean attributes can only contain a single expression\");\n        }\n        this.element = element2;\n        this.name = name1;\n        this.strings = strings3;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while(isDirective(this.__pendingValue)){\n            const directive2 = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive2(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, \"\");\n            } else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\nclass PropertyCommitter extends AttributeCommitter {\n    constructor(element3, name2, strings4){\n        super(element3, name2, strings4);\n        this.single = strings4.length === 2 && strings4[0] === \"\" && strings4[1] === \"\";\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nclass PropertyPart extends AttributePart {\n}\nlet eventOptionsSupported = false;\n(()=>{\n    try {\n        const options2 = {\n            get capture () {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener(\"test\", options2, options2);\n        window.removeEventListener(\"test\", options2, options2);\n    } catch (_e) {\n    }\n})();\nclass EventPart {\n    constructor(element4, eventName, eventContext){\n        this.value = void 0;\n        this.__pendingValue = void 0;\n        this.element = element4;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e)=>this.handleEvent(e)\n        ;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while(isDirective(this.__pendingValue)){\n            const directive2 = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive2(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null || oldListener != null && (newListener.capture !== oldListener.capture || newListener.once !== oldListener.once || newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === \"function\") {\n            this.value.call(this.eventContext || this.element, event);\n        } else {\n            this.value.handleEvent(event);\n        }\n    }\n}\nconst getOptions = (o)=>o && (eventOptionsSupported ? {\n        capture: o.capture,\n        passive: o.passive,\n        once: o.once\n    } : o.capture)\n;\nclass DefaultTemplateProcessor {\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === \".\") {\n            const committer2 = new PropertyCommitter(element, name.slice(1), strings);\n            return committer2.parts;\n        }\n        if (prefix === \"@\") {\n            return [\n                new EventPart(element, name.slice(1), options.eventContext)\n            ];\n        }\n        if (prefix === \"?\") {\n            return [\n                new BooleanAttributePart(element, name.slice(1), strings)\n            ];\n        }\n        const committer1 = new AttributeCommitter(element, name, strings);\n        return committer1.parts;\n    }\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nconst defaultTemplateProcessor = new DefaultTemplateProcessor();\nfunction templateFactory(result1) {\n    let templateCache = templateCaches.get(result1.type);\n    if (templateCache === void 0) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result1.type, templateCache);\n    }\n    let template1 = templateCache.stringsArray.get(result1.strings);\n    if (template1 !== void 0) {\n        return template1;\n    }\n    const key = result1.strings.join(marker);\n    template1 = templateCache.keyString.get(key);\n    if (template1 === void 0) {\n        template1 = new Template(result1, result1.getTemplateElement());\n        templateCache.keyString.set(key, template1);\n    }\n    templateCache.stringsArray.set(result1.strings, template1);\n    return template1;\n}\nconst templateCaches = new Map();\nconst parts = new WeakMap();\nconst render = (result1, container, options3)=>{\n    let part = parts.get(container);\n    if (part === void 0) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({\n            templateFactory\n        }, options3)));\n        part.appendInto(container);\n    }\n    part.setValue(result1);\n    part.commit();\n};\nif (typeof window !== \"undefined\") {\n    (window[\"litHtmlVersions\"] || (window[\"litHtmlVersions\"] = [])).push(\"1.3.0\");\n}\nconst html = (strings6, ...values1)=>new TemplateResult(strings6, values1, \"html\", defaultTemplateProcessor)\n;\nconst svg = (strings6, ...values1)=>new SVGTemplateResult(strings6, values1, \"svg\", defaultTemplateProcessor)\n;\nconst last = (arr)=>arr[arr.length - 1]\n;\nfunction drawTurtle1(turtle, { showTurtles =true , showPoints =false , filterConstruction =false  } = {\n}) {\n    const paths = turtle.pathMap((x, i1)=>drawPath(x, showPoints, filterConstruction)\n    );\n    return showTurtles ? [\n        ...paths,\n        drawTurtleHead(turtle)\n    ] : paths;\n}\nfunction drawTurtleHead(turtle) {\n    const points1 = turtle.points;\n    const lastPoint = last(points1);\n    const angle = turtle.angle;\n    const drawingViews = document.getElementById(\"inner-svg-view\");\n    const w = Number(drawingViews.getAttribute(\"width\").replace(\"px\", \"\"));\n    const viewBox = drawingViews.getAttribute(\"viewBox\").split(\" \");\n    const vw = Number(viewBox[2]);\n    const headScale = vw / w;\n    const turtleSize = 12;\n    return svg`\\n    <g transform=\"scale(1, -1)\">\\n      <polyline\\n          class=\"scale-with-viewer\"\\n          fill = \"orange\"\\n          vector-effect=\"non-scaling-stroke\"\\n          points=\"\\n            ${lastPoint.x - 12 / 2}, ${lastPoint.y - 12} \\n            ${lastPoint.x}, ${lastPoint.y} \\n            ${lastPoint.x + 12 / 2}, ${lastPoint.y - 12}\\n          \"\\n          transform=\"\\n            rotate(${angle - 90}) \\n            scale(${headScale})\\n          \"\\n          transform-origin=\"${lastPoint.x} ${lastPoint.y}\"/>\\n    </g>\\n  `;\n}\nconst drawPath = (path1, showPoints, filterConstruction)=>{\n    if (path1.construction && filterConstruction) return \"\";\n    let points1 = path1.points.reduce((acc, point2)=>acc + ` ${point2.x},${point2.y}`\n    , \" \");\n    let polyline1 = svg`\\n    <g transform=\"scale(1, -1)\">\\n      <polyline \\n        points=\"${points1}\" \\n        fill=${path1.fillColor} \\n        stroke=${path1.strokeColor}\\n        stroke-width=\"${path1.strokeWidth}px\"\\n        stroke-dasharray=\"${path1.dashed ? path1.dashed : \"none\"}\"\\n        stroke-linejoin=${path1.linejoin}\\n        stroke-linecap=${path1.linecap}\\n        vector-effect=\"non-scaling-stroke\"/>\\n      ${showPoints ? path1.points.map((p)=>svg`\\n            <circle \\n              cx=\"${p.x}\" \\n              cy=\"${p.y}\" \\n              r=\"0.05\" \\n              stroke=\"black\" \\n              stroke-width=\"0\" \\n              fill=\"red\"/>\\n          `\n    ) : \"\"}\\n    </g>\\n  `;\n    return polyline1;\n};\nexport { Turtle1 as Turtle, group1 as group, drawTurtle1 as drawTurtle };\n\n", "import { dispatch } from \"./dispatch.js\";\nimport { html, svg } from \"../_snowpack/pkg/lit-html.js\";\nimport { Turtle } from \"../libs/gram-js.js\";\nimport \"https://leomcelroy.com/widgets/code-mirror.js\";\nimport { files } from \"./components-names.js\";\nimport { downloadSVG, downloadText, downloadGerber } from \"./events/download.js\"\nimport { drawImportItems } from \"./views/drawImportItems.js\";\nimport { renderPreviewFootprint } from \"./views/renderPreviewFootprint.js\";\nimport { svgViewer } from \"./views/svgViewer.js\";\nimport { renderFootprint } from \"./views/renderFootprint.js\";\n\nexport function view(state) {\n\treturn html`\n\t\t<div class=\"top-menu\">\n\t\t\t<div class=\"left\">\n\t\t\t\t<button\n\t\t\t\t\t@click=${() => dispatch(\"RUN\")}>\n\t\t\t\t\trun (shift + enter)\n\t\t\t\t</button>\n\t\t\t\t<div class=\"seperator\"></div>\n\t\t\t\t<div class=\"dropdown-container\">\n\t\t\t\t \timport\n\t\t\t\t \t<div class=\"dropdown-content\">\n\t\t\t\t \t\t${drawImportItems(files)}\n\t\t\t\t \t</div>\n\t\t\t\t </div>\n\t\t\t\t <div class=\"seperator\"></div>\n\t\t\t\t <div class=\"dropdown-container\">\n\t\t\t\t\tdownload\n\t\t\t\t\t<div class=\"dropdown-content dropdown-content\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t@click=${() => downloadSVG(state)}>\n\t\t\t\t\t\t\tsvg\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t@click=${() => downloadText(\"anon.js\", state.codemirror.view.state.doc.toString())}>\n\t\t\t\t\t\t\tjs\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t@click=${() => downloadGerber(state)}>\n\t\t\t\t\t\t\tgerber\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"seperator\"></div>\n\t\t\t\t<div class=\"dropdown-container\">\n\t\t\t\t\tdrawing\n\t\t\t\t\t<div class=\"dropdown-content dropdown-content\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"center-button\"\n\t\t\t\t\t\t\t@click=${() => {\n    \t\t\t\t\t\t\tstate.panZoomParams.setScaleXY(state.limits);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tcenter\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>handles</span>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked=${state.viewHandles}\n\t\t\t\t\t\t\t\t@change=${(e) => {\n\t\t\t\t\t\t\t\t\tstate.viewHandles = e.target.checked;\n\t\t\t\t\t\t\t\t\tdispatch(\"RENDER\");\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclass=\"handles-checkbox\">\n\t\t\t\t\t\t\t</input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>grid</span>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked=${state.grid}\n\t\t\t\t\t\t\t\t@change=${(e) => {\n\t\t\t\t\t\t\t\t\tstate.grid = e.target.checked;\n\t\t\t\t\t\t\t\t\tdispatch(\"RENDER\");\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>grid size:</span>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tstep=\"0.005\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tvalue=${state.gridSize}\n\t\t\t\t\t\t\t\t@change=${e => {\n\t\t\t\t\t\t\t\t\tstate.gridSize = Number(e.target.value);\n\t\t\t\t\t\t\t\t\tdispatch(\"RENDER\");\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t</input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div style=\"display: flex; height: 100%; min-height: 100%; max-height: 100%;\">\n\t\t\t<code-mirror id=\"code-editor\" style=\"overflow: scroll;\"></code-mirror>\n\t\t\t<div class=\"right-side\">\n\t\t\t\t${svgViewer(state)}\n\t\t\t\t<div class=\"footprint-toolbox\">${state.footprints.map(renderFootprint)}</div>\n\t\t\t\t${state.previewFootprint ? renderPreviewFootprint(...state.previewFootprint) : \"\"}\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"vertical-bar\"></div>\n\t`\n}\n\n", "export const files = [\n  \"./library/connectors/ESP8266_12E.json\",\n  \"./library/connectors/header_FTDI.json\",\n  \"./library/connectors/power_65mm.json\",\n  \"./library/connectors/ESP32_CAM.json\",\n  \"./library/connectors/USB_A_plug.json\",\n  \"./library/connectors/header_i0.json\",\n  \"./library/connectors/header_serial_reverse.json\",\n  \"./library/connectors/header_4.json\",\n  \"./library/connectors/header_signal.json\",\n  \"./library/connectors/MTA_i0.json\",\n  \"./library/connectors/HM11.json\",\n  \"./library/connectors/header_MFRC522.json\",\n  \"./library/connectors/header_serial_reverse_5V.json\",\n  \"./library/connectors/USB_mini_B.json\",\n  \"./library/connectors/ESC.json\",\n  \"./library/connectors/MTA_PS2.json\",\n  \"./library/connectors/header_APA.json\",\n  \"./library/connectors/MTA_ICP.json\",\n  \"./library/connectors/stereo_2_5mm.json\",\n  \"./library/connectors/header_VL53L1X_3415.json\",\n  \"./library/connectors/Molex_serial.json\",\n  \"./library/connectors/header_SWD_4_1.json\",\n  \"./library/connectors/ESP_01.json\",\n  \"./library/connectors/HCSR04.json\",\n  \"./library/connectors/header_SWD_4_05.json\",\n  \"./library/connectors/ESP32_WROOM.json\",\n  \"./library/connectors/header_serial.json\",\n  \"./library/connectors/header_PDI.json\",\n  \"./library/connectors/I2C4x1v.json\",\n  \"./library/connectors/header_power.json\",\n  \"./library/connectors/MTA_serial.json\",\n  \"./library/connectors/header_LSM6DS33_2736.json\",\n  \"./library/connectors/MTA_2.json\",\n  \"./library/connectors/MTA_3.json\",\n  \"./library/connectors/header_LCD.json\",\n  \"./library/connectors/screw_terminal_2.json\",\n  \"./library/connectors/HCSR501.json\",\n  \"./library/connectors/screw_terminal_i0.json\",\n  \"./library/connectors/header_unipolar_stepper.json\",\n  \"./library/connectors/screw_terminal_power.json\",\n  \"./library/connectors/header_nRF24L01.json\",\n  \"./library/connectors/header_serial_reverse_3V3.json\",\n  \"./library/connectors/MTA_power.json\",\n  \"./library/connectors/MTA_4.json\",\n  \"./library/connectors/RCWL0516.json\",\n  \"./library/connectors/ESP_WROOM_02D.json\",\n  \"./library/connectors/RN4871.json\",\n  \"./library/connectors/header_I2C.json\",\n  \"./library/connectors/header_SWD.json\",\n  \"./library/connectors/header_servo.json\",\n  \"./library/connectors/microSD.json\",\n  \"./library/connectors/header_4H.json\",\n  \"./library/connectors/header_UPDI.json\",\n  \"./library/connectors/I2C4x1i.json\",\n  \"./library/connectors/I2C4x1h.json\",\n  \"./library/connectors/header_ISP.json\",\n  \"./library/connectors/header_NEO_6M.json\",\n  \"./library/connectors/MTA_5.json\",\n  \"./library/connectors/header_6.json\",\n  \"./library/connectors/header_UPDI_reverse.json\",\n  \"./library/connectors/header_bus.json\",\n  \"./library/connectors/TFT8x1v.json\",\n  \"./library/connectors/header_2H.json\",\n  \"./library/connectors/header_ATP.json\",\n  \"./library/switches/button_6mm.json\",\n  \"./library/switches/slide_switch.json\",\n  \"./library/diodes_transistors_regulators_sensors/D_1206.json\",\n  \"./library/diodes_transistors_regulators_sensors/mic_SPM1437.json\",\n  \"./library/diodes_transistors_regulators_sensors/LED_1206.json\",\n  \"./library/diodes_transistors_regulators_sensors/NMOSFET_TO252AA.json\",\n  \"./library/diodes_transistors_regulators_sensors/regulator_SOT223.json\",\n  \"./library/diodes_transistors_regulators_sensors/regulator_SOT23.json\",\n  \"./library/diodes_transistors_regulators_sensors/VL53L1X.json\",\n  \"./library/diodes_transistors_regulators_sensors/H_bridge_SM8.json\",\n  \"./library/diodes_transistors_regulators_sensors/SPG08P4HM4H.json\",\n  \"./library/diodes_transistors_regulators_sensors/Hall_SOT23.json\",\n  \"./library/diodes_transistors_regulators_sensors/VEML6040.json\",\n  \"./library/diodes_transistors_regulators_sensors/phototransistor_1206.json\",\n  \"./library/diodes_transistors_regulators_sensors/LED_RGB.json\",\n  \"./library/diodes_transistors_regulators_sensors/accel_MXD6235M.json\",\n  \"./library/diodes_transistors_regulators_sensors/ADXL343.json\",\n  \"./library/diodes_transistors_regulators_sensors/mic_SPU0414HR5H.json\",\n  \"./library/diodes_transistors_regulators_sensors/D_SOD_123.json\",\n  \"./library/diodes_transistors_regulators_sensors/LED_3014_1100.json\",\n  \"./library/diodes_transistors_regulators_sensors/A4953_SOICN.json\",\n  \"./library/diodes_transistors_regulators_sensors/NMOSFET_SOT23.json\",\n  \"./library/diodes_transistors_regulators_sensors/phototransistor_PLCC2.json\",\n  \"./library/diodes_transistors_regulators_sensors/PMOSFET_SOT23.json\",\n  \"./library/diodes_transistors_regulators_sensors/DRV8428_HTSSOP.json\",\n  \"./library/diodes_transistors_regulators_sensors/CMM4030D261I2STR.json\",\n  \"./library/crystals_and_resonators/XTAL_CSM_7.json\",\n  \"./library/crystals_and_resonators/XTAL_NX5032GA.json\",\n  \"./library/crystals_and_resonators/XTAL_EFOBM.json\",\n  \"./library/discretes/R_0402.json\",\n  \"./library/discretes/ST4EB.json\",\n  \"./library/discretes/C_1206.json\",\n  \"./library/discretes/R_1206.json\",\n  \"./library/discretes/choke.json\",\n  \"./library/discretes/L_1210.json\",\n  \"./library/discretes/C_FND.json\",\n  \"./library/ICs/CBA.json\",\n  \"./library/ICs/SAMD21E.json\",\n  \"./library/ICs/AVRDB28.json\",\n  \"./library/ICs/FT230XS.json\",\n  \"./library/ICs/ATtiny1614.json\",\n  \"./library/ICs/fab.json\",\n  \"./library/ICs/ATtiny44_SOICN.json\",\n  \"./library/ICs/ATxmegaE5_TQFP.json\",\n  \"./library/ICs/op_amp_SOICN.json\",\n  \"./library/ICs/ATtiny45_SOIC.json\",\n  \"./library/ICs/ATmega88_TQFP.json\",\n  \"./library/ICs/SAMD11D.json\",\n  \"./library/ICs/TRC102.json\",\n  \"./library/ICs/ATtiny412.json\",\n  \"./library/ICs/ATmega644_TQFP.json\",\n  \"./library/ICs/op_amp_SOT23_5.json\",\n  \"./library/ICs/SAMD11C.json\",\n  \"./library/ICs/ATtiny3216.json\"\n]", "export function downloadSVG(state) {\n\n    const serializer = new XMLSerializer();\n    const svg = document.querySelector(\"svg\").cloneNode(true);\n    const toRemove = svg.querySelectorAll(\".no-download\");\n    for (const item of toRemove) {\n      item.remove();\n    }\n\n    const tg = svg.querySelector(\".transform-group\");\n    tg.style.transformOrigin = \"\";\n    tg.style.transform = \"\";\n    //const sg = svg.querySelector(\".transform-group\");\n    //sg.setAttribute(\"transform\", \"scale(1, -1)\");\n    //tg.transform = \"scale(1, -1)\";\n    // tg.style.transformOrigin = `${0}px ${0}px`;\n    // tg.style.transform = \"translate(\" + 0 + \"px, \" + 0 + \"px) scale(\" + 1 + \")\";\n\n    const width = (state.limits.x[1] - state.limits.x[0]);\n    const height = (state.limits.y[1] - state.limits.y[0]);\n\n    tg.setAttribute(\"transform\", `scale(1, -1) translate(0, ${-(state.limits.y[0]+state.limits.y[1])})`);\n    svg.setAttribute(\"style\", \"\");\n    svg.setAttribute(\"width\", `${width*state.mm_per_unit}mm`);\n    svg.setAttribute(\"height\", `${height*state.mm_per_unit}mm`);\n    svg.setAttribute(\"viewBox\", `${state.limits.x[0]} ${state.limits.y[0]} ${width} ${height}`);\n    svg.setAttributeNS(\n      \"http://www.w3.org/2000/xmlns/\",\n      \"xmlns:xlink\",\n      \"http://www.w3.org/1999/xlink\"\n    );\n\n    const source = serializer.serializeToString(svg);\n    const svgUrl = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n\n    // make download link\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = svgUrl;\n    downloadLink.download = `download.svg`;\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n\n    // clean up\n    document.body.removeChild(downloadLink);\n  }\n\n function format(x) {\n   var s = x.toFixed(6)\n   s = s.substr(0,s.length-7)+s.substr(-6,6)\n   return s\n }\n\nexport function downloadGerber(state) {\n  const layers = state.storedPCB.layers;\n\n  // console.log(layers);\n  let str = ''\n  str += \"%MOIN*%\\n\" // inch units\n  str += \"%LPD*%\\n\" // layer dark\n  str += \"%FSLAX66Y66*%\\n\" // format absolute 6.6\n  str += \"G01*\\n\" // linear interpolation\n\n\n  const front_copper = layers[\"F.Cu\"];\n  const strs = front_copper.polylines().map( (x) => {\n    const { pts } = x;\n    let ptsString = pts.reduce((acc, cur, i) => `${acc}X${format(cur.x)}Y${format(cur.y)}D0${i === 0 ? 2 : 1}*\\n`, \"G36*\\n\")\n    ptsString += \"G37*\\n\";\n\n    return ptsString;\n  });\n\n  str += strs.join(\"\") + \"M02*\";\n\n  downloadText(\"anon.gerber\", str);\n}\n\nexport function downloadText(filename, text) {\n  const blob = new Blob([text], { type: \"text/plain\" });\n\n  var link = document.createElement(\"a\"); // Or maybe get it from the current document\n  link.href = URL.createObjectURL(blob);\n  link.download = `${filename}`;\n  link.click();\n  URL.revokeObjectURL(link);\n}\n", "import { html, svg } from \"../../_snowpack/pkg/lit-html.js\";\nimport { dispatch } from \"../dispatch.js\";\n\nexport const drawImportItems = (files) => files.map(x => x.slice(10)).map( x => html`\n  <div class=\"import-item\" @mousedown=${async (e) => {\n    const res = await fetch(`components/${x}`);\n    const text = await res.text();\n    dispatch(\"ADD_IMPORT\", { text, name: e.target.innerText.split(\"/\")[1].split(\".\")[0] });\n  }}>${x}</div>\n`)", "import { html, svg } from \"../../_snowpack/pkg/lit-html.js\";\n\nexport const renderPreviewFootprint = ([name, footprint, svgView], pos) => {\n  // <svg width=\"30\" height=\"30\">\n  //  <circle cx=\"15\" cy=\"15\" r=\"10\" stroke=\"grey\" stroke-width=\"4\" fill=\"yellow\" />\n  // </svg>\n\n  // <div class=\"footprint-item-icon\" data-index=${i} ></div>\n\n  const [ x, y ] = pos;\n  return html`\n    <style>\n      .path-footprint-dragged {\n        fill: black;\n      }\n    </style>\n\n    <svg \n      style=\"position: absolute; left: ${x}; top: ${y}; transform: translate(-50%, -50%);\"\n      width=\"50px\"\n      height=\"50px\">\n      <path\n          class=\"path-footprint-dragged\" \n          d=\"${svgView.getPathData()}\"\n          fill-rule=\"nonzero\"\n          />\n    </svg>\n\n  `\n}", "import { html, svg } from \"../../_snowpack/pkg/lit-html.js\";\n\nconst ptsToD = pts => pts.reduce((acc, cur, i) => `${acc} ${i === 0 ? \"M\" : \"L\"} ${cur.join(\",\")}`, \"\");\n\nexport const drawGrid = (corners, gridSize) => {\n\n    const middX = [\n        [corners.lt.x, (corners.lt.y + corners.lb.y)/2],\n        [corners.rt.x, (corners.rt.y + corners.rb.y)/2],\n    ]\n\n    const middY = [\n        [(corners.lt.x + corners.rt.x)/2, corners.lt.y],\n        [(corners.lb.x + corners.rb.x)/2, corners.lb.y],\n    ]\n\n    const originX = [\n        [corners.lt.x, 0],\n        [corners.rt.x, 0],\n    ]\n\n    const originY = [\n        [0, corners.lt.y],\n        [0, corners.lb.y],\n    ]\n\n    const xLimits = [corners.lt.x, corners.rt.x];\n    const xRange = Math.abs(xLimits[1] - xLimits[0]);\n    const yLimits = [corners.lb.y, corners.lt.y];\n    const yRange = Math.abs(yLimits[1] - yLimits[0]);\n\n    function getBaseLog(x, y) {\n      return Math.log(y) / Math.log(x);\n    }\n\n    const order = Math.round(getBaseLog(5, Math.max(xRange, yRange)));\n    // const stepSize = (5**(order-1))/5;\n    const stepSize = gridSize;\n\n    const getMarkVals = (limits, stepSize) => {\n        let marks = [];\n        let current = stepSize*Math.ceil(limits[0]/stepSize) - stepSize;\n        while (current < limits[1] + stepSize) {\n            current = current + stepSize;\n            marks.push(current);\n        }\n\n        return marks\n    }\n\n    const valToLineH = val => [\n        [corners.lt.x, val],\n        [corners.rt.x, val]\n    ];\n\n    const valToLineV = val => [\n        [val, corners.lt.y],\n        [val, corners.lb.y],\n    ];\n\n    const lineToMark = width => line => svg`<path stroke=\"black\" vector-effect=\"non-scaling-stroke\" stroke-width=\"${width}\" d=\"${ptsToD(line)}\"/>`\n\n    const hMarks = getMarkVals(yLimits, stepSize).map(valToLineH).map(lineToMark(0.2))\n    const vMarks = getMarkVals(xLimits, stepSize).map(valToLineV).map(lineToMark(0.2))\n\n    // console.log(getMarkVals(yLimits, stepSize));\n\n    return svg`\n        <g class=\"grid no-download\">\n            ${lineToMark(.6)(originX)}\n            ${lineToMark(.6)(originY)}\n            ${hMarks}\n            ${vMarks}\n        </g>\n    `\n}", "import { html, svg } from \"../../_snowpack/pkg/lit-html.js\";\n\nfunction hexToRgb(hex) {\n  // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\nexport const drawPath = ({ d, color, groupId = \"\"}) => {\n  const alpha = parseInt(color.slice(-2), 16) / 255;\n\n  const renderDataString = s => svg`\n    <path\n        d=\"${s}\"\n        fill-rule=\"nonzero\"\n        fill=\"${color.slice(0, -2)}\"\n        fill-opacity=${alpha}/>\n  `\n\n\n  if ([\"padLabels\", \"componentLabels\"].includes(groupId)) {\n    return svg`<g id=${groupId}>${renderDataString(d)}</g>`\n  }\n\n  const pathDataStrings = d.split(/(?=M)/g);\n\n  return svg`\n    <g id=${groupId}>\n      ${pathDataStrings.map(renderDataString)}\n    </g>\n  `\n}\n", "import { Turtle } from \"../libs/gram-js.js\";\n\nfunction circle(radius) {\n  return new Turtle()\n    .arc(360, radius)\n    .originate()\n}\n\nfunction rectangle(width, height) {\n\treturn new Turtle()\n\t  .forward(width)\n\t  .right(90)\n\t  .forward(height)\n\t  .right(90)\n\t  .repeat(1)\n\t  .originate()\n}\n\nTurtle.prototype.circle = circle;\nTurtle.prototype.rectangle = rectangle;\n\nfunction subdivide(curve) {\n   var firstMidpoints = midpoints(curve);\n   var secondMidpoints = midpoints(firstMidpoints);\n   var thirdMidpoints = midpoints(secondMidpoints);\n\n   return [[curve[0], firstMidpoints[0], secondMidpoints[0], thirdMidpoints[0]],\n          [thirdMidpoints[0], secondMidpoints[1], firstMidpoints[2], curve[3]]];\n}\n\nfunction midpoints(pointList) {\n   var midpoint = function(p, q) {\n      return [(p[0] + q[0]) / 2.0, (p[1] + q[1]) / 2.0];\n   };\n\n   var midpointList = new Array(pointList.length - 1);\n   for (var i = 0; i < midpointList.length; i++) {\n      midpointList[i] = midpoint(pointList[i], pointList[i+1]);\n   }\n\n   return midpointList;\n}\n\nfunction isFlat(curve) { // curves is 4 pts\n   var tol = 10; // anything below 50 is roughly good-looking\n\n   var ax = 3.0*curve[1][0] - 2.0*curve[0][0] - curve[3][0]; ax *= ax;\n   var ay = 3.0*curve[1][1] - 2.0*curve[0][1] - curve[3][1]; ay *= ay;\n   var bx = 3.0*curve[2][0] - curve[0][0] - 2.0*curve[3][0]; bx *= bx;\n   var by = 3.0*curve[2][1] - curve[0][1] - 2.0*curve[3][1]; by *= by;\n\n   return (Math.max(ax, bx) + Math.max(ay, by) <= tol);\n}\n\n// Example: lerp(0.5, 0.0, 1.0) == 0.5\nconst lerp = (t, p1, p2) => [\n\t(1 - t) * p1[0] + t * p2[0],\n\t(1 - t) * p1[1] + t * p2[1],\n]\n\n// Example: reduce(0.5, ...[0.0, 1.0, 2.0, 3.0]) == [0.5, 1.5, 2.5]\nconst reduce = (t, p1, p2, ...ps) => ps.length > 0\n    ? [lerp(t, p1, p2), ...reduce(t, p2, ...ps)]\n    : [lerp(t, p1, p2)];\n\n// Example: deCasteljau(0.5, [0.0, 1.0, 2.0, 3.0]) == 1.5\nconst deCasteljau = (t, ps) => ps.length > 1\n    ? deCasteljau(t, reduce(t, ...ps))\n    : ps[0];\n\nfunction bezier(ps, turtle) {\n\tconst pts = [];\n\tfor (let t = 0; t <= 1; t += 1/64 ) {\n\t\tconst pt = deCasteljau(t, [ [ turtle.end.x, turtle.end.y ] , ...ps ]);\n\t\tpts.push(pt);\n\t}\n\n\tpts.forEach(pt => {\n\t\tturtle.goTo(pt);\n\t})\n\n  return turtle;\n}\n\n\nTurtle.prototype.pathD = Turtle.prototype.bezier;\nTurtle.prototype.bezier = function (...ps) {\n\treturn bezier(ps, this);\n}\n\nexport { Turtle }\n", "import { html, svg } from \"../../_snowpack/pkg/lit-html.js\";\nimport { Turtle } from \"../Turtle.js\";\n\nconst translateHandleSize = 0.02;\nexport const drawHandles = (pcb) => pcb.components.map((comp, i) => svg`\n  <g class=\"no-download translate-handle\">\n    <path\n          d=\"${new Turtle()\n            .arc(361, translateHandleSize)\n            .translate([comp.posX, comp.posY-translateHandleSize])\n            .offset(0.003)\n            .getPathData()}\"\n      />\n      <circle\n        class=\"translate-handle-trigger\" \n      data-index=${i}\n        stroke=\"none\"\n        fill=\"#00000000\"\n      cx=\"${comp.posX}\"\n      cy=\"${comp.posY}\"\n      r=\"${translateHandleSize}\"\n      />\n  </g>\n`)", "import { html, svg } from \"../../_snowpack/pkg/lit-html.js\";\n\nimport { drawGrid } from \"./drawGrid.js\";\nimport { drawPath } from \"./drawPath.js\";\nimport { drawHandles } from \"./drawHandles.js\";\n\nexport const svgViewer = (state) => {\n  const shapes = state.shapes.map(p => drawPath(p))\n\n  const corners = state.panZoomParams?.corners();\n\n  return svg`\n    <svg id=\"viewer\" style=\"width: 100%; height: 100%; transform: scale(1, -1);\">\n      <g class=\"transform-group\">\n            ${ state.selectBox.start && state.selectBox.end ? svg`\n              <path\n                class=\"selectBox\"\n                d=\"\n                  M ${state.selectBox.start.x} ${state.selectBox.start.y}\n                  L ${state.selectBox.end.x} ${state.selectBox.start.y}\n                  L ${state.selectBox.end.x} ${state.selectBox.end.y}\n                  L ${state.selectBox.start.x} ${state.selectBox.end.y}\n                \"\n              />` : \"\"\n            }\n          <g class=\"shapes\">${shapes}</g>\n        ${state.panZoomParams && state.gridSize > 0 && state.grid ? drawGrid(state.panZoomParams.corners(), state.gridSize) : \"\"}\n\n        <rect\n          class=\"limits no-download\"\n          width=\"${state.limits.x[1] - state.limits.x[0]}\"\n          height=\"${state.limits.y[1] - state.limits.y[0]}\"\n          stroke=\"black\" fill=\"transparent\" stroke-width=\"1\"\n          vector-effect=\"non-scaling-stroke\"\n          transform=\"translate(${state.limits.x[0]}, ${state.limits.y[0]})\"/>\n        ${state.storedPCB && state.viewHandles ? drawHandles(state.storedPCB) : \"\"}\n      </g>\n\n    </svg>\n  `\n}\n", "import { html, svg } from \"../../_snowpack/pkg/lit-html.js\";\n\nexport const renderFootprint = ([name, footprint, svgView], i) => {\n      // <svg width=\"30\" height=\"30\">\n      //  <circle cx=\"15\" cy=\"15\" r=\"10\" stroke=\"grey\" stroke-width=\"4\" fill=\"yellow\" />\n      // </svg>\n\n      // <div class=\"footprint-item-icon\" data-index=${i} ></div>\n\n  return html`\n    <style>\n      .path-footprint {\n        fill: black;\n      }\n\n      .footprint-svg:hover .path-footprint {\n        fill: orange;\n      }\n    </style>\n    <div class=\"footprint-item\">\n      <svg \n        data-index=${i}\n        class=\"footprint-svg footprint-${i}\" \n        width=\"50px\"\n        height=\"50px\">\n        <path\n            class=\"path-footprint\"\n            data-index=${i} \n            d=\"${svgView.getPathData()}\"\n            fill-rule=\"nonzero\"\n            />\n      </svg>\n      <span style=\"padding-left: 5px;\">${name}</span>\n    </div>\n  `\n}", "var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nexport { commonjsGlobal as a, createCommonjsModule as c, getDefaultExportFromCjs as g };\n", "import { g as getDefaultExportFromCjs, c as createCommonjsModule, a as commonjsGlobal } from './common/_commonjsHelpers-8c19dec8.js';\n\nvar esprima = createCommonjsModule(function (module, exports) {\n(function webpackUniversalModuleDefinition(root, factory) {\n/* istanbul ignore next */\n\tmodule.exports = factory();\n})(commonjsGlobal, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/* istanbul ignore if */\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\t/*\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar comment_handler_1 = __webpack_require__(1);\n\tvar jsx_parser_1 = __webpack_require__(3);\n\tvar parser_1 = __webpack_require__(8);\n\tvar tokenizer_1 = __webpack_require__(15);\n\tfunction parse(code, options, delegate) {\n\t    var commentHandler = null;\n\t    var proxyDelegate = function (node, metadata) {\n\t        if (delegate) {\n\t            delegate(node, metadata);\n\t        }\n\t        if (commentHandler) {\n\t            commentHandler.visit(node, metadata);\n\t        }\n\t    };\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\n\t    var collectComment = false;\n\t    if (options) {\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\n\t        if (collectComment || attachComment) {\n\t            commentHandler = new comment_handler_1.CommentHandler();\n\t            commentHandler.attach = attachComment;\n\t            options.comment = true;\n\t            parserDelegate = proxyDelegate;\n\t        }\n\t    }\n\t    var isModule = false;\n\t    if (options && typeof options.sourceType === 'string') {\n\t        isModule = (options.sourceType === 'module');\n\t    }\n\t    var parser;\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\n\t    }\n\t    else {\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\n\t    }\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\n\t    var ast = program;\n\t    if (collectComment && commentHandler) {\n\t        ast.comments = commentHandler.comments;\n\t    }\n\t    if (parser.config.tokens) {\n\t        ast.tokens = parser.tokens;\n\t    }\n\t    if (parser.config.tolerant) {\n\t        ast.errors = parser.errorHandler.errors;\n\t    }\n\t    return ast;\n\t}\n\texports.parse = parse;\n\tfunction parseModule(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'module';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseModule = parseModule;\n\tfunction parseScript(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'script';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseScript = parseScript;\n\tfunction tokenize(code, options, delegate) {\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\n\t    var tokens;\n\t    tokens = [];\n\t    try {\n\t        while (true) {\n\t            var token = tokenizer.getNextToken();\n\t            if (!token) {\n\t                break;\n\t            }\n\t            if (delegate) {\n\t                token = delegate(token);\n\t            }\n\t            tokens.push(token);\n\t        }\n\t    }\n\t    catch (e) {\n\t        tokenizer.errorHandler.tolerate(e);\n\t    }\n\t    if (tokenizer.errorHandler.tolerant) {\n\t        tokens.errors = tokenizer.errors();\n\t    }\n\t    return tokens;\n\t}\n\texports.tokenize = tokenize;\n\tvar syntax_1 = __webpack_require__(2);\n\texports.Syntax = syntax_1.Syntax;\n\t// Sync with *.json manifests.\n\texports.version = '4.0.1';\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\tvar CommentHandler = (function () {\n\t    function CommentHandler() {\n\t        this.attach = false;\n\t        this.comments = [];\n\t        this.stack = [];\n\t        this.leading = [];\n\t        this.trailing = [];\n\t    }\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\n\t        //  innnerComments for properties empty block\n\t        //  `function a() {/** comments **\\/}`\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\n\t            var innerComments = [];\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\n\t                var entry = this.leading[i];\n\t                if (metadata.end.offset >= entry.start) {\n\t                    innerComments.unshift(entry.comment);\n\t                    this.leading.splice(i, 1);\n\t                    this.trailing.splice(i, 1);\n\t                }\n\t            }\n\t            if (innerComments.length) {\n\t                node.innerComments = innerComments;\n\t            }\n\t        }\n\t    };\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\n\t        var trailingComments = [];\n\t        if (this.trailing.length > 0) {\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\n\t                var entry_1 = this.trailing[i];\n\t                if (entry_1.start >= metadata.end.offset) {\n\t                    trailingComments.unshift(entry_1.comment);\n\t                }\n\t            }\n\t            this.trailing.length = 0;\n\t            return trailingComments;\n\t        }\n\t        var entry = this.stack[this.stack.length - 1];\n\t        if (entry && entry.node.trailingComments) {\n\t            var firstComment = entry.node.trailingComments[0];\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\n\t                trailingComments = entry.node.trailingComments;\n\t                delete entry.node.trailingComments;\n\t            }\n\t        }\n\t        return trailingComments;\n\t    };\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\n\t        var leadingComments = [];\n\t        var target;\n\t        while (this.stack.length > 0) {\n\t            var entry = this.stack[this.stack.length - 1];\n\t            if (entry && entry.start >= metadata.start.offset) {\n\t                target = entry.node;\n\t                this.stack.pop();\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        if (target) {\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\n\t            for (var i = count - 1; i >= 0; --i) {\n\t                var comment = target.leadingComments[i];\n\t                if (comment.range[1] <= metadata.start.offset) {\n\t                    leadingComments.unshift(comment);\n\t                    target.leadingComments.splice(i, 1);\n\t                }\n\t            }\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\n\t                delete target.leadingComments;\n\t            }\n\t            return leadingComments;\n\t        }\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\n\t            var entry = this.leading[i];\n\t            if (entry.start <= metadata.start.offset) {\n\t                leadingComments.unshift(entry.comment);\n\t                this.leading.splice(i, 1);\n\t            }\n\t        }\n\t        return leadingComments;\n\t    };\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\n\t            return;\n\t        }\n\t        this.insertInnerComments(node, metadata);\n\t        var trailingComments = this.findTrailingComments(metadata);\n\t        var leadingComments = this.findLeadingComments(metadata);\n\t        if (leadingComments.length > 0) {\n\t            node.leadingComments = leadingComments;\n\t        }\n\t        if (trailingComments.length > 0) {\n\t            node.trailingComments = trailingComments;\n\t        }\n\t        this.stack.push({\n\t            node: node,\n\t            start: metadata.start.offset\n\t        });\n\t    };\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\n\t        var comment = {\n\t            type: type,\n\t            value: node.value\n\t        };\n\t        if (node.range) {\n\t            comment.range = node.range;\n\t        }\n\t        if (node.loc) {\n\t            comment.loc = node.loc;\n\t        }\n\t        this.comments.push(comment);\n\t        if (this.attach) {\n\t            var entry = {\n\t                comment: {\n\t                    type: type,\n\t                    value: node.value,\n\t                    range: [metadata.start.offset, metadata.end.offset]\n\t                },\n\t                start: metadata.start.offset\n\t            };\n\t            if (node.loc) {\n\t                entry.comment.loc = node.loc;\n\t            }\n\t            node.type = type;\n\t            this.leading.push(entry);\n\t            this.trailing.push(entry);\n\t        }\n\t    };\n\t    CommentHandler.prototype.visit = function (node, metadata) {\n\t        if (node.type === 'LineComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (node.type === 'BlockComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (this.attach) {\n\t            this.visitNode(node, metadata);\n\t        }\n\t    };\n\t    return CommentHandler;\n\t}());\n\texports.CommentHandler = CommentHandler;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.Syntax = {\n\t    AssignmentExpression: 'AssignmentExpression',\n\t    AssignmentPattern: 'AssignmentPattern',\n\t    ArrayExpression: 'ArrayExpression',\n\t    ArrayPattern: 'ArrayPattern',\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\n\t    AwaitExpression: 'AwaitExpression',\n\t    BlockStatement: 'BlockStatement',\n\t    BinaryExpression: 'BinaryExpression',\n\t    BreakStatement: 'BreakStatement',\n\t    CallExpression: 'CallExpression',\n\t    CatchClause: 'CatchClause',\n\t    ClassBody: 'ClassBody',\n\t    ClassDeclaration: 'ClassDeclaration',\n\t    ClassExpression: 'ClassExpression',\n\t    ConditionalExpression: 'ConditionalExpression',\n\t    ContinueStatement: 'ContinueStatement',\n\t    DoWhileStatement: 'DoWhileStatement',\n\t    DebuggerStatement: 'DebuggerStatement',\n\t    EmptyStatement: 'EmptyStatement',\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\n\t    ExportSpecifier: 'ExportSpecifier',\n\t    ExpressionStatement: 'ExpressionStatement',\n\t    ForStatement: 'ForStatement',\n\t    ForOfStatement: 'ForOfStatement',\n\t    ForInStatement: 'ForInStatement',\n\t    FunctionDeclaration: 'FunctionDeclaration',\n\t    FunctionExpression: 'FunctionExpression',\n\t    Identifier: 'Identifier',\n\t    IfStatement: 'IfStatement',\n\t    ImportDeclaration: 'ImportDeclaration',\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n\t    ImportSpecifier: 'ImportSpecifier',\n\t    Literal: 'Literal',\n\t    LabeledStatement: 'LabeledStatement',\n\t    LogicalExpression: 'LogicalExpression',\n\t    MemberExpression: 'MemberExpression',\n\t    MetaProperty: 'MetaProperty',\n\t    MethodDefinition: 'MethodDefinition',\n\t    NewExpression: 'NewExpression',\n\t    ObjectExpression: 'ObjectExpression',\n\t    ObjectPattern: 'ObjectPattern',\n\t    Program: 'Program',\n\t    Property: 'Property',\n\t    RestElement: 'RestElement',\n\t    ReturnStatement: 'ReturnStatement',\n\t    SequenceExpression: 'SequenceExpression',\n\t    SpreadElement: 'SpreadElement',\n\t    Super: 'Super',\n\t    SwitchCase: 'SwitchCase',\n\t    SwitchStatement: 'SwitchStatement',\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\n\t    TemplateElement: 'TemplateElement',\n\t    TemplateLiteral: 'TemplateLiteral',\n\t    ThisExpression: 'ThisExpression',\n\t    ThrowStatement: 'ThrowStatement',\n\t    TryStatement: 'TryStatement',\n\t    UnaryExpression: 'UnaryExpression',\n\t    UpdateExpression: 'UpdateExpression',\n\t    VariableDeclaration: 'VariableDeclaration',\n\t    VariableDeclarator: 'VariableDeclarator',\n\t    WhileStatement: 'WhileStatement',\n\t    WithStatement: 'WithStatement',\n\t    YieldExpression: 'YieldExpression'\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n/* istanbul ignore next */\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar character_1 = __webpack_require__(4);\n\tvar JSXNode = __webpack_require__(5);\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\tvar Node = __webpack_require__(7);\n\tvar parser_1 = __webpack_require__(8);\n\tvar token_1 = __webpack_require__(13);\n\tvar xhtml_entities_1 = __webpack_require__(14);\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\n\tfunction getQualifiedElementName(elementName) {\n\t    var qualifiedName;\n\t    switch (elementName.type) {\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\n\t            var id = elementName;\n\t            qualifiedName = id.name;\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\n\t            var ns = elementName;\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\n\t                getQualifiedElementName(ns.name);\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\n\t            var expr = elementName;\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\n\t                getQualifiedElementName(expr.property);\n\t            break;\n\t    }\n\t    return qualifiedName;\n\t}\n\tvar JSXParser = (function (_super) {\n\t    __extends(JSXParser, _super);\n\t    function JSXParser(code, options, delegate) {\n\t        return _super.call(this, code, options, delegate) || this;\n\t    }\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\n\t    };\n\t    JSXParser.prototype.startJSX = function () {\n\t        // Unwind the scanner before the lookahead token.\n\t        this.scanner.index = this.startMarker.index;\n\t        this.scanner.lineNumber = this.startMarker.line;\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\n\t    };\n\t    JSXParser.prototype.finishJSX = function () {\n\t        // Prime the next lookahead.\n\t        this.nextToken();\n\t    };\n\t    JSXParser.prototype.reenterJSX = function () {\n\t        this.startJSX();\n\t        this.expectJSX('}');\n\t        // Pop the closing '}' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t    };\n\t    JSXParser.prototype.createJSXNode = function () {\n\t        this.collectComments();\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.createJSXChildNode = function () {\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\n\t        var result = '&';\n\t        var valid = true;\n\t        var terminated = false;\n\t        var numeric = false;\n\t        var hex = false;\n\t        while (!this.scanner.eof() && valid && !terminated) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === quote) {\n\t                break;\n\t            }\n\t            terminated = (ch === ';');\n\t            result += ch;\n\t            ++this.scanner.index;\n\t            if (!terminated) {\n\t                switch (result.length) {\n\t                    case 2:\n\t                        // e.g. '&#123;'\n\t                        numeric = (ch === '#');\n\t                        break;\n\t                    case 3:\n\t                        if (numeric) {\n\t                            // e.g. '&#x41;'\n\t                            hex = (ch === 'x');\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\n\t                            numeric = numeric && !hex;\n\t                        }\n\t                        break;\n\t                    default:\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t        if (valid && terminated && result.length > 2) {\n\t            // e.g. '&#x41;' becomes just '#x41'\n\t            var str = result.substr(1, result.length - 2);\n\t            if (numeric && str.length > 1) {\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\n\t            }\n\t            else if (hex && str.length > 2) {\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\n\t            }\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\n\t                result = xhtml_entities_1.XHTMLEntities[str];\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\n\t    JSXParser.prototype.lexJSX = function () {\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\n\t        // < > / : = { }\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\n\t            var value = this.scanner.source[this.scanner.index++];\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index - 1,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // \" '\n\t        if (cp === 34 || cp === 39) {\n\t            var start = this.scanner.index;\n\t            var quote = this.scanner.source[this.scanner.index++];\n\t            var str = '';\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source[this.scanner.index++];\n\t                if (ch === quote) {\n\t                    break;\n\t                }\n\t                else if (ch === '&') {\n\t                    str += this.scanXHTMLEntity(quote);\n\t                }\n\t                else {\n\t                    str += ch;\n\t                }\n\t            }\n\t            return {\n\t                type: 8 /* StringLiteral */,\n\t                value: str,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // ... or .\n\t        if (cp === 46) {\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\n\t            var start = this.scanner.index;\n\t            this.scanner.index += value.length;\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // `\n\t        if (cp === 96) {\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\n\t            return {\n\t                type: 10 /* Template */,\n\t                value: '',\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // Identifer can not contain backslash (char code 92).\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\n\t            var start = this.scanner.index;\n\t            ++this.scanner.index;\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\n\t                    ++this.scanner.index;\n\t                }\n\t                else if (ch === 45) {\n\t                    // Hyphen (char code 45) can be part of an identifier.\n\t                    ++this.scanner.index;\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\n\t            return {\n\t                type: 100 /* Identifier */,\n\t                value: id,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        return this.scanner.lex();\n\t    };\n\t    JSXParser.prototype.nextJSXToken = function () {\n\t        this.collectComments();\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = this.lexJSX();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        if (this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.nextJSXText = function () {\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var start = this.scanner.index;\n\t        var text = '';\n\t        while (!this.scanner.eof()) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === '{' || ch === '<') {\n\t                break;\n\t            }\n\t            ++this.scanner.index;\n\t            text += ch;\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.scanner.lineNumber;\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\n\t                    ++this.scanner.index;\n\t                }\n\t                this.scanner.lineStart = this.scanner.index;\n\t            }\n\t        }\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = {\n\t            type: 101 /* Text */,\n\t            value: text,\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: this.scanner.lineStart,\n\t            start: start,\n\t            end: this.scanner.index\n\t        };\n\t        if ((text.length > 0) && this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.peekJSXToken = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.lexJSX();\n\t        this.scanner.restoreState(state);\n\t        return next;\n\t    };\n\t    // Expect the next JSX token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    JSXParser.prototype.expectJSX = function (value) {\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next JSX token matches the specified punctuator.\n\t    JSXParser.prototype.matchJSX = function (value) {\n\t        var next = this.peekJSXToken();\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\n\t    };\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 100 /* Identifier */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\n\t    };\n\t    JSXParser.prototype.parseJSXElementName = function () {\n\t        var node = this.createJSXNode();\n\t        var elementName = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = elementName;\n\t            this.expectJSX(':');\n\t            var name_1 = this.parseJSXIdentifier();\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\n\t        }\n\t        else if (this.matchJSX('.')) {\n\t            while (this.matchJSX('.')) {\n\t                var object = elementName;\n\t                this.expectJSX('.');\n\t                var property = this.parseJSXIdentifier();\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\n\t            }\n\t        }\n\t        return elementName;\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\n\t        var node = this.createJSXNode();\n\t        var attributeName;\n\t        var identifier = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = identifier;\n\t            this.expectJSX(':');\n\t            var name_2 = this.parseJSXIdentifier();\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\n\t        }\n\t        else {\n\t            attributeName = identifier;\n\t        }\n\t        return attributeName;\n\t    };\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 8 /* StringLiteral */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.finishJSX();\n\t        if (this.match('}')) {\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\n\t        }\n\t        var expression = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\n\t    };\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var name = this.parseJSXAttributeName();\n\t        var value = null;\n\t        if (this.matchJSX('=')) {\n\t            this.expectJSX('=');\n\t            value = this.parseJSXAttributeValue();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\n\t    };\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.expectJSX('...');\n\t        this.finishJSX();\n\t        var argument = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributes = function () {\n\t        var attributes = [];\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\n\t                this.parseJSXNameValueAttribute();\n\t            attributes.push(attribute);\n\t        }\n\t        return attributes;\n\t    };\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        if (this.matchJSX('/')) {\n\t            this.expectJSX('/');\n\t            var name_3 = this.parseJSXElementName();\n\t            this.expectJSX('>');\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));\n\t        }\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\n\t        var node = this.createJSXChildNode();\n\t        this.collectComments();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        var expression;\n\t        if (this.matchJSX('}')) {\n\t            expression = this.parseJSXEmptyExpression();\n\t            this.expectJSX('}');\n\t        }\n\t        else {\n\t            this.finishJSX();\n\t            expression = this.parseAssignmentExpression();\n\t            this.reenterJSX();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXChildren = function () {\n\t        var children = [];\n\t        while (!this.scanner.eof()) {\n\t            var node = this.createJSXChildNode();\n\t            var token = this.nextJSXText();\n\t            if (token.start < token.end) {\n\t                var raw = this.getTokenRaw(token);\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\n\t                children.push(child);\n\t            }\n\t            if (this.scanner.source[this.scanner.index] === '{') {\n\t                var container = this.parseJSXExpressionContainer();\n\t                children.push(container);\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return children;\n\t    };\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\n\t        var stack = [];\n\t        while (!this.scanner.eof()) {\n\t            el.children = el.children.concat(this.parseJSXChildren());\n\t            var node = this.createJSXChildNode();\n\t            var element = this.parseJSXBoundaryElement();\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\n\t                var opening = element;\n\t                if (opening.selfClosing) {\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\n\t                    el.children.push(child);\n\t                }\n\t                else {\n\t                    stack.push(el);\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\n\t                }\n\t            }\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\n\t                el.closing = element;\n\t                var open_1 = getQualifiedElementName(el.opening.name);\n\t                var close_1 = getQualifiedElementName(el.closing.name);\n\t                if (open_1 !== close_1) {\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\n\t                }\n\t                if (stack.length > 0) {\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\n\t                    el = stack[stack.length - 1];\n\t                    el.children.push(child);\n\t                    stack.pop();\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t    JSXParser.prototype.parseJSXElement = function () {\n\t        var node = this.createJSXNode();\n\t        var opening = this.parseJSXOpeningElement();\n\t        var children = [];\n\t        var closing = null;\n\t        if (!opening.selfClosing) {\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\n\t            children = el.children;\n\t            closing = el.closing;\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\n\t    };\n\t    JSXParser.prototype.parseJSXRoot = function () {\n\t        // Pop the opening '<' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t        this.startJSX();\n\t        var element = this.parseJSXElement();\n\t        this.finishJSX();\n\t        return element;\n\t    };\n\t    JSXParser.prototype.isStartOfExpression = function () {\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\n\t    };\n\t    return JSXParser;\n\t}(parser_1.Parser));\n\texports.JSXParser = JSXParser;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// See also tools/generate-unicode-regex.js.\n\tvar Regex = {\n\t    // Unicode v8.0.0 NonAsciiIdentifierStart:\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\t    // Unicode v8.0.0 NonAsciiIdentifierPart:\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n\t};\n\texports.Character = {\n\t    /* tslint:disable:no-bitwise */\n\t    fromCodePoint: function (cp) {\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-white-space\n\t    isWhiteSpace: function (cp) {\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\n\t    isLineTerminator: function (cp) {\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    isIdentifierStart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    isIdentifierPart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    isDecimalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\n\t    },\n\t    isHexDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp >= 0x41 && cp <= 0x46) ||\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\n\t    },\n\t    isOctalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\n\t    }\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\t/* tslint:disable:max-classes-per-file */\n\tvar JSXClosingElement = (function () {\n\t    function JSXClosingElement(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\n\t        this.name = name;\n\t    }\n\t    return JSXClosingElement;\n\t}());\n\texports.JSXClosingElement = JSXClosingElement;\n\tvar JSXElement = (function () {\n\t    function JSXElement(openingElement, children, closingElement) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\n\t        this.openingElement = openingElement;\n\t        this.children = children;\n\t        this.closingElement = closingElement;\n\t    }\n\t    return JSXElement;\n\t}());\n\texports.JSXElement = JSXElement;\n\tvar JSXEmptyExpression = (function () {\n\t    function JSXEmptyExpression() {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\n\t    }\n\t    return JSXEmptyExpression;\n\t}());\n\texports.JSXEmptyExpression = JSXEmptyExpression;\n\tvar JSXExpressionContainer = (function () {\n\t    function JSXExpressionContainer(expression) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\n\t        this.expression = expression;\n\t    }\n\t    return JSXExpressionContainer;\n\t}());\n\texports.JSXExpressionContainer = JSXExpressionContainer;\n\tvar JSXIdentifier = (function () {\n\t    function JSXIdentifier(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\n\t        this.name = name;\n\t    }\n\t    return JSXIdentifier;\n\t}());\n\texports.JSXIdentifier = JSXIdentifier;\n\tvar JSXMemberExpression = (function () {\n\t    function JSXMemberExpression(object, property) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return JSXMemberExpression;\n\t}());\n\texports.JSXMemberExpression = JSXMemberExpression;\n\tvar JSXAttribute = (function () {\n\t    function JSXAttribute(name, value) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\n\t        this.name = name;\n\t        this.value = value;\n\t    }\n\t    return JSXAttribute;\n\t}());\n\texports.JSXAttribute = JSXAttribute;\n\tvar JSXNamespacedName = (function () {\n\t    function JSXNamespacedName(namespace, name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\n\t        this.namespace = namespace;\n\t        this.name = name;\n\t    }\n\t    return JSXNamespacedName;\n\t}());\n\texports.JSXNamespacedName = JSXNamespacedName;\n\tvar JSXOpeningElement = (function () {\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\n\t        this.name = name;\n\t        this.selfClosing = selfClosing;\n\t        this.attributes = attributes;\n\t    }\n\t    return JSXOpeningElement;\n\t}());\n\texports.JSXOpeningElement = JSXOpeningElement;\n\tvar JSXSpreadAttribute = (function () {\n\t    function JSXSpreadAttribute(argument) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\n\t        this.argument = argument;\n\t    }\n\t    return JSXSpreadAttribute;\n\t}());\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\n\tvar JSXText = (function () {\n\t    function JSXText(value, raw) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return JSXText;\n\t}());\n\texports.JSXText = JSXText;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.JSXSyntax = {\n\t    JSXAttribute: 'JSXAttribute',\n\t    JSXClosingElement: 'JSXClosingElement',\n\t    JSXElement: 'JSXElement',\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\n\t    JSXIdentifier: 'JSXIdentifier',\n\t    JSXMemberExpression: 'JSXMemberExpression',\n\t    JSXNamespacedName: 'JSXNamespacedName',\n\t    JSXOpeningElement: 'JSXOpeningElement',\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\n\t    JSXText: 'JSXText'\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\t/* tslint:disable:max-classes-per-file */\n\tvar ArrayExpression = (function () {\n\t    function ArrayExpression(elements) {\n\t        this.type = syntax_1.Syntax.ArrayExpression;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayExpression;\n\t}());\n\texports.ArrayExpression = ArrayExpression;\n\tvar ArrayPattern = (function () {\n\t    function ArrayPattern(elements) {\n\t        this.type = syntax_1.Syntax.ArrayPattern;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayPattern;\n\t}());\n\texports.ArrayPattern = ArrayPattern;\n\tvar ArrowFunctionExpression = (function () {\n\t    function ArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = false;\n\t    }\n\t    return ArrowFunctionExpression;\n\t}());\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\n\tvar AssignmentExpression = (function () {\n\t    function AssignmentExpression(operator, left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentExpression;\n\t}());\n\texports.AssignmentExpression = AssignmentExpression;\n\tvar AssignmentPattern = (function () {\n\t    function AssignmentPattern(left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentPattern;\n\t}());\n\texports.AssignmentPattern = AssignmentPattern;\n\tvar AsyncArrowFunctionExpression = (function () {\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = true;\n\t    }\n\t    return AsyncArrowFunctionExpression;\n\t}());\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\n\tvar AsyncFunctionDeclaration = (function () {\n\t    function AsyncFunctionDeclaration(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionDeclaration;\n\t}());\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\n\tvar AsyncFunctionExpression = (function () {\n\t    function AsyncFunctionExpression(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionExpression;\n\t}());\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\n\tvar AwaitExpression = (function () {\n\t    function AwaitExpression(argument) {\n\t        this.type = syntax_1.Syntax.AwaitExpression;\n\t        this.argument = argument;\n\t    }\n\t    return AwaitExpression;\n\t}());\n\texports.AwaitExpression = AwaitExpression;\n\tvar BinaryExpression = (function () {\n\t    function BinaryExpression(operator, left, right) {\n\t        var logical = (operator === '||' || operator === '&&');\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return BinaryExpression;\n\t}());\n\texports.BinaryExpression = BinaryExpression;\n\tvar BlockStatement = (function () {\n\t    function BlockStatement(body) {\n\t        this.type = syntax_1.Syntax.BlockStatement;\n\t        this.body = body;\n\t    }\n\t    return BlockStatement;\n\t}());\n\texports.BlockStatement = BlockStatement;\n\tvar BreakStatement = (function () {\n\t    function BreakStatement(label) {\n\t        this.type = syntax_1.Syntax.BreakStatement;\n\t        this.label = label;\n\t    }\n\t    return BreakStatement;\n\t}());\n\texports.BreakStatement = BreakStatement;\n\tvar CallExpression = (function () {\n\t    function CallExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.CallExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return CallExpression;\n\t}());\n\texports.CallExpression = CallExpression;\n\tvar CatchClause = (function () {\n\t    function CatchClause(param, body) {\n\t        this.type = syntax_1.Syntax.CatchClause;\n\t        this.param = param;\n\t        this.body = body;\n\t    }\n\t    return CatchClause;\n\t}());\n\texports.CatchClause = CatchClause;\n\tvar ClassBody = (function () {\n\t    function ClassBody(body) {\n\t        this.type = syntax_1.Syntax.ClassBody;\n\t        this.body = body;\n\t    }\n\t    return ClassBody;\n\t}());\n\texports.ClassBody = ClassBody;\n\tvar ClassDeclaration = (function () {\n\t    function ClassDeclaration(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassDeclaration;\n\t}());\n\texports.ClassDeclaration = ClassDeclaration;\n\tvar ClassExpression = (function () {\n\t    function ClassExpression(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassExpression;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassExpression;\n\t}());\n\texports.ClassExpression = ClassExpression;\n\tvar ComputedMemberExpression = (function () {\n\t    function ComputedMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = true;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return ComputedMemberExpression;\n\t}());\n\texports.ComputedMemberExpression = ComputedMemberExpression;\n\tvar ConditionalExpression = (function () {\n\t    function ConditionalExpression(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return ConditionalExpression;\n\t}());\n\texports.ConditionalExpression = ConditionalExpression;\n\tvar ContinueStatement = (function () {\n\t    function ContinueStatement(label) {\n\t        this.type = syntax_1.Syntax.ContinueStatement;\n\t        this.label = label;\n\t    }\n\t    return ContinueStatement;\n\t}());\n\texports.ContinueStatement = ContinueStatement;\n\tvar DebuggerStatement = (function () {\n\t    function DebuggerStatement() {\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\n\t    }\n\t    return DebuggerStatement;\n\t}());\n\texports.DebuggerStatement = DebuggerStatement;\n\tvar Directive = (function () {\n\t    function Directive(expression, directive) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t        this.directive = directive;\n\t    }\n\t    return Directive;\n\t}());\n\texports.Directive = Directive;\n\tvar DoWhileStatement = (function () {\n\t    function DoWhileStatement(body, test) {\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\n\t        this.body = body;\n\t        this.test = test;\n\t    }\n\t    return DoWhileStatement;\n\t}());\n\texports.DoWhileStatement = DoWhileStatement;\n\tvar EmptyStatement = (function () {\n\t    function EmptyStatement() {\n\t        this.type = syntax_1.Syntax.EmptyStatement;\n\t    }\n\t    return EmptyStatement;\n\t}());\n\texports.EmptyStatement = EmptyStatement;\n\tvar ExportAllDeclaration = (function () {\n\t    function ExportAllDeclaration(source) {\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\n\t        this.source = source;\n\t    }\n\t    return ExportAllDeclaration;\n\t}());\n\texports.ExportAllDeclaration = ExportAllDeclaration;\n\tvar ExportDefaultDeclaration = (function () {\n\t    function ExportDefaultDeclaration(declaration) {\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\n\t        this.declaration = declaration;\n\t    }\n\t    return ExportDefaultDeclaration;\n\t}());\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\n\tvar ExportNamedDeclaration = (function () {\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\n\t        this.declaration = declaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ExportNamedDeclaration;\n\t}());\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\n\tvar ExportSpecifier = (function () {\n\t    function ExportSpecifier(local, exported) {\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\n\t        this.exported = exported;\n\t        this.local = local;\n\t    }\n\t    return ExportSpecifier;\n\t}());\n\texports.ExportSpecifier = ExportSpecifier;\n\tvar ExpressionStatement = (function () {\n\t    function ExpressionStatement(expression) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t    }\n\t    return ExpressionStatement;\n\t}());\n\texports.ExpressionStatement = ExpressionStatement;\n\tvar ForInStatement = (function () {\n\t    function ForInStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForInStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t        this.each = false;\n\t    }\n\t    return ForInStatement;\n\t}());\n\texports.ForInStatement = ForInStatement;\n\tvar ForOfStatement = (function () {\n\t    function ForOfStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForOfStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t    }\n\t    return ForOfStatement;\n\t}());\n\texports.ForOfStatement = ForOfStatement;\n\tvar ForStatement = (function () {\n\t    function ForStatement(init, test, update, body) {\n\t        this.type = syntax_1.Syntax.ForStatement;\n\t        this.init = init;\n\t        this.test = test;\n\t        this.update = update;\n\t        this.body = body;\n\t    }\n\t    return ForStatement;\n\t}());\n\texports.ForStatement = ForStatement;\n\tvar FunctionDeclaration = (function () {\n\t    function FunctionDeclaration(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionDeclaration;\n\t}());\n\texports.FunctionDeclaration = FunctionDeclaration;\n\tvar FunctionExpression = (function () {\n\t    function FunctionExpression(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionExpression;\n\t}());\n\texports.FunctionExpression = FunctionExpression;\n\tvar Identifier = (function () {\n\t    function Identifier(name) {\n\t        this.type = syntax_1.Syntax.Identifier;\n\t        this.name = name;\n\t    }\n\t    return Identifier;\n\t}());\n\texports.Identifier = Identifier;\n\tvar IfStatement = (function () {\n\t    function IfStatement(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.IfStatement;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return IfStatement;\n\t}());\n\texports.IfStatement = IfStatement;\n\tvar ImportDeclaration = (function () {\n\t    function ImportDeclaration(specifiers, source) {\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ImportDeclaration;\n\t}());\n\texports.ImportDeclaration = ImportDeclaration;\n\tvar ImportDefaultSpecifier = (function () {\n\t    function ImportDefaultSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportDefaultSpecifier;\n\t}());\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\n\tvar ImportNamespaceSpecifier = (function () {\n\t    function ImportNamespaceSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportNamespaceSpecifier;\n\t}());\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\tvar ImportSpecifier = (function () {\n\t    function ImportSpecifier(local, imported) {\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\n\t        this.local = local;\n\t        this.imported = imported;\n\t    }\n\t    return ImportSpecifier;\n\t}());\n\texports.ImportSpecifier = ImportSpecifier;\n\tvar LabeledStatement = (function () {\n\t    function LabeledStatement(label, body) {\n\t        this.type = syntax_1.Syntax.LabeledStatement;\n\t        this.label = label;\n\t        this.body = body;\n\t    }\n\t    return LabeledStatement;\n\t}());\n\texports.LabeledStatement = LabeledStatement;\n\tvar Literal = (function () {\n\t    function Literal(value, raw) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return Literal;\n\t}());\n\texports.Literal = Literal;\n\tvar MetaProperty = (function () {\n\t    function MetaProperty(meta, property) {\n\t        this.type = syntax_1.Syntax.MetaProperty;\n\t        this.meta = meta;\n\t        this.property = property;\n\t    }\n\t    return MetaProperty;\n\t}());\n\texports.MetaProperty = MetaProperty;\n\tvar MethodDefinition = (function () {\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\n\t        this.type = syntax_1.Syntax.MethodDefinition;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.static = isStatic;\n\t    }\n\t    return MethodDefinition;\n\t}());\n\texports.MethodDefinition = MethodDefinition;\n\tvar Module = (function () {\n\t    function Module(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'module';\n\t    }\n\t    return Module;\n\t}());\n\texports.Module = Module;\n\tvar NewExpression = (function () {\n\t    function NewExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.NewExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return NewExpression;\n\t}());\n\texports.NewExpression = NewExpression;\n\tvar ObjectExpression = (function () {\n\t    function ObjectExpression(properties) {\n\t        this.type = syntax_1.Syntax.ObjectExpression;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectExpression;\n\t}());\n\texports.ObjectExpression = ObjectExpression;\n\tvar ObjectPattern = (function () {\n\t    function ObjectPattern(properties) {\n\t        this.type = syntax_1.Syntax.ObjectPattern;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectPattern;\n\t}());\n\texports.ObjectPattern = ObjectPattern;\n\tvar Property = (function () {\n\t    function Property(kind, key, computed, value, method, shorthand) {\n\t        this.type = syntax_1.Syntax.Property;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.method = method;\n\t        this.shorthand = shorthand;\n\t    }\n\t    return Property;\n\t}());\n\texports.Property = Property;\n\tvar RegexLiteral = (function () {\n\t    function RegexLiteral(value, raw, pattern, flags) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t        this.regex = { pattern: pattern, flags: flags };\n\t    }\n\t    return RegexLiteral;\n\t}());\n\texports.RegexLiteral = RegexLiteral;\n\tvar RestElement = (function () {\n\t    function RestElement(argument) {\n\t        this.type = syntax_1.Syntax.RestElement;\n\t        this.argument = argument;\n\t    }\n\t    return RestElement;\n\t}());\n\texports.RestElement = RestElement;\n\tvar ReturnStatement = (function () {\n\t    function ReturnStatement(argument) {\n\t        this.type = syntax_1.Syntax.ReturnStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ReturnStatement;\n\t}());\n\texports.ReturnStatement = ReturnStatement;\n\tvar Script = (function () {\n\t    function Script(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'script';\n\t    }\n\t    return Script;\n\t}());\n\texports.Script = Script;\n\tvar SequenceExpression = (function () {\n\t    function SequenceExpression(expressions) {\n\t        this.type = syntax_1.Syntax.SequenceExpression;\n\t        this.expressions = expressions;\n\t    }\n\t    return SequenceExpression;\n\t}());\n\texports.SequenceExpression = SequenceExpression;\n\tvar SpreadElement = (function () {\n\t    function SpreadElement(argument) {\n\t        this.type = syntax_1.Syntax.SpreadElement;\n\t        this.argument = argument;\n\t    }\n\t    return SpreadElement;\n\t}());\n\texports.SpreadElement = SpreadElement;\n\tvar StaticMemberExpression = (function () {\n\t    function StaticMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = false;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return StaticMemberExpression;\n\t}());\n\texports.StaticMemberExpression = StaticMemberExpression;\n\tvar Super = (function () {\n\t    function Super() {\n\t        this.type = syntax_1.Syntax.Super;\n\t    }\n\t    return Super;\n\t}());\n\texports.Super = Super;\n\tvar SwitchCase = (function () {\n\t    function SwitchCase(test, consequent) {\n\t        this.type = syntax_1.Syntax.SwitchCase;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t    }\n\t    return SwitchCase;\n\t}());\n\texports.SwitchCase = SwitchCase;\n\tvar SwitchStatement = (function () {\n\t    function SwitchStatement(discriminant, cases) {\n\t        this.type = syntax_1.Syntax.SwitchStatement;\n\t        this.discriminant = discriminant;\n\t        this.cases = cases;\n\t    }\n\t    return SwitchStatement;\n\t}());\n\texports.SwitchStatement = SwitchStatement;\n\tvar TaggedTemplateExpression = (function () {\n\t    function TaggedTemplateExpression(tag, quasi) {\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\n\t        this.tag = tag;\n\t        this.quasi = quasi;\n\t    }\n\t    return TaggedTemplateExpression;\n\t}());\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\n\tvar TemplateElement = (function () {\n\t    function TemplateElement(value, tail) {\n\t        this.type = syntax_1.Syntax.TemplateElement;\n\t        this.value = value;\n\t        this.tail = tail;\n\t    }\n\t    return TemplateElement;\n\t}());\n\texports.TemplateElement = TemplateElement;\n\tvar TemplateLiteral = (function () {\n\t    function TemplateLiteral(quasis, expressions) {\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\n\t        this.quasis = quasis;\n\t        this.expressions = expressions;\n\t    }\n\t    return TemplateLiteral;\n\t}());\n\texports.TemplateLiteral = TemplateLiteral;\n\tvar ThisExpression = (function () {\n\t    function ThisExpression() {\n\t        this.type = syntax_1.Syntax.ThisExpression;\n\t    }\n\t    return ThisExpression;\n\t}());\n\texports.ThisExpression = ThisExpression;\n\tvar ThrowStatement = (function () {\n\t    function ThrowStatement(argument) {\n\t        this.type = syntax_1.Syntax.ThrowStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ThrowStatement;\n\t}());\n\texports.ThrowStatement = ThrowStatement;\n\tvar TryStatement = (function () {\n\t    function TryStatement(block, handler, finalizer) {\n\t        this.type = syntax_1.Syntax.TryStatement;\n\t        this.block = block;\n\t        this.handler = handler;\n\t        this.finalizer = finalizer;\n\t    }\n\t    return TryStatement;\n\t}());\n\texports.TryStatement = TryStatement;\n\tvar UnaryExpression = (function () {\n\t    function UnaryExpression(operator, argument) {\n\t        this.type = syntax_1.Syntax.UnaryExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = true;\n\t    }\n\t    return UnaryExpression;\n\t}());\n\texports.UnaryExpression = UnaryExpression;\n\tvar UpdateExpression = (function () {\n\t    function UpdateExpression(operator, argument, prefix) {\n\t        this.type = syntax_1.Syntax.UpdateExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = prefix;\n\t    }\n\t    return UpdateExpression;\n\t}());\n\texports.UpdateExpression = UpdateExpression;\n\tvar VariableDeclaration = (function () {\n\t    function VariableDeclaration(declarations, kind) {\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\n\t        this.declarations = declarations;\n\t        this.kind = kind;\n\t    }\n\t    return VariableDeclaration;\n\t}());\n\texports.VariableDeclaration = VariableDeclaration;\n\tvar VariableDeclarator = (function () {\n\t    function VariableDeclarator(id, init) {\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\n\t        this.id = id;\n\t        this.init = init;\n\t    }\n\t    return VariableDeclarator;\n\t}());\n\texports.VariableDeclarator = VariableDeclarator;\n\tvar WhileStatement = (function () {\n\t    function WhileStatement(test, body) {\n\t        this.type = syntax_1.Syntax.WhileStatement;\n\t        this.test = test;\n\t        this.body = body;\n\t    }\n\t    return WhileStatement;\n\t}());\n\texports.WhileStatement = WhileStatement;\n\tvar WithStatement = (function () {\n\t    function WithStatement(object, body) {\n\t        this.type = syntax_1.Syntax.WithStatement;\n\t        this.object = object;\n\t        this.body = body;\n\t    }\n\t    return WithStatement;\n\t}());\n\texports.WithStatement = WithStatement;\n\tvar YieldExpression = (function () {\n\t    function YieldExpression(argument, delegate) {\n\t        this.type = syntax_1.Syntax.YieldExpression;\n\t        this.argument = argument;\n\t        this.delegate = delegate;\n\t    }\n\t    return YieldExpression;\n\t}());\n\texports.YieldExpression = YieldExpression;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar messages_1 = __webpack_require__(11);\n\tvar Node = __webpack_require__(7);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar syntax_1 = __webpack_require__(2);\n\tvar token_1 = __webpack_require__(13);\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\n\tvar Parser = (function () {\n\t    function Parser(code, options, delegate) {\n\t        if (options === void 0) { options = {}; }\n\t        this.config = {\n\t            range: (typeof options.range === 'boolean') && options.range,\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\n\t            source: null,\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\n\t        };\n\t        if (this.config.loc && options.source && options.source !== null) {\n\t            this.config.source = String(options.source);\n\t        }\n\t        this.delegate = delegate;\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = this.config.tolerant;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = this.config.comment;\n\t        this.operatorPrecedence = {\n\t            ')': 0,\n\t            ';': 0,\n\t            ',': 0,\n\t            '=': 0,\n\t            ']': 0,\n\t            '||': 1,\n\t            '&&': 2,\n\t            '|': 3,\n\t            '^': 4,\n\t            '&': 5,\n\t            '==': 6,\n\t            '!=': 6,\n\t            '===': 6,\n\t            '!==': 6,\n\t            '<': 7,\n\t            '>': 7,\n\t            '<=': 7,\n\t            '>=': 7,\n\t            '<<': 8,\n\t            '>>': 8,\n\t            '>>>': 8,\n\t            '+': 9,\n\t            '-': 9,\n\t            '*': 11,\n\t            '/': 11,\n\t            '%': 11\n\t        };\n\t        this.lookahead = {\n\t            type: 2 /* EOF */,\n\t            value: '',\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: 0,\n\t            start: 0,\n\t            end: 0\n\t        };\n\t        this.hasLineTerminator = false;\n\t        this.context = {\n\t            isModule: false,\n\t            await: false,\n\t            allowIn: true,\n\t            allowStrictDirective: true,\n\t            allowYield: true,\n\t            firstCoverInitializedNameError: null,\n\t            isAssignmentTarget: false,\n\t            isBindingElement: false,\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            labelSet: {},\n\t            strict: false\n\t        };\n\t        this.tokens = [];\n\t        this.startMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.lastMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.nextToken();\n\t        this.lastMarker = {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    }\n\t    Parser.prototype.throwError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.lastMarker.line;\n\t        var column = this.lastMarker.column + 1;\n\t        throw this.errorHandler.createError(index, line, column, msg);\n\t    };\n\t    Parser.prototype.tolerateError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.scanner.lineNumber;\n\t        var column = this.lastMarker.column + 1;\n\t        this.errorHandler.tolerateError(index, line, column, msg);\n\t    };\n\t    // Throw an exception because of the token.\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\n\t        var value;\n\t        if (token) {\n\t            if (!message) {\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\n\t                                    messages_1.Messages.UnexpectedToken;\n\t                if (token.type === 4 /* Keyword */) {\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.UnexpectedReserved;\n\t                    }\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.StrictReservedWord;\n\t                    }\n\t                }\n\t            }\n\t            value = token.value;\n\t        }\n\t        else {\n\t            value = 'ILLEGAL';\n\t        }\n\t        msg = msg.replace('%0', value);\n\t        if (token && typeof token.lineNumber === 'number') {\n\t            var index = token.start;\n\t            var line = token.lineNumber;\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\n\t            var column = token.start - lastMarkerLineStart + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t        else {\n\t            var index = this.lastMarker.index;\n\t            var line = this.lastMarker.line;\n\t            var column = this.lastMarker.column + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t    };\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\n\t        throw this.unexpectedTokenError(token, message);\n\t    };\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\n\t    };\n\t    Parser.prototype.collectComments = function () {\n\t        if (!this.config.comment) {\n\t            this.scanner.scanComments();\n\t        }\n\t        else {\n\t            var comments = this.scanner.scanComments();\n\t            if (comments.length > 0 && this.delegate) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var node = void 0;\n\t                    node = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\n\t                    };\n\t                    if (this.config.range) {\n\t                        node.range = e.range;\n\t                    }\n\t                    if (this.config.loc) {\n\t                        node.loc = e.loc;\n\t                    }\n\t                    var metadata = {\n\t                        start: {\n\t                            line: e.loc.start.line,\n\t                            column: e.loc.start.column,\n\t                            offset: e.range[0]\n\t                        },\n\t                        end: {\n\t                            line: e.loc.end.line,\n\t                            column: e.loc.end.column,\n\t                            offset: e.range[1]\n\t                        }\n\t                    };\n\t                    this.delegate(node, metadata);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    // From internal representation to an external structure\n\t    Parser.prototype.getTokenRaw = function (token) {\n\t        return this.scanner.source.slice(token.start, token.end);\n\t    };\n\t    Parser.prototype.convertToken = function (token) {\n\t        var t = {\n\t            type: token_1.TokenName[token.type],\n\t            value: this.getTokenRaw(token)\n\t        };\n\t        if (this.config.range) {\n\t            t.range = [token.start, token.end];\n\t        }\n\t        if (this.config.loc) {\n\t            t.loc = {\n\t                start: {\n\t                    line: this.startMarker.line,\n\t                    column: this.startMarker.column\n\t                },\n\t                end: {\n\t                    line: this.scanner.lineNumber,\n\t                    column: this.scanner.index - this.scanner.lineStart\n\t                }\n\t            };\n\t        }\n\t        if (token.type === 9 /* RegularExpression */) {\n\t            var pattern = token.pattern;\n\t            var flags = token.flags;\n\t            t.regex = { pattern: pattern, flags: flags };\n\t        }\n\t        return t;\n\t    };\n\t    Parser.prototype.nextToken = function () {\n\t        var token = this.lookahead;\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        this.collectComments();\n\t        if (this.scanner.index !== this.startMarker.index) {\n\t            this.startMarker.index = this.scanner.index;\n\t            this.startMarker.line = this.scanner.lineNumber;\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        }\n\t        var next = this.scanner.lex();\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\n\t                next.type = 4 /* Keyword */;\n\t            }\n\t        }\n\t        this.lookahead = next;\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\n\t            this.tokens.push(this.convertToken(next));\n\t        }\n\t        return token;\n\t    };\n\t    Parser.prototype.nextRegexToken = function () {\n\t        this.collectComments();\n\t        var token = this.scanner.scanRegExp();\n\t        if (this.config.tokens) {\n\t            // Pop the previous token, '/' or '/='\n\t            // This is added from the lookahead token.\n\t            this.tokens.pop();\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        // Prime the next lookahead.\n\t        this.lookahead = token;\n\t        this.nextToken();\n\t        return token;\n\t    };\n\t    Parser.prototype.createNode = function () {\n\t        return {\n\t            index: this.startMarker.index,\n\t            line: this.startMarker.line,\n\t            column: this.startMarker.column\n\t        };\n\t    };\n\t    Parser.prototype.startNode = function (token, lastLineStart) {\n\t        if (lastLineStart === void 0) { lastLineStart = 0; }\n\t        var column = token.start - token.lineStart;\n\t        var line = token.lineNumber;\n\t        if (column < 0) {\n\t            column += lastLineStart;\n\t            line--;\n\t        }\n\t        return {\n\t            index: token.start,\n\t            line: line,\n\t            column: column\n\t        };\n\t    };\n\t    Parser.prototype.finalize = function (marker, node) {\n\t        if (this.config.range) {\n\t            node.range = [marker.index, this.lastMarker.index];\n\t        }\n\t        if (this.config.loc) {\n\t            node.loc = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column\n\t                }\n\t            };\n\t            if (this.config.source) {\n\t                node.loc.source = this.config.source;\n\t            }\n\t        }\n\t        if (this.delegate) {\n\t            var metadata = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                    offset: marker.index\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column,\n\t                    offset: this.lastMarker.index\n\t                }\n\t            };\n\t            this.delegate(node, metadata);\n\t        }\n\t        return node;\n\t    };\n\t    // Expect the next token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expect = function (value) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\n\t    Parser.prototype.expectCommaSeparator = function () {\n\t        if (this.config.tolerant) {\n\t            var token = this.lookahead;\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\n\t                this.nextToken();\n\t            }\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\n\t                this.nextToken();\n\t                this.tolerateUnexpectedToken(token);\n\t            }\n\t            else {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\n\t            }\n\t        }\n\t        else {\n\t            this.expect(',');\n\t        }\n\t    };\n\t    // Expect the next token to match the specified keyword.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expectKeyword = function (keyword) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next token matches the specified punctuator.\n\t    Parser.prototype.match = function (value) {\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\n\t    };\n\t    // Return true if the next token matches the specified keyword\n\t    Parser.prototype.matchKeyword = function (keyword) {\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token matches the specified contextual keyword\n\t    // (where an identifier is sometimes a keyword depending on the context)\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token is an assignment operator\n\t    Parser.prototype.matchAssign = function () {\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\n\t            return false;\n\t        }\n\t        var op = this.lookahead.value;\n\t        return op === '=' ||\n\t            op === '*=' ||\n\t            op === '**=' ||\n\t            op === '/=' ||\n\t            op === '%=' ||\n\t            op === '+=' ||\n\t            op === '-=' ||\n\t            op === '<<=' ||\n\t            op === '>>=' ||\n\t            op === '>>>=' ||\n\t            op === '&=' ||\n\t            op === '^=' ||\n\t            op === '|=';\n\t    };\n\t    // Cover grammar support.\n\t    //\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\n\t    //\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\n\t    // after the outermost pair is closed. They are:\n\t    //\n\t    //   1. AssignmentExpression\n\t    //   2. BindingElements\n\t    //   3. AssignmentTargets\n\t    //\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\n\t    // binding element or assignment target.\n\t    //\n\t    // The three productions have the relationship:\n\t    //\n\t    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\n\t    //\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\n\t    //\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\n\t    // the CoverInitializedName check is conducted.\n\t    //\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\n\t    // pattern. The CoverInitializedName check is deferred.\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        if (this.context.firstCoverInitializedNameError !== null) {\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\n\t        }\n\t        this.context.isBindingElement = previousIsBindingElement;\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.consumeSemicolon = function () {\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else if (!this.hasLineTerminator) {\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.lastMarker.index = this.startMarker.index;\n\t            this.lastMarker.line = this.startMarker.line;\n\t            this.lastMarker.column = this.startMarker.column;\n\t        }\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\n\t    Parser.prototype.parsePrimaryExpression = function () {\n\t        var node = this.createNode();\n\t        var expr;\n\t        var token, raw;\n\t        switch (this.lookahead.type) {\n\t            case 3 /* Identifier */:\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\n\t                    this.tolerateUnexpectedToken(this.lookahead);\n\t                }\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                break;\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t                if (this.context.strict && this.lookahead.octal) {\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 1 /* BooleanLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\n\t                break;\n\t            case 5 /* NullLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\n\t                break;\n\t            case 10 /* Template */:\n\t                expr = this.parseTemplateLiteral();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                switch (this.lookahead.value) {\n\t                    case '(':\n\t                        this.context.isBindingElement = false;\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\n\t                        break;\n\t                    case '[':\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\n\t                        break;\n\t                    case '{':\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\n\t                        break;\n\t                    case '/':\n\t                    case '/=':\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                        this.scanner.index = this.startMarker.index;\n\t                        token = this.nextRegexToken();\n\t                        raw = this.getTokenRaw(token);\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\n\t                        break;\n\t                    default:\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                }\n\t                break;\n\t            case 4 /* Keyword */:\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\n\t                    expr = this.parseIdentifierName();\n\t                }\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                }\n\t                else {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    if (this.matchKeyword('function')) {\n\t                        expr = this.parseFunctionExpression();\n\t                    }\n\t                    else if (this.matchKeyword('this')) {\n\t                        this.nextToken();\n\t                        expr = this.finalize(node, new Node.ThisExpression());\n\t                    }\n\t                    else if (this.matchKeyword('class')) {\n\t                        expr = this.parseClassExpression();\n\t                    }\n\t                    else {\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                    }\n\t                }\n\t                break;\n\t            default:\n\t                expr = this.throwUnexpectedToken(this.nextToken());\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\n\t    Parser.prototype.parseSpreadElement = function () {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t        return this.finalize(node, new Node.SpreadElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayInitializer = function () {\n\t        var node = this.createNode();\n\t        var elements = [];\n\t        this.expect('[');\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else if (this.match('...')) {\n\t                var element = this.parseSpreadElement();\n\t                if (!this.match(']')) {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    this.expect(',');\n\t                }\n\t                elements.push(element);\n\t            }\n\t            else {\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\n\t    Parser.prototype.parsePropertyMethod = function (params) {\n\t        this.context.isAssignmentTarget = false;\n\t        this.context.isBindingElement = false;\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = params.simple;\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\n\t        if (this.context.strict && params.firstRestricted) {\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\n\t        }\n\t        if (this.context.strict && params.stricted) {\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        return body;\n\t    };\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\n\t        var isGenerator = false;\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        var previousAwait = this.context.await;\n\t        this.context.allowYield = false;\n\t        this.context.await = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        this.context.await = previousAwait;\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\n\t    };\n\t    Parser.prototype.parseObjectPropertyKey = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var key;\n\t        switch (token.type) {\n\t            case 8 /* StringLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t                if (this.context.strict && token.octal) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                var raw = this.getTokenRaw(token);\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 3 /* Identifier */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 4 /* Keyword */:\n\t                key = this.finalize(node, new Node.Identifier(token.value));\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                if (token.value === '[') {\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    this.expect(']');\n\t                }\n\t                else {\n\t                    key = this.throwUnexpectedToken(token);\n\t                }\n\t                break;\n\t            default:\n\t                key = this.throwUnexpectedToken(token);\n\t        }\n\t        return key;\n\t    };\n\t    Parser.prototype.isPropertyKey = function (key, value) {\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\n\t    };\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\n\t        var node = this.createNode();\n\t        var token = this.lookahead;\n\t        var kind;\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var shorthand = false;\n\t        var isAsync = false;\n\t        if (token.type === 3 /* Identifier */) {\n\t            var id = token.value;\n\t            this.nextToken();\n\t            computed = this.match('[');\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\n\t                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\n\t        }\n\t        else if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\n\t            kind = 'get';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.context.allowYield = false;\n\t            value = this.parseGetterMethod();\n\t        }\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\n\t            kind = 'set';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseSetterMethod();\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        else {\n\t            if (!key) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            kind = 'init';\n\t            if (this.match(':') && !isAsync) {\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\n\t                    if (hasProto.value) {\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\n\t                    }\n\t                    hasProto.value = true;\n\t                }\n\t                this.nextToken();\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t            }\n\t            else if (this.match('(')) {\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t                method = true;\n\t            }\n\t            else if (token.type === 3 /* Identifier */) {\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\n\t                if (this.match('=')) {\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\n\t                    this.nextToken();\n\t                    shorthand = true;\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\n\t                }\n\t                else {\n\t                    shorthand = true;\n\t                    value = id;\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectInitializer = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var properties = [];\n\t        var hasProto = { value: false };\n\t        while (!this.match('}')) {\n\t            properties.push(this.parseObjectProperty(hasProto));\n\t            if (!this.match('}')) {\n\t                this.expectCommaSeparator();\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\n\t    Parser.prototype.parseTemplateHead = function () {\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateElement = function () {\n\t        if (this.lookahead.type !== 10 /* Template */) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateLiteral = function () {\n\t        var node = this.createNode();\n\t        var expressions = [];\n\t        var quasis = [];\n\t        var quasi = this.parseTemplateHead();\n\t        quasis.push(quasi);\n\t        while (!quasi.tail) {\n\t            expressions.push(this.parseExpression());\n\t            quasi = this.parseTemplateElement();\n\t            quasis.push(quasi);\n\t        }\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t            case syntax_1.Syntax.MemberExpression:\n\t            case syntax_1.Syntax.RestElement:\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                break;\n\t            case syntax_1.Syntax.SpreadElement:\n\t                expr.type = syntax_1.Syntax.RestElement;\n\t                this.reinterpretExpressionAsPattern(expr.argument);\n\t                break;\n\t            case syntax_1.Syntax.ArrayExpression:\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\n\t                for (var i = 0; i < expr.elements.length; i++) {\n\t                    if (expr.elements[i] !== null) {\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectExpression:\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\n\t                for (var i = 0; i < expr.properties.length; i++) {\n\t                    this.reinterpretExpressionAsPattern(expr.properties[i].value);\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.AssignmentExpression:\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\n\t                delete expr.operator;\n\t                this.reinterpretExpressionAsPattern(expr.left);\n\t                break;\n\t        }\n\t    };\n\t    Parser.prototype.parseGroupExpression = function () {\n\t        var expr;\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.nextToken();\n\t            if (!this.match('=>')) {\n\t                this.expect('=>');\n\t            }\n\t            expr = {\n\t                type: ArrowParameterPlaceHolder,\n\t                params: [],\n\t                async: false\n\t            };\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var params = [];\n\t            if (this.match('...')) {\n\t                expr = this.parseRestElement(params);\n\t                this.expect(')');\n\t                if (!this.match('=>')) {\n\t                    this.expect('=>');\n\t                }\n\t                expr = {\n\t                    type: ArrowParameterPlaceHolder,\n\t                    params: [expr],\n\t                    async: false\n\t                };\n\t            }\n\t            else {\n\t                var arrow = false;\n\t                this.context.isBindingElement = true;\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                if (this.match(',')) {\n\t                    var expressions = [];\n\t                    this.context.isAssignmentTarget = false;\n\t                    expressions.push(expr);\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\n\t                        if (!this.match(',')) {\n\t                            break;\n\t                        }\n\t                        this.nextToken();\n\t                        if (this.match(')')) {\n\t                            this.nextToken();\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else if (this.match('...')) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            expressions.push(this.parseRestElement(params));\n\t                            this.expect(')');\n\t                            if (!this.match('=>')) {\n\t                                this.expect('=>');\n\t                            }\n\t                            this.context.isBindingElement = false;\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else {\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        if (arrow) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!arrow) {\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t                    }\n\t                }\n\t                if (!arrow) {\n\t                    this.expect(')');\n\t                    if (this.match('=>')) {\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: [expr],\n\t                                async: false\n\t                            };\n\t                        }\n\t                        if (!arrow) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\n\t                                }\n\t                            }\n\t                            else {\n\t                                this.reinterpretExpressionAsPattern(expr);\n\t                            }\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: parameters,\n\t                                async: false\n\t                            };\n\t                        }\n\t                    }\n\t                    this.context.isBindingElement = false;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\n\t    Parser.prototype.parseArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.isIdentifierName = function (token) {\n\t        return token.type === 3 /* Identifier */ ||\n\t            token.type === 4 /* Keyword */ ||\n\t            token.type === 1 /* BooleanLiteral */ ||\n\t            token.type === 5 /* NullLiteral */;\n\t    };\n\t    Parser.prototype.parseIdentifierName = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (!this.isIdentifierName(token)) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseNewExpression = function () {\n\t        var node = this.createNode();\n\t        var id = this.parseIdentifierName();\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\n\t        var expr;\n\t        if (this.match('.')) {\n\t            this.nextToken();\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\n\t                var property = this.parseIdentifierName();\n\t                expr = new Node.MetaProperty(id, property);\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\n\t            var args = this.match('(') ? this.parseArguments() : [];\n\t            expr = new Node.NewExpression(callee, args);\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return this.finalize(node, expr);\n\t    };\n\t    Parser.prototype.parseAsyncArgument = function () {\n\t        var arg = this.parseAssignmentExpression();\n\t        this.context.firstCoverInitializedNameError = null;\n\t        return arg;\n\t    };\n\t    Parser.prototype.parseAsyncArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\n\t        var startToken = this.lookahead;\n\t        var maybeAsync = this.matchContextualKeyword('async');\n\t        var previousAllowIn = this.context.allowIn;\n\t        this.context.allowIn = true;\n\t        var expr;\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\n\t            expr = this.createNode();\n\t            this.nextToken();\n\t            expr = this.finalize(expr, new Node.Super());\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        }\n\t        while (true) {\n\t            if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('(')) {\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = false;\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\n\t                if (asyncArrow && this.match('=>')) {\n\t                    for (var i = 0; i < args.length; ++i) {\n\t                        this.reinterpretExpressionAsPattern(args[i]);\n\t                    }\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: args,\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            else if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        this.context.allowIn = previousAllowIn;\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseSuper = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('super');\n\t        if (!this.match('[') && !this.match('.')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return this.finalize(node, new Node.Super());\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\n\t        var node = this.startNode(this.lookahead);\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        while (true) {\n\t            if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\n\t    Parser.prototype.parseUpdateExpression = function () {\n\t        var expr;\n\t        var startToken = this.lookahead;\n\t        if (this.match('++') || this.match('--')) {\n\t            var node = this.startNode(startToken);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\n\t            }\n\t            if (!this.context.isAssignmentTarget) {\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t            }\n\t            var prefix = true;\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\n\t                if (this.match('++') || this.match('--')) {\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\n\t                    }\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    var operator = this.nextToken().value;\n\t                    var prefix = false;\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\n\t    Parser.prototype.parseAwaitExpression = function () {\n\t        var node = this.createNode();\n\t        this.nextToken();\n\t        var argument = this.parseUnaryExpression();\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\n\t    };\n\t    Parser.prototype.parseUnaryExpression = function () {\n\t        var expr;\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\n\t            var node = this.startNode(this.lookahead);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\n\t            }\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\n\t            expr = this.parseAwaitExpression();\n\t        }\n\t        else {\n\t            expr = this.parseUpdateExpression();\n\t        }\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseExponentiationExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\n\t    Parser.prototype.binaryPrecedence = function (token) {\n\t        var op = token.value;\n\t        var precedence;\n\t        if (token.type === 7 /* Punctuator */) {\n\t            precedence = this.operatorPrecedence[op] || 0;\n\t        }\n\t        else if (token.type === 4 /* Keyword */) {\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\n\t        }\n\t        else {\n\t            precedence = 0;\n\t        }\n\t        return precedence;\n\t    };\n\t    Parser.prototype.parseBinaryExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\n\t        var token = this.lookahead;\n\t        var prec = this.binaryPrecedence(token);\n\t        if (prec > 0) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var markers = [startToken, this.lookahead];\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            var stack = [left, token.value, right];\n\t            var precedences = [prec];\n\t            while (true) {\n\t                prec = this.binaryPrecedence(this.lookahead);\n\t                if (prec <= 0) {\n\t                    break;\n\t                }\n\t                // Reduce: make a binary expression from the three topmost entries.\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\n\t                    right = stack.pop();\n\t                    var operator = stack.pop();\n\t                    precedences.pop();\n\t                    left = stack.pop();\n\t                    markers.pop();\n\t                    var node = this.startNode(markers[markers.length - 1]);\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\n\t                }\n\t                // Shift.\n\t                stack.push(this.nextToken().value);\n\t                precedences.push(prec);\n\t                markers.push(this.lookahead);\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\n\t            }\n\t            // Final reduce to clean-up the stack.\n\t            var i = stack.length - 1;\n\t            expr = stack[i];\n\t            var lastMarker = markers.pop();\n\t            while (i > 1) {\n\t                var marker = markers.pop();\n\t                var lastLineStart = lastMarker && lastMarker.lineStart;\n\t                var node = this.startNode(marker, lastLineStart);\n\t                var operator = stack[i - 1];\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\n\t                i -= 2;\n\t                lastMarker = marker;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\n\t    Parser.prototype.parseConditionalExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\n\t        if (this.match('?')) {\n\t            this.nextToken();\n\t            var previousAllowIn = this.context.allowIn;\n\t            this.context.allowIn = true;\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowIn = previousAllowIn;\n\t            this.expect(':');\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\n\t    Parser.prototype.checkPatternParam = function (options, param) {\n\t        switch (param.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                this.validateParam(options, param, param.name);\n\t                break;\n\t            case syntax_1.Syntax.RestElement:\n\t                this.checkPatternParam(options, param.argument);\n\t                break;\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                this.checkPatternParam(options, param.left);\n\t                break;\n\t            case syntax_1.Syntax.ArrayPattern:\n\t                for (var i = 0; i < param.elements.length; i++) {\n\t                    if (param.elements[i] !== null) {\n\t                        this.checkPatternParam(options, param.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectPattern:\n\t                for (var i = 0; i < param.properties.length; i++) {\n\t                    this.checkPatternParam(options, param.properties[i].value);\n\t                }\n\t                break;\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t    };\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\n\t        var params = [expr];\n\t        var options;\n\t        var asyncArrow = false;\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                break;\n\t            case ArrowParameterPlaceHolder:\n\t                params = expr.params;\n\t                asyncArrow = expr.async;\n\t                break;\n\t            default:\n\t                return null;\n\t        }\n\t        options = {\n\t            simple: true,\n\t            paramSet: {}\n\t        };\n\t        for (var i = 0; i < params.length; ++i) {\n\t            var param = params[i];\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\n\t                    if (param.right.argument) {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                    param.right.type = syntax_1.Syntax.Identifier;\n\t                    param.right.name = 'yield';\n\t                    delete param.right.argument;\n\t                    delete param.right.delegate;\n\t                }\n\t            }\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.checkPatternParam(options, param);\n\t            params[i] = param;\n\t        }\n\t        if (this.context.strict || !this.context.allowYield) {\n\t            for (var i = 0; i < params.length; ++i) {\n\t                var param = params[i];\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t                }\n\t            }\n\t        }\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\n\t            this.throwUnexpectedToken(token, options.message);\n\t        }\n\t        return {\n\t            simple: options.simple,\n\t            params: params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.parseAssignmentExpression = function () {\n\t        var expr;\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\n\t            expr = this.parseYieldExpression();\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var token = startToken;\n\t            expr = this.parseConditionalExpression();\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\n\t                    var arg = this.parsePrimaryExpression();\n\t                    this.reinterpretExpressionAsPattern(arg);\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: [arg],\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                var isAsync = expr.async;\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\n\t                if (list) {\n\t                    if (this.hasLineTerminator) {\n\t                        this.tolerateUnexpectedToken(this.lookahead);\n\t                    }\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                    var previousStrict = this.context.strict;\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t                    this.context.allowStrictDirective = list.simple;\n\t                    var previousAllowYield = this.context.allowYield;\n\t                    var previousAwait = this.context.await;\n\t                    this.context.allowYield = true;\n\t                    this.context.await = isAsync;\n\t                    var node = this.startNode(startToken);\n\t                    this.expect('=>');\n\t                    var body = void 0;\n\t                    if (this.match('{')) {\n\t                        var previousAllowIn = this.context.allowIn;\n\t                        this.context.allowIn = true;\n\t                        body = this.parseFunctionSourceElements();\n\t                        this.context.allowIn = previousAllowIn;\n\t                    }\n\t                    else {\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    }\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\n\t                    if (this.context.strict && list.firstRestricted) {\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\n\t                    }\n\t                    if (this.context.strict && list.stricted) {\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\n\t                    }\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\n\t                    this.context.strict = previousStrict;\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\n\t                    this.context.allowYield = previousAllowYield;\n\t                    this.context.await = previousAwait;\n\t                }\n\t            }\n\t            else {\n\t                if (this.matchAssign()) {\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\n\t                        var id = expr;\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\n\t                        }\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t                        }\n\t                    }\n\t                    if (!this.match('=')) {\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                    }\n\t                    else {\n\t                        this.reinterpretExpressionAsPattern(expr);\n\t                    }\n\t                    token = this.nextToken();\n\t                    var operator = token.value;\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\n\t    Parser.prototype.parseExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        if (this.match(',')) {\n\t            var expressions = [];\n\t            expressions.push(expr);\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                if (!this.match(',')) {\n\t                    break;\n\t                }\n\t                this.nextToken();\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t            }\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-block\n\t    Parser.prototype.parseStatementListItem = function () {\n\t        var statement;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.isBindingElement = true;\n\t        if (this.lookahead.type === 4 /* Keyword */) {\n\t            switch (this.lookahead.value) {\n\t                case 'export':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\n\t                    }\n\t                    statement = this.parseExportDeclaration();\n\t                    break;\n\t                case 'import':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\n\t                    }\n\t                    statement = this.parseImportDeclaration();\n\t                    break;\n\t                case 'const':\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'function':\n\t                    statement = this.parseFunctionDeclaration();\n\t                    break;\n\t                case 'class':\n\t                    statement = this.parseClassDeclaration();\n\t                    break;\n\t                case 'let':\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\n\t                    break;\n\t                default:\n\t                    statement = this.parseStatement();\n\t                    break;\n\t            }\n\t        }\n\t        else {\n\t            statement = this.parseStatement();\n\t        }\n\t        return statement;\n\t    };\n\t    Parser.prototype.parseBlock = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var block = [];\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            block.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.BlockStatement(block));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, kind);\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (kind === 'const') {\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\n\t                if (this.match('=')) {\n\t                    this.nextToken();\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                }\n\t                else {\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\n\t                }\n\t            }\n\t        }\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\n\t            this.expect('=');\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseBindingList = function (kind, options) {\n\t        var list = [this.parseLexicalBinding(kind, options)];\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseLexicalBinding(kind, options));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.isLexicalDeclaration = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.scanner.lex();\n\t        this.scanner.restoreState(state);\n\t        return (next.type === 3 /* Identifier */) ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\n\t    };\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var kind = this.nextToken().value;\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\n\t        var declarations = this.parseBindingList(kind, options);\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params, kind);\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('[');\n\t        var elements = [];\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else {\n\t                if (this.match('...')) {\n\t                    elements.push(this.parseBindingRestElement(params, kind));\n\t                    break;\n\t                }\n\t                else {\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\n\t                }\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\n\t    };\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var computed = false;\n\t        var shorthand = false;\n\t        var method = false;\n\t        var key;\n\t        var value;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            var keyToken = this.lookahead;\n\t            key = this.parseVariableIdentifier();\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\n\t            if (this.match('=')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                this.nextToken();\n\t                var expr = this.parseAssignmentExpression();\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\n\t            }\n\t            else if (!this.match(':')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                value = init;\n\t            }\n\t            else {\n\t                this.expect(':');\n\t                value = this.parsePatternWithDefault(params, kind);\n\t            }\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.expect(':');\n\t            value = this.parsePatternWithDefault(params, kind);\n\t        }\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var properties = [];\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            properties.push(this.parsePropertyPattern(params, kind));\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\n\t    };\n\t    Parser.prototype.parsePattern = function (params, kind) {\n\t        var pattern;\n\t        if (this.match('[')) {\n\t            pattern = this.parseArrayPattern(params, kind);\n\t        }\n\t        else if (this.match('{')) {\n\t            pattern = this.parseObjectPattern(params, kind);\n\t        }\n\t        else {\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\n\t            }\n\t            params.push(this.lookahead);\n\t            pattern = this.parseVariableIdentifier(kind);\n\t        }\n\t        return pattern;\n\t    };\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\n\t        var startToken = this.lookahead;\n\t        var pattern = this.parsePattern(params, kind);\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = true;\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowYield = previousAllowYield;\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\n\t        }\n\t        return pattern;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\n\t            if (this.context.strict) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else if (!this.context.allowYield) {\n\t                this.throwUnexpectedToken(token);\n\t            }\n\t        }\n\t        else if (token.type !== 3 /* Identifier */) {\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else {\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\n\t                    this.throwUnexpectedToken(token);\n\t                }\n\t            }\n\t        }\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\n\t            this.tolerateUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, 'var');\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\n\t            this.expect('=');\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\n\t        var opt = { inFor: options.inFor };\n\t        var list = [];\n\t        list.push(this.parseVariableDeclaration(opt));\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseVariableDeclaration(opt));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.parseVariableStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('var');\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\n\t    Parser.prototype.parseEmptyStatement = function () {\n\t        var node = this.createNode();\n\t        this.expect(';');\n\t        return this.finalize(node, new Node.EmptyStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\n\t    Parser.prototype.parseExpressionStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\n\t    Parser.prototype.parseIfClause = function () {\n\t        if (this.context.strict && this.matchKeyword('function')) {\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\n\t        }\n\t        return this.parseStatement();\n\t    };\n\t    Parser.prototype.parseIfStatement = function () {\n\t        var node = this.createNode();\n\t        var consequent;\n\t        var alternate = null;\n\t        this.expectKeyword('if');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            consequent = this.parseIfClause();\n\t            if (this.matchKeyword('else')) {\n\t                this.nextToken();\n\t                alternate = this.parseIfClause();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\n\t    Parser.prototype.parseDoWhileStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('do');\n\t        var previousInIteration = this.context.inIteration;\n\t        this.context.inIteration = true;\n\t        var body = this.parseStatement();\n\t        this.context.inIteration = previousInIteration;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\n\t    Parser.prototype.parseWhileStatement = function () {\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.parseStatement();\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\n\t    Parser.prototype.parseForStatement = function () {\n\t        var init = null;\n\t        var test = null;\n\t        var update = null;\n\t        var forIn = true;\n\t        var left, right;\n\t        var node = this.createNode();\n\t        this.expectKeyword('for');\n\t        this.expect('(');\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            if (this.matchKeyword('var')) {\n\t                init = this.createNode();\n\t                this.nextToken();\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\n\t                this.context.allowIn = previousAllowIn;\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\n\t                    var decl = declarations[0];\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\n\t                    }\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.expect(';');\n\t                }\n\t            }\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\n\t                init = this.createNode();\n\t                var kind = this.nextToken().value;\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\n\t                    init = this.finalize(init, new Node.Identifier(kind));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else {\n\t                    var previousAllowIn = this.context.allowIn;\n\t                    this.context.allowIn = false;\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\n\t                    this.context.allowIn = previousAllowIn;\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseExpression();\n\t                        init = null;\n\t                    }\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseAssignmentExpression();\n\t                        init = null;\n\t                        forIn = false;\n\t                    }\n\t                    else {\n\t                        this.consumeSemicolon();\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                var initStartToken = this.lookahead;\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                this.context.allowIn = previousAllowIn;\n\t                if (this.matchKeyword('in')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (this.matchContextualKeyword('of')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    if (this.match(',')) {\n\t                        var initSeq = [init];\n\t                        while (this.match(',')) {\n\t                            this.nextToken();\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\n\t                    }\n\t                    this.expect(';');\n\t                }\n\t            }\n\t        }\n\t        if (typeof left === 'undefined') {\n\t            if (!this.match(';')) {\n\t                test = this.parseExpression();\n\t            }\n\t            this.expect(';');\n\t            if (!this.match(')')) {\n\t                update = this.parseExpression();\n\t            }\n\t        }\n\t        var body;\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.isolateCoverGrammar(this.parseStatement);\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return (typeof left === 'undefined') ?\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\n\t    Parser.prototype.parseContinueStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('continue');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            label = id;\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration) {\n\t            this.throwError(messages_1.Messages.IllegalContinue);\n\t        }\n\t        return this.finalize(node, new Node.ContinueStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\n\t    Parser.prototype.parseBreakStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('break');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t            label = id;\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\n\t            this.throwError(messages_1.Messages.IllegalBreak);\n\t        }\n\t        return this.finalize(node, new Node.BreakStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\n\t    Parser.prototype.parseReturnStatement = function () {\n\t        if (!this.context.inFunctionBody) {\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('return');\n\t        var hasArgument = (!this.match(';') && !this.match('}') &&\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\n\t            this.lookahead.type === 8 /* StringLiteral */ ||\n\t            this.lookahead.type === 10 /* Template */;\n\t        var argument = hasArgument ? this.parseExpression() : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\n\t    Parser.prototype.parseWithStatement = function () {\n\t        if (this.context.strict) {\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\n\t        }\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('with');\n\t        this.expect('(');\n\t        var object = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            body = this.parseStatement();\n\t        }\n\t        return this.finalize(node, new Node.WithStatement(object, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\n\t    Parser.prototype.parseSwitchCase = function () {\n\t        var node = this.createNode();\n\t        var test;\n\t        if (this.matchKeyword('default')) {\n\t            this.nextToken();\n\t            test = null;\n\t        }\n\t        else {\n\t            this.expectKeyword('case');\n\t            test = this.parseExpression();\n\t        }\n\t        this.expect(':');\n\t        var consequent = [];\n\t        while (true) {\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\n\t                break;\n\t            }\n\t            consequent.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\n\t    };\n\t    Parser.prototype.parseSwitchStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('switch');\n\t        this.expect('(');\n\t        var discriminant = this.parseExpression();\n\t        this.expect(')');\n\t        var previousInSwitch = this.context.inSwitch;\n\t        this.context.inSwitch = true;\n\t        var cases = [];\n\t        var defaultFound = false;\n\t        this.expect('{');\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            var clause = this.parseSwitchCase();\n\t            if (clause.test === null) {\n\t                if (defaultFound) {\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\n\t                }\n\t                defaultFound = true;\n\t            }\n\t            cases.push(clause);\n\t        }\n\t        this.expect('}');\n\t        this.context.inSwitch = previousInSwitch;\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\n\t    Parser.prototype.parseLabelledStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var statement;\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\n\t            this.nextToken();\n\t            var id = expr;\n\t            var key = '$' + id.name;\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\n\t            }\n\t            this.context.labelSet[key] = true;\n\t            var body = void 0;\n\t            if (this.matchKeyword('class')) {\n\t                this.tolerateUnexpectedToken(this.lookahead);\n\t                body = this.parseClassDeclaration();\n\t            }\n\t            else if (this.matchKeyword('function')) {\n\t                var token = this.lookahead;\n\t                var declaration = this.parseFunctionDeclaration();\n\t                if (this.context.strict) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\n\t                }\n\t                else if (declaration.generator) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\n\t                }\n\t                body = declaration;\n\t            }\n\t            else {\n\t                body = this.parseStatement();\n\t            }\n\t            delete this.context.labelSet[key];\n\t            statement = new Node.LabeledStatement(id, body);\n\t        }\n\t        else {\n\t            this.consumeSemicolon();\n\t            statement = new Node.ExpressionStatement(expr);\n\t        }\n\t        return this.finalize(node, statement);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\n\t    Parser.prototype.parseThrowStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('throw');\n\t        if (this.hasLineTerminator) {\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\n\t        }\n\t        var argument = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\n\t    Parser.prototype.parseCatchClause = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('catch');\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        var params = [];\n\t        var param = this.parsePattern(params);\n\t        var paramMap = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var key = '$' + params[i].value;\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\n\t            }\n\t            paramMap[key] = true;\n\t        }\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(param.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\n\t            }\n\t        }\n\t        this.expect(')');\n\t        var body = this.parseBlock();\n\t        return this.finalize(node, new Node.CatchClause(param, body));\n\t    };\n\t    Parser.prototype.parseFinallyClause = function () {\n\t        this.expectKeyword('finally');\n\t        return this.parseBlock();\n\t    };\n\t    Parser.prototype.parseTryStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('try');\n\t        var block = this.parseBlock();\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\n\t        if (!handler && !finalizer) {\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\n\t        }\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\n\t    Parser.prototype.parseDebuggerStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('debugger');\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.DebuggerStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\n\t    Parser.prototype.parseStatement = function () {\n\t        var statement;\n\t        switch (this.lookahead.type) {\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t            case 10 /* Template */:\n\t            case 9 /* RegularExpression */:\n\t                statement = this.parseExpressionStatement();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                var value = this.lookahead.value;\n\t                if (value === '{') {\n\t                    statement = this.parseBlock();\n\t                }\n\t                else if (value === '(') {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                else if (value === ';') {\n\t                    statement = this.parseEmptyStatement();\n\t                }\n\t                else {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                break;\n\t            case 3 /* Identifier */:\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\n\t                break;\n\t            case 4 /* Keyword */:\n\t                switch (this.lookahead.value) {\n\t                    case 'break':\n\t                        statement = this.parseBreakStatement();\n\t                        break;\n\t                    case 'continue':\n\t                        statement = this.parseContinueStatement();\n\t                        break;\n\t                    case 'debugger':\n\t                        statement = this.parseDebuggerStatement();\n\t                        break;\n\t                    case 'do':\n\t                        statement = this.parseDoWhileStatement();\n\t                        break;\n\t                    case 'for':\n\t                        statement = this.parseForStatement();\n\t                        break;\n\t                    case 'function':\n\t                        statement = this.parseFunctionDeclaration();\n\t                        break;\n\t                    case 'if':\n\t                        statement = this.parseIfStatement();\n\t                        break;\n\t                    case 'return':\n\t                        statement = this.parseReturnStatement();\n\t                        break;\n\t                    case 'switch':\n\t                        statement = this.parseSwitchStatement();\n\t                        break;\n\t                    case 'throw':\n\t                        statement = this.parseThrowStatement();\n\t                        break;\n\t                    case 'try':\n\t                        statement = this.parseTryStatement();\n\t                        break;\n\t                    case 'var':\n\t                        statement = this.parseVariableStatement();\n\t                        break;\n\t                    case 'while':\n\t                        statement = this.parseWhileStatement();\n\t                        break;\n\t                    case 'with':\n\t                        statement = this.parseWithStatement();\n\t                        break;\n\t                    default:\n\t                        statement = this.parseExpressionStatement();\n\t                        break;\n\t                }\n\t                break;\n\t            default:\n\t                statement = this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return statement;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\n\t    Parser.prototype.parseFunctionSourceElements = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var body = this.parseDirectivePrologues();\n\t        var previousLabelSet = this.context.labelSet;\n\t        var previousInIteration = this.context.inIteration;\n\t        var previousInSwitch = this.context.inSwitch;\n\t        var previousInFunctionBody = this.context.inFunctionBody;\n\t        this.context.labelSet = {};\n\t        this.context.inIteration = false;\n\t        this.context.inSwitch = false;\n\t        this.context.inFunctionBody = true;\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        this.context.labelSet = previousLabelSet;\n\t        this.context.inIteration = previousInIteration;\n\t        this.context.inSwitch = previousInSwitch;\n\t        this.context.inFunctionBody = previousInFunctionBody;\n\t        return this.finalize(node, new Node.BlockStatement(body));\n\t    };\n\t    Parser.prototype.validateParam = function (options, param, name) {\n\t        var key = '$' + name;\n\t        if (this.context.strict) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        else if (!options.firstRestricted) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictReservedWord;\n\t            }\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        if (typeof Object.defineProperty === 'function') {\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\n\t        }\n\t        else {\n\t            options.paramSet[key] = true;\n\t        }\n\t    };\n\t    Parser.prototype.parseRestElement = function (params) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params);\n\t        if (this.match('=')) {\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\n\t        }\n\t        if (!this.match(')')) {\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\n\t        }\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseFormalParameter = function (options) {\n\t        var params = [];\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\n\t        for (var i = 0; i < params.length; i++) {\n\t            this.validateParam(options, params[i], params[i].value);\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t        options.params.push(param);\n\t    };\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\n\t        var options;\n\t        options = {\n\t            simple: true,\n\t            params: [],\n\t            firstRestricted: firstRestricted\n\t        };\n\t        this.expect('(');\n\t        if (!this.match(')')) {\n\t            options.paramSet = {};\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                this.parseFormalParameter(options);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expect(',');\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return {\n\t            simple: options.simple,\n\t            params: options.params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.matchAsyncFunction = function () {\n\t        var match = this.matchContextualKeyword('async');\n\t        if (match) {\n\t            var state = this.scanner.saveState();\n\t            this.scanner.scanComments();\n\t            var next = this.scanner.lex();\n\t            this.scanner.restoreState(state);\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\n\t        }\n\t        return match;\n\t    };\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted = null;\n\t        if (!identifierIsOptional || !this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\n\t    };\n\t    Parser.prototype.parseFunctionExpression = function () {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted;\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        if (!this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\n\t    Parser.prototype.parseDirective = function () {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\n\t    };\n\t    Parser.prototype.parseDirectivePrologues = function () {\n\t        var firstRestricted = null;\n\t        var body = [];\n\t        while (true) {\n\t            var token = this.lookahead;\n\t            if (token.type !== 8 /* StringLiteral */) {\n\t                break;\n\t            }\n\t            var statement = this.parseDirective();\n\t            body.push(statement);\n\t            var directive = statement.directive;\n\t            if (typeof directive !== 'string') {\n\t                break;\n\t            }\n\t            if (directive === 'use strict') {\n\t                this.context.strict = true;\n\t                if (firstRestricted) {\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                if (!this.context.allowStrictDirective) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\n\t                }\n\t            }\n\t            else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t        return body;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\n\t        switch (token.type) {\n\t            case 3 /* Identifier */:\n\t            case 8 /* StringLiteral */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 4 /* Keyword */:\n\t                return true;\n\t            case 7 /* Punctuator */:\n\t                return token.value === '[';\n\t        }\n\t        return false;\n\t    };\n\t    Parser.prototype.parseGetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length > 0) {\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseSetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length !== 1) {\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\n\t        }\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseGeneratorMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = true;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        this.context.allowYield = false;\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\n\t    Parser.prototype.isStartOfExpression = function () {\n\t        var start = true;\n\t        var value = this.lookahead.value;\n\t        switch (this.lookahead.type) {\n\t            case 7 /* Punctuator */:\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\n\t                    (value === '+') || (value === '-') ||\n\t                    (value === '!') || (value === '~') ||\n\t                    (value === '++') || (value === '--') ||\n\t                    (value === '/') || (value === '/='); // regular expression literal\n\t                break;\n\t            case 4 /* Keyword */:\n\t                start = (value === 'class') || (value === 'delete') ||\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\n\t                    (value === 'void') || (value === 'yield');\n\t                break;\n\t        }\n\t        return start;\n\t    };\n\t    Parser.prototype.parseYieldExpression = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('yield');\n\t        var argument = null;\n\t        var delegate = false;\n\t        if (!this.hasLineTerminator) {\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = false;\n\t            delegate = this.match('*');\n\t            if (delegate) {\n\t                this.nextToken();\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            else if (this.isStartOfExpression()) {\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            this.context.allowYield = previousAllowYield;\n\t        }\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var kind = '';\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var isStatic = false;\n\t        var isAsync = false;\n\t        if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            var id = key;\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\n\t                token = this.lookahead;\n\t                isStatic = true;\n\t                computed = this.match('[');\n\t                if (this.match('*')) {\n\t                    this.nextToken();\n\t                }\n\t                else {\n\t                    key = this.parseObjectPropertyKey();\n\t                }\n\t            }\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\n\t                var punctuator = this.lookahead.value;\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\n\t                    isAsync = true;\n\t                    token = this.lookahead;\n\t                    key = this.parseObjectPropertyKey();\n\t                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {\n\t                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */) {\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\n\t                kind = 'get';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                this.context.allowYield = false;\n\t                value = this.parseGetterMethod();\n\t            }\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\n\t                kind = 'set';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                value = this.parseSetterMethod();\n\t            }\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        if (!kind && key && this.match('(')) {\n\t            kind = 'init';\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t            method = true;\n\t        }\n\t        if (!kind) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        if (kind === 'init') {\n\t            kind = 'method';\n\t        }\n\t        if (!computed) {\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\n\t            }\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\n\t                }\n\t                if (hasConstructor.value) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\n\t                }\n\t                else {\n\t                    hasConstructor.value = true;\n\t                }\n\t                kind = 'constructor';\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\n\t    };\n\t    Parser.prototype.parseClassElementList = function () {\n\t        var body = [];\n\t        var hasConstructor = { value: false };\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t            else {\n\t                body.push(this.parseClassElement(hasConstructor));\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return body;\n\t    };\n\t    Parser.prototype.parseClassBody = function () {\n\t        var node = this.createNode();\n\t        var elementList = this.parseClassElementList();\n\t        return this.finalize(node, new Node.ClassBody(elementList));\n\t    };\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\n\t    };\n\t    Parser.prototype.parseClassExpression = function () {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-scripts\n\t    // https://tc39.github.io/ecma262/#sec-modules\n\t    Parser.prototype.parseModule = function () {\n\t        this.context.strict = true;\n\t        this.context.isModule = true;\n\t        this.scanner.isModule = true;\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Module(body));\n\t    };\n\t    Parser.prototype.parseScript = function () {\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Script(body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-imports\n\t    Parser.prototype.parseModuleSpecifier = function () {\n\t        var node = this.createNode();\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\n\t        }\n\t        var token = this.nextToken();\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    // import {<foo as bar>} ...;\n\t    Parser.prototype.parseImportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var imported;\n\t        var local;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            imported = this.parseVariableIdentifier();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t        }\n\t        else {\n\t            imported = this.parseIdentifierName();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\n\t    };\n\t    // {foo, bar as bas}\n\t    Parser.prototype.parseNamedImports = function () {\n\t        this.expect('{');\n\t        var specifiers = [];\n\t        while (!this.match('}')) {\n\t            specifiers.push(this.parseImportSpecifier());\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return specifiers;\n\t    };\n\t    // import <foo> ...;\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\n\t    };\n\t    // import <* as foo> ...;\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\n\t        var node = this.createNode();\n\t        this.expect('*');\n\t        if (!this.matchContextualKeyword('as')) {\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\n\t        }\n\t        this.nextToken();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\n\t    };\n\t    Parser.prototype.parseImportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('import');\n\t        var src;\n\t        var specifiers = [];\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\n\t            // import 'foo';\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        else {\n\t            if (this.match('{')) {\n\t                // import {bar}\n\t                specifiers = specifiers.concat(this.parseNamedImports());\n\t            }\n\t            else if (this.match('*')) {\n\t                // import * as foo\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\n\t            }\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\n\t                // import foo\n\t                specifiers.push(this.parseImportDefaultSpecifier());\n\t                if (this.match(',')) {\n\t                    this.nextToken();\n\t                    if (this.match('*')) {\n\t                        // import foo, * as foo\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\n\t                    }\n\t                    else if (this.match('{')) {\n\t                        // import foo, {bar}\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\n\t                    }\n\t                    else {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exports\n\t    Parser.prototype.parseExportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        var exported = local;\n\t        if (this.matchContextualKeyword('as')) {\n\t            this.nextToken();\n\t            exported = this.parseIdentifierName();\n\t        }\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\n\t    };\n\t    Parser.prototype.parseExportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('export');\n\t        var exportDeclaration;\n\t        if (this.matchKeyword('default')) {\n\t            // export default ...\n\t            this.nextToken();\n\t            if (this.matchKeyword('function')) {\n\t                // export default function foo () {}\n\t                // export default function () {}\n\t                var declaration = this.parseFunctionDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchKeyword('class')) {\n\t                // export default class foo {}\n\t                var declaration = this.parseClassDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchContextualKeyword('async')) {\n\t                // export default async function f () {}\n\t                // export default async function () {}\n\t                // export default async x => x\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else {\n\t                if (this.matchContextualKeyword('from')) {\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\n\t                }\n\t                // export default {};\n\t                // export default [];\n\t                // export default (1 + 2);\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\n\t                this.consumeSemicolon();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t        }\n\t        else if (this.match('*')) {\n\t            // export * from 'foo';\n\t            this.nextToken();\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            var src = this.parseModuleSpecifier();\n\t            this.consumeSemicolon();\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\n\t        }\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\n\t            // export var f = 1;\n\t            var declaration = void 0;\n\t            switch (this.lookahead.value) {\n\t                case 'let':\n\t                case 'const':\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'var':\n\t                case 'class':\n\t                case 'function':\n\t                    declaration = this.parseStatementListItem();\n\t                    break;\n\t                default:\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else if (this.matchAsyncFunction()) {\n\t            var declaration = this.parseFunctionDeclaration();\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else {\n\t            var specifiers = [];\n\t            var source = null;\n\t            var isExportFromIdentifier = false;\n\t            this.expect('{');\n\t            while (!this.match('}')) {\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\n\t                specifiers.push(this.parseExportSpecifier());\n\t                if (!this.match('}')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t            this.expect('}');\n\t            if (this.matchContextualKeyword('from')) {\n\t                // export {default} from 'foo';\n\t                // export {foo} from 'foo';\n\t                this.nextToken();\n\t                source = this.parseModuleSpecifier();\n\t                this.consumeSemicolon();\n\t            }\n\t            else if (isExportFromIdentifier) {\n\t                // export {default}; // missing fromClause\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            else {\n\t                // export {foo};\n\t                this.consumeSemicolon();\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\n\t        }\n\t        return exportDeclaration;\n\t    };\n\t    return Parser;\n\t}());\n\texports.Parser = Parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\t// Ensure the condition is true, otherwise throw an error.\n\t// This is only to have a better contract semantic, i.e. another safety net\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\n\t// Do NOT use this to enforce a certain condition on any user input.\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tfunction assert(condition, message) {\n\t    /* istanbul ignore if */\n\t    if (!condition) {\n\t        throw new Error('ASSERT: ' + message);\n\t    }\n\t}\n\texports.assert = assert;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\t/* tslint:disable:max-classes-per-file */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar ErrorHandler = (function () {\n\t    function ErrorHandler() {\n\t        this.errors = [];\n\t        this.tolerant = false;\n\t    }\n\t    ErrorHandler.prototype.recordError = function (error) {\n\t        this.errors.push(error);\n\t    };\n\t    ErrorHandler.prototype.tolerate = function (error) {\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\n\t        var error = new Error(msg);\n\t        try {\n\t            throw error;\n\t        }\n\t        catch (base) {\n\t            /* istanbul ignore else */\n\t            if (Object.create && Object.defineProperty) {\n\t                error = Object.create(base);\n\t                Object.defineProperty(error, 'column', { value: column });\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\n\t        var msg = 'Line ' + line + ': ' + description;\n\t        var error = this.constructError(msg, col);\n\t        error.index = index;\n\t        error.lineNumber = line;\n\t        error.description = description;\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\n\t        throw this.createError(index, line, col, description);\n\t    };\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\n\t        var error = this.createError(index, line, col, description);\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    return ErrorHandler;\n\t}());\n\texports.ErrorHandler = ErrorHandler;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// Error messages should be identical to V8.\n\texports.Messages = {\n\t    BadGetterArity: 'Getter must not have any formal parameters',\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\n\t    DefaultRestParameter: 'Unexpected token =',\n\t    DuplicateBinding: 'Duplicate binding %0',\n\t    DuplicateConstructor: 'A class may only have one constructor',\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\n\t    IllegalBreak: 'Illegal break statement',\n\t    IllegalContinue: 'Illegal continue statement',\n\t    IllegalExportDeclaration: 'Unexpected token',\n\t    IllegalImportDeclaration: 'Unexpected token',\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\n\t    IllegalReturn: 'Illegal return statement',\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\n\t    InvalidModuleSpecifier: 'Unexpected token',\n\t    InvalidRegExp: 'Invalid regular expression',\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\n\t    MissingFromClause: 'Unexpected token',\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n\t    NewlineAfterThrow: 'Illegal newline after throw',\n\t    NoAsAfterImportNamespace: 'Unexpected token',\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\n\t    StaticPrototype: 'Classes may not have static property named prototype',\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\n\t    UnexpectedEOS: 'Unexpected end of input',\n\t    UnexpectedIdentifier: 'Unexpected identifier',\n\t    UnexpectedNumber: 'Unexpected number',\n\t    UnexpectedReserved: 'Unexpected reserved word',\n\t    UnexpectedString: 'Unexpected string',\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\n\t    UnexpectedToken: 'Unexpected token %0',\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar character_1 = __webpack_require__(4);\n\tvar messages_1 = __webpack_require__(11);\n\tfunction hexValue(ch) {\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\n\t}\n\tfunction octalValue(ch) {\n\t    return '01234567'.indexOf(ch);\n\t}\n\tvar Scanner = (function () {\n\t    function Scanner(code, handler) {\n\t        this.source = code;\n\t        this.errorHandler = handler;\n\t        this.trackComment = false;\n\t        this.isModule = false;\n\t        this.length = code.length;\n\t        this.index = 0;\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\n\t        this.lineStart = 0;\n\t        this.curlyStack = [];\n\t    }\n\t    Scanner.prototype.saveState = function () {\n\t        return {\n\t            index: this.index,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart\n\t        };\n\t    };\n\t    Scanner.prototype.restoreState = function (state) {\n\t        this.index = state.index;\n\t        this.lineNumber = state.lineNumber;\n\t        this.lineStart = state.lineStart;\n\t    };\n\t    Scanner.prototype.eof = function () {\n\t        return this.index >= this.length;\n\t    };\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comments\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - offset;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - offset\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            ++this.index;\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (this.trackComment) {\n\t                    loc.end = {\n\t                        line: this.lineNumber,\n\t                        column: this.index - this.lineStart - 1\n\t                    };\n\t                    var entry = {\n\t                        multiLine: false,\n\t                        slice: [start + offset, this.index - 1],\n\t                        range: [start, this.index - 1],\n\t                        loc: loc\n\t                    };\n\t                    comments.push(entry);\n\t                }\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                return comments;\n\t            }\n\t        }\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: false,\n\t                slice: [start + offset, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        return comments;\n\t    };\n\t    Scanner.prototype.skipMultiLineComment = function () {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - 2;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - 2\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                ++this.index;\n\t                this.lineStart = this.index;\n\t            }\n\t            else if (ch === 0x2A) {\n\t                // Block comment ends with '*/'.\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\n\t                    this.index += 2;\n\t                    if (this.trackComment) {\n\t                        loc.end = {\n\t                            line: this.lineNumber,\n\t                            column: this.index - this.lineStart\n\t                        };\n\t                        var entry = {\n\t                            multiLine: true,\n\t                            slice: [start + 2, this.index - 2],\n\t                            range: [start, this.index],\n\t                            loc: loc\n\t                        };\n\t                        comments.push(entry);\n\t                    }\n\t                    return comments;\n\t                }\n\t                ++this.index;\n\t            }\n\t            else {\n\t                ++this.index;\n\t            }\n\t        }\n\t        // Ran off the end of the file - the whole thing is a comment\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: true,\n\t                slice: [start + 2, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        this.tolerateUnexpectedToken();\n\t        return comments;\n\t    };\n\t    Scanner.prototype.scanComments = function () {\n\t        var comments;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t        }\n\t        var start = (this.index === 0);\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isWhiteSpace(ch)) {\n\t                ++this.index;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch)) {\n\t                ++this.index;\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                start = true;\n\t            }\n\t            else if (ch === 0x2F) {\n\t                ch = this.source.charCodeAt(this.index + 1);\n\t                if (ch === 0x2F) {\n\t                    this.index += 2;\n\t                    var comment = this.skipSingleLineComment(2);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                    start = true;\n\t                }\n\t                else if (ch === 0x2A) {\n\t                    this.index += 2;\n\t                    var comment = this.skipMultiLineComment();\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (start && ch === 0x2D) {\n\t                // U+003E is '>'\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\n\t                    // '-->' is a single-line comment\n\t                    this.index += 3;\n\t                    var comment = this.skipSingleLineComment(3);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (ch === 0x3C && !this.isModule) {\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\n\t                    this.index += 4; // `<!--`\n\t                    var comment = this.skipSingleLineComment(4);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return comments;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'enum':\n\t            case 'export':\n\t            case 'import':\n\t            case 'super':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'implements':\n\t            case 'interface':\n\t            case 'package':\n\t            case 'private':\n\t            case 'protected':\n\t            case 'public':\n\t            case 'static':\n\t            case 'yield':\n\t            case 'let':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isRestrictedWord = function (id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-keywords\n\t    Scanner.prototype.isKeyword = function (id) {\n\t        switch (id.length) {\n\t            case 2:\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\n\t            case 3:\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\n\t                    (id === 'try') || (id === 'let');\n\t            case 4:\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\n\t            case 5:\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                    (id === 'class') || (id === 'super');\n\t            case 6:\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\n\t            case 7:\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t            case 8:\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t            case 10:\n\t                return (id === 'instanceof');\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.codePointAt = function (i) {\n\t        var cp = this.source.charCodeAt(i);\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\n\t            var second = this.source.charCodeAt(i + 1);\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\n\t                var first = cp;\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t            }\n\t        }\n\t        return cp;\n\t    };\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\n\t        var len = (prefix === 'u') ? 4 : 2;\n\t        var code = 0;\n\t        for (var i = 0; i < len; ++i) {\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 16 + hexValue(this.source[this.index++]);\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        }\n\t        return String.fromCharCode(code);\n\t    };\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\n\t        var ch = this.source[this.index];\n\t        var code = 0;\n\t        // At least, one hex digit is required.\n\t        if (ch === '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            code = code * 16 + hexValue(ch);\n\t        }\n\t        if (code > 0x10FFFF || ch !== '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return character_1.Character.fromCodePoint(code);\n\t    };\n\t    Scanner.prototype.getIdentifier = function () {\n\t        var start = this.index++;\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (ch === 0x5C) {\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\n\t                // Need to handle surrogate pairs.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            if (character_1.Character.isIdentifierPart(ch)) {\n\t                ++this.index;\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return this.source.slice(start, this.index);\n\t    };\n\t    Scanner.prototype.getComplexIdentifier = function () {\n\t        var cp = this.codePointAt(this.index);\n\t        var id = character_1.Character.fromCodePoint(cp);\n\t        this.index += id.length;\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t        var ch;\n\t        if (cp === 0x5C) {\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t            ++this.index;\n\t            if (this.source[this.index] === '{') {\n\t                ++this.index;\n\t                ch = this.scanUnicodeCodePointEscape();\n\t            }\n\t            else {\n\t                ch = this.scanHexEscape('u');\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t            }\n\t            id = ch;\n\t        }\n\t        while (!this.eof()) {\n\t            cp = this.codePointAt(this.index);\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\n\t                break;\n\t            }\n\t            ch = character_1.Character.fromCodePoint(cp);\n\t            id += ch;\n\t            this.index += ch.length;\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t            if (cp === 0x5C) {\n\t                id = id.substr(0, id.length - 1);\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t                ++this.index;\n\t                if (this.source[this.index] === '{') {\n\t                    ++this.index;\n\t                    ch = this.scanUnicodeCodePointEscape();\n\t                }\n\t                else {\n\t                    ch = this.scanHexEscape('u');\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                        this.throwUnexpectedToken();\n\t                    }\n\t                }\n\t                id += ch;\n\t            }\n\t        }\n\t        return id;\n\t    };\n\t    Scanner.prototype.octalToDecimal = function (ch) {\n\t        // \\0 is not octal escape sequence\n\t        var octal = (ch !== '0');\n\t        var code = octalValue(ch);\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t            octal = true;\n\t            code = code * 8 + octalValue(this.source[this.index++]);\n\t            // 3 digits are only allowed when string starts\n\t            // with 0, 1, 2, 3\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 8 + octalValue(this.source[this.index++]);\n\t            }\n\t        }\n\t        return {\n\t            code: code,\n\t            octal: octal\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    Scanner.prototype.scanIdentifier = function () {\n\t        var type;\n\t        var start = this.index;\n\t        // Backslash (U+005C) starts an escaped character.\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\n\t        // There is no keyword or literal with only one character.\n\t        // Thus, it must be an identifier.\n\t        if (id.length === 1) {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        else if (this.isKeyword(id)) {\n\t            type = 4 /* Keyword */;\n\t        }\n\t        else if (id === 'null') {\n\t            type = 5 /* NullLiteral */;\n\t        }\n\t        else if (id === 'true' || id === 'false') {\n\t            type = 1 /* BooleanLiteral */;\n\t        }\n\t        else {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\n\t            var restore = this.index;\n\t            this.index = start;\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\n\t            this.index = restore;\n\t        }\n\t        return {\n\t            type: type,\n\t            value: id,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\n\t    Scanner.prototype.scanPunctuator = function () {\n\t        var start = this.index;\n\t        // Check for most common single-character punctuators.\n\t        var str = this.source[this.index];\n\t        switch (str) {\n\t            case '(':\n\t            case '{':\n\t                if (str === '{') {\n\t                    this.curlyStack.push('{');\n\t                }\n\t                ++this.index;\n\t                break;\n\t            case '.':\n\t                ++this.index;\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\n\t                    // Spread operator: ...\n\t                    this.index += 2;\n\t                    str = '...';\n\t                }\n\t                break;\n\t            case '}':\n\t                ++this.index;\n\t                this.curlyStack.pop();\n\t                break;\n\t            case ')':\n\t            case ';':\n\t            case ',':\n\t            case '[':\n\t            case ']':\n\t            case ':':\n\t            case '?':\n\t            case '~':\n\t                ++this.index;\n\t                break;\n\t            default:\n\t                // 4-character punctuator.\n\t                str = this.source.substr(this.index, 4);\n\t                if (str === '>>>=') {\n\t                    this.index += 4;\n\t                }\n\t                else {\n\t                    // 3-character punctuators.\n\t                    str = str.substr(0, 3);\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\n\t                        this.index += 3;\n\t                    }\n\t                    else {\n\t                        // 2-character punctuators.\n\t                        str = str.substr(0, 2);\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\n\t                            this.index += 2;\n\t                        }\n\t                        else {\n\t                            // 1-character punctuators.\n\t                            str = this.source[this.index];\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\n\t                                ++this.index;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t        }\n\t        if (this.index === start) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 7 /* Punctuator */,\n\t            value: str,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    Scanner.prototype.scanHexLiteral = function (start) {\n\t        var num = '';\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt('0x' + num, 16),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\n\t        var num = '';\n\t        var ch;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index];\n\t            if (ch !== '0' && ch !== '1') {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            // only 0b or 0B\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!this.eof()) {\n\t            ch = this.source.charCodeAt(this.index);\n\t            /* istanbul ignore else */\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 2),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\n\t        var num = '';\n\t        var octal = false;\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\n\t            octal = true;\n\t            num = '0' + this.source[this.index++];\n\t        }\n\t        else {\n\t            ++this.index;\n\t        }\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (!octal && num.length === 0) {\n\t            // only 0o or 0O\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 8),\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\n\t        // Implicit octal, unless there is a non-octal digit.\n\t        // (Annex B.1.1 on Numeric Literals)\n\t        for (var i = this.index + 1; i < this.length; ++i) {\n\t            var ch = this.source[i];\n\t            if (ch === '8' || ch === '9') {\n\t                return false;\n\t            }\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                return true;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t    Scanner.prototype.scanNumericLiteral = function () {\n\t        var start = this.index;\n\t        var ch = this.source[start];\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\n\t        var num = '';\n\t        if (ch !== '.') {\n\t            num = this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            // Hex number starts with '0x'.\n\t            // Octal number starts with '0'.\n\t            // Octal number in ES6 starts with '0o'.\n\t            // Binary number in ES6 starts with '0b'.\n\t            if (num === '0') {\n\t                if (ch === 'x' || ch === 'X') {\n\t                    ++this.index;\n\t                    return this.scanHexLiteral(start);\n\t                }\n\t                if (ch === 'b' || ch === 'B') {\n\t                    ++this.index;\n\t                    return this.scanBinaryLiteral(start);\n\t                }\n\t                if (ch === 'o' || ch === 'O') {\n\t                    return this.scanOctalLiteral(ch, start);\n\t                }\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                    if (this.isImplicitOctalLiteral()) {\n\t                        return this.scanOctalLiteral(ch, start);\n\t                    }\n\t                }\n\t            }\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === '.') {\n\t            num += this.source[this.index++];\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === 'e' || ch === 'E') {\n\t            num += this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            if (ch === '+' || ch === '-') {\n\t                num += this.source[this.index++];\n\t            }\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                    num += this.source[this.index++];\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseFloat(num),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\n\t    Scanner.prototype.scanStringLiteral = function () {\n\t        var start = this.index;\n\t        var quote = this.source[start];\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\n\t        ++this.index;\n\t        var octal = false;\n\t        var str = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === quote) {\n\t                quote = '';\n\t                break;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                str += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var unescaped_1 = this.scanHexEscape(ch);\n\t                                if (unescaped_1 === null) {\n\t                                    this.throwUnexpectedToken();\n\t                                }\n\t                                str += unescaped_1;\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            str += unescaped;\n\t                            break;\n\t                        case 'n':\n\t                            str += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            str += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            str += '\\t';\n\t                            break;\n\t                        case 'b':\n\t                            str += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            str += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            str += '\\x0B';\n\t                            break;\n\t                        case '8':\n\t                        case '9':\n\t                            str += ch;\n\t                            this.tolerateUnexpectedToken();\n\t                            break;\n\t                        default:\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                var octToDec = this.octalToDecimal(ch);\n\t                                octal = octToDec.octal || octal;\n\t                                str += String.fromCharCode(octToDec.code);\n\t                            }\n\t                            else {\n\t                                str += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            else {\n\t                str += ch;\n\t            }\n\t        }\n\t        if (quote !== '') {\n\t            this.index = start;\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 8 /* StringLiteral */,\n\t            value: str,\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\n\t    Scanner.prototype.scanTemplate = function () {\n\t        var cooked = '';\n\t        var terminated = false;\n\t        var start = this.index;\n\t        var head = (this.source[start] === '`');\n\t        var tail = false;\n\t        var rawOffset = 2;\n\t        ++this.index;\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === '`') {\n\t                rawOffset = 1;\n\t                tail = true;\n\t                terminated = true;\n\t                break;\n\t            }\n\t            else if (ch === '$') {\n\t                if (this.source[this.index] === '{') {\n\t                    this.curlyStack.push('${');\n\t                    ++this.index;\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                cooked += ch;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'n':\n\t                            cooked += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            cooked += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            cooked += '\\t';\n\t                            break;\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                cooked += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var restore = this.index;\n\t                                var unescaped_2 = this.scanHexEscape(ch);\n\t                                if (unescaped_2 !== null) {\n\t                                    cooked += unescaped_2;\n\t                                }\n\t                                else {\n\t                                    this.index = restore;\n\t                                    cooked += ch;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            cooked += unescaped;\n\t                            break;\n\t                        case 'b':\n\t                            cooked += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            cooked += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            cooked += '\\v';\n\t                            break;\n\t                        default:\n\t                            if (ch === '0') {\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                                    // Illegal: \\01 \\02 and so on\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                                }\n\t                                cooked += '\\0';\n\t                            }\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                // Illegal: \\1 \\2\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                            }\n\t                            else {\n\t                                cooked += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.lineNumber;\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                    ++this.index;\n\t                }\n\t                this.lineStart = this.index;\n\t                cooked += '\\n';\n\t            }\n\t            else {\n\t                cooked += ch;\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!head) {\n\t            this.curlyStack.pop();\n\t        }\n\t        return {\n\t            type: 10 /* Template */,\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\n\t            cooked: cooked,\n\t            head: head,\n\t            tail: tail,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\n\t        // The BMP character to use as a replacement for astral symbols when\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\n\t        // approximation.\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\n\t        // pattern that would not be detected by this substitution.\n\t        var astralSubstitute = '\\uFFFF';\n\t        var tmp = pattern;\n\t        var self = this;\n\t        if (flags.indexOf('u') >= 0) {\n\t            tmp = tmp\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\n\t                var codePoint = parseInt($1 || $2, 16);\n\t                if (codePoint > 0x10FFFF) {\n\t                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t                }\n\t                if (codePoint <= 0xFFFF) {\n\t                    return String.fromCharCode(codePoint);\n\t                }\n\t                return astralSubstitute;\n\t            })\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\n\t        }\n\t        // First, detect invalid regular expressions.\n\t        try {\n\t            RegExp(tmp);\n\t        }\n\t        catch (e) {\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t        }\n\t        // Return a regular expression object for this pattern-flag pair, or\n\t        // `null` in case the current environment doesn't support the flags it\n\t        // uses.\n\t        try {\n\t            return new RegExp(pattern, flags);\n\t        }\n\t        catch (exception) {\n\t            /* istanbul ignore next */\n\t            return null;\n\t        }\n\t    };\n\t    Scanner.prototype.scanRegExpBody = function () {\n\t        var ch = this.source[this.index];\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\n\t        var str = this.source[this.index++];\n\t        var classMarker = false;\n\t        var terminated = false;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            str += ch;\n\t            if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t                }\n\t                str += ch;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t            }\n\t            else if (classMarker) {\n\t                if (ch === ']') {\n\t                    classMarker = false;\n\t                }\n\t            }\n\t            else {\n\t                if (ch === '/') {\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                else if (ch === '[') {\n\t                    classMarker = true;\n\t                }\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t        }\n\t        // Exclude leading and trailing slash.\n\t        return str.substr(1, str.length - 2);\n\t    };\n\t    Scanner.prototype.scanRegExpFlags = function () {\n\t        var str = '';\n\t        var flags = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index];\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            ++this.index;\n\t            if (ch === '\\\\' && !this.eof()) {\n\t                ch = this.source[this.index];\n\t                if (ch === 'u') {\n\t                    ++this.index;\n\t                    var restore = this.index;\n\t                    var char = this.scanHexEscape('u');\n\t                    if (char !== null) {\n\t                        flags += char;\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\n\t                            str += this.source[restore];\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.index = restore;\n\t                        flags += 'u';\n\t                        str += '\\\\u';\n\t                    }\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t                else {\n\t                    str += '\\\\';\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t            }\n\t            else {\n\t                flags += ch;\n\t                str += ch;\n\t            }\n\t        }\n\t        return flags;\n\t    };\n\t    Scanner.prototype.scanRegExp = function () {\n\t        var start = this.index;\n\t        var pattern = this.scanRegExpBody();\n\t        var flags = this.scanRegExpFlags();\n\t        var value = this.testRegExp(pattern, flags);\n\t        return {\n\t            type: 9 /* RegularExpression */,\n\t            value: '',\n\t            pattern: pattern,\n\t            flags: flags,\n\t            regex: value,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.lex = function () {\n\t        if (this.eof()) {\n\t            return {\n\t                type: 2 /* EOF */,\n\t                value: '',\n\t                lineNumber: this.lineNumber,\n\t                lineStart: this.lineStart,\n\t                start: this.index,\n\t                end: this.index\n\t            };\n\t        }\n\t        var cp = this.source.charCodeAt(this.index);\n\t        if (character_1.Character.isIdentifierStart(cp)) {\n\t            return this.scanIdentifier();\n\t        }\n\t        // Very common: ( and ) and ;\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\n\t            return this.scanPunctuator();\n\t        }\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\n\t        if (cp === 0x27 || cp === 0x22) {\n\t            return this.scanStringLiteral();\n\t        }\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\n\t        // to check the next character.\n\t        if (cp === 0x2E) {\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\n\t                return this.scanNumericLiteral();\n\t            }\n\t            return this.scanPunctuator();\n\t        }\n\t        if (character_1.Character.isDecimalDigit(cp)) {\n\t            return this.scanNumericLiteral();\n\t        }\n\t        // Template literals start with ` (U+0060) for template head\n\t        // or } (U+007D) for template middle or template tail.\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\n\t            return this.scanTemplate();\n\t        }\n\t        // Possible identifier start in a surrogate pair.\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\n\t                return this.scanIdentifier();\n\t            }\n\t        }\n\t        return this.scanPunctuator();\n\t    };\n\t    return Scanner;\n\t}());\n\texports.Scanner = Scanner;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.TokenName = {};\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\n\texports.TokenName[2 /* EOF */] = '<end>';\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\n\texports.TokenName[8 /* StringLiteral */] = 'String';\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\n\texports.TokenName[10 /* Template */] = 'Template';\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.XHTMLEntities = {\n\t    quot: '\\u0022',\n\t    amp: '\\u0026',\n\t    apos: '\\u0027',\n\t    gt: '\\u003E',\n\t    nbsp: '\\u00A0',\n\t    iexcl: '\\u00A1',\n\t    cent: '\\u00A2',\n\t    pound: '\\u00A3',\n\t    curren: '\\u00A4',\n\t    yen: '\\u00A5',\n\t    brvbar: '\\u00A6',\n\t    sect: '\\u00A7',\n\t    uml: '\\u00A8',\n\t    copy: '\\u00A9',\n\t    ordf: '\\u00AA',\n\t    laquo: '\\u00AB',\n\t    not: '\\u00AC',\n\t    shy: '\\u00AD',\n\t    reg: '\\u00AE',\n\t    macr: '\\u00AF',\n\t    deg: '\\u00B0',\n\t    plusmn: '\\u00B1',\n\t    sup2: '\\u00B2',\n\t    sup3: '\\u00B3',\n\t    acute: '\\u00B4',\n\t    micro: '\\u00B5',\n\t    para: '\\u00B6',\n\t    middot: '\\u00B7',\n\t    cedil: '\\u00B8',\n\t    sup1: '\\u00B9',\n\t    ordm: '\\u00BA',\n\t    raquo: '\\u00BB',\n\t    frac14: '\\u00BC',\n\t    frac12: '\\u00BD',\n\t    frac34: '\\u00BE',\n\t    iquest: '\\u00BF',\n\t    Agrave: '\\u00C0',\n\t    Aacute: '\\u00C1',\n\t    Acirc: '\\u00C2',\n\t    Atilde: '\\u00C3',\n\t    Auml: '\\u00C4',\n\t    Aring: '\\u00C5',\n\t    AElig: '\\u00C6',\n\t    Ccedil: '\\u00C7',\n\t    Egrave: '\\u00C8',\n\t    Eacute: '\\u00C9',\n\t    Ecirc: '\\u00CA',\n\t    Euml: '\\u00CB',\n\t    Igrave: '\\u00CC',\n\t    Iacute: '\\u00CD',\n\t    Icirc: '\\u00CE',\n\t    Iuml: '\\u00CF',\n\t    ETH: '\\u00D0',\n\t    Ntilde: '\\u00D1',\n\t    Ograve: '\\u00D2',\n\t    Oacute: '\\u00D3',\n\t    Ocirc: '\\u00D4',\n\t    Otilde: '\\u00D5',\n\t    Ouml: '\\u00D6',\n\t    times: '\\u00D7',\n\t    Oslash: '\\u00D8',\n\t    Ugrave: '\\u00D9',\n\t    Uacute: '\\u00DA',\n\t    Ucirc: '\\u00DB',\n\t    Uuml: '\\u00DC',\n\t    Yacute: '\\u00DD',\n\t    THORN: '\\u00DE',\n\t    szlig: '\\u00DF',\n\t    agrave: '\\u00E0',\n\t    aacute: '\\u00E1',\n\t    acirc: '\\u00E2',\n\t    atilde: '\\u00E3',\n\t    auml: '\\u00E4',\n\t    aring: '\\u00E5',\n\t    aelig: '\\u00E6',\n\t    ccedil: '\\u00E7',\n\t    egrave: '\\u00E8',\n\t    eacute: '\\u00E9',\n\t    ecirc: '\\u00EA',\n\t    euml: '\\u00EB',\n\t    igrave: '\\u00EC',\n\t    iacute: '\\u00ED',\n\t    icirc: '\\u00EE',\n\t    iuml: '\\u00EF',\n\t    eth: '\\u00F0',\n\t    ntilde: '\\u00F1',\n\t    ograve: '\\u00F2',\n\t    oacute: '\\u00F3',\n\t    ocirc: '\\u00F4',\n\t    otilde: '\\u00F5',\n\t    ouml: '\\u00F6',\n\t    divide: '\\u00F7',\n\t    oslash: '\\u00F8',\n\t    ugrave: '\\u00F9',\n\t    uacute: '\\u00FA',\n\t    ucirc: '\\u00FB',\n\t    uuml: '\\u00FC',\n\t    yacute: '\\u00FD',\n\t    thorn: '\\u00FE',\n\t    yuml: '\\u00FF',\n\t    OElig: '\\u0152',\n\t    oelig: '\\u0153',\n\t    Scaron: '\\u0160',\n\t    scaron: '\\u0161',\n\t    Yuml: '\\u0178',\n\t    fnof: '\\u0192',\n\t    circ: '\\u02C6',\n\t    tilde: '\\u02DC',\n\t    Alpha: '\\u0391',\n\t    Beta: '\\u0392',\n\t    Gamma: '\\u0393',\n\t    Delta: '\\u0394',\n\t    Epsilon: '\\u0395',\n\t    Zeta: '\\u0396',\n\t    Eta: '\\u0397',\n\t    Theta: '\\u0398',\n\t    Iota: '\\u0399',\n\t    Kappa: '\\u039A',\n\t    Lambda: '\\u039B',\n\t    Mu: '\\u039C',\n\t    Nu: '\\u039D',\n\t    Xi: '\\u039E',\n\t    Omicron: '\\u039F',\n\t    Pi: '\\u03A0',\n\t    Rho: '\\u03A1',\n\t    Sigma: '\\u03A3',\n\t    Tau: '\\u03A4',\n\t    Upsilon: '\\u03A5',\n\t    Phi: '\\u03A6',\n\t    Chi: '\\u03A7',\n\t    Psi: '\\u03A8',\n\t    Omega: '\\u03A9',\n\t    alpha: '\\u03B1',\n\t    beta: '\\u03B2',\n\t    gamma: '\\u03B3',\n\t    delta: '\\u03B4',\n\t    epsilon: '\\u03B5',\n\t    zeta: '\\u03B6',\n\t    eta: '\\u03B7',\n\t    theta: '\\u03B8',\n\t    iota: '\\u03B9',\n\t    kappa: '\\u03BA',\n\t    lambda: '\\u03BB',\n\t    mu: '\\u03BC',\n\t    nu: '\\u03BD',\n\t    xi: '\\u03BE',\n\t    omicron: '\\u03BF',\n\t    pi: '\\u03C0',\n\t    rho: '\\u03C1',\n\t    sigmaf: '\\u03C2',\n\t    sigma: '\\u03C3',\n\t    tau: '\\u03C4',\n\t    upsilon: '\\u03C5',\n\t    phi: '\\u03C6',\n\t    chi: '\\u03C7',\n\t    psi: '\\u03C8',\n\t    omega: '\\u03C9',\n\t    thetasym: '\\u03D1',\n\t    upsih: '\\u03D2',\n\t    piv: '\\u03D6',\n\t    ensp: '\\u2002',\n\t    emsp: '\\u2003',\n\t    thinsp: '\\u2009',\n\t    zwnj: '\\u200C',\n\t    zwj: '\\u200D',\n\t    lrm: '\\u200E',\n\t    rlm: '\\u200F',\n\t    ndash: '\\u2013',\n\t    mdash: '\\u2014',\n\t    lsquo: '\\u2018',\n\t    rsquo: '\\u2019',\n\t    sbquo: '\\u201A',\n\t    ldquo: '\\u201C',\n\t    rdquo: '\\u201D',\n\t    bdquo: '\\u201E',\n\t    dagger: '\\u2020',\n\t    Dagger: '\\u2021',\n\t    bull: '\\u2022',\n\t    hellip: '\\u2026',\n\t    permil: '\\u2030',\n\t    prime: '\\u2032',\n\t    Prime: '\\u2033',\n\t    lsaquo: '\\u2039',\n\t    rsaquo: '\\u203A',\n\t    oline: '\\u203E',\n\t    frasl: '\\u2044',\n\t    euro: '\\u20AC',\n\t    image: '\\u2111',\n\t    weierp: '\\u2118',\n\t    real: '\\u211C',\n\t    trade: '\\u2122',\n\t    alefsym: '\\u2135',\n\t    larr: '\\u2190',\n\t    uarr: '\\u2191',\n\t    rarr: '\\u2192',\n\t    darr: '\\u2193',\n\t    harr: '\\u2194',\n\t    crarr: '\\u21B5',\n\t    lArr: '\\u21D0',\n\t    uArr: '\\u21D1',\n\t    rArr: '\\u21D2',\n\t    dArr: '\\u21D3',\n\t    hArr: '\\u21D4',\n\t    forall: '\\u2200',\n\t    part: '\\u2202',\n\t    exist: '\\u2203',\n\t    empty: '\\u2205',\n\t    nabla: '\\u2207',\n\t    isin: '\\u2208',\n\t    notin: '\\u2209',\n\t    ni: '\\u220B',\n\t    prod: '\\u220F',\n\t    sum: '\\u2211',\n\t    minus: '\\u2212',\n\t    lowast: '\\u2217',\n\t    radic: '\\u221A',\n\t    prop: '\\u221D',\n\t    infin: '\\u221E',\n\t    ang: '\\u2220',\n\t    and: '\\u2227',\n\t    or: '\\u2228',\n\t    cap: '\\u2229',\n\t    cup: '\\u222A',\n\t    int: '\\u222B',\n\t    there4: '\\u2234',\n\t    sim: '\\u223C',\n\t    cong: '\\u2245',\n\t    asymp: '\\u2248',\n\t    ne: '\\u2260',\n\t    equiv: '\\u2261',\n\t    le: '\\u2264',\n\t    ge: '\\u2265',\n\t    sub: '\\u2282',\n\t    sup: '\\u2283',\n\t    nsub: '\\u2284',\n\t    sube: '\\u2286',\n\t    supe: '\\u2287',\n\t    oplus: '\\u2295',\n\t    otimes: '\\u2297',\n\t    perp: '\\u22A5',\n\t    sdot: '\\u22C5',\n\t    lceil: '\\u2308',\n\t    rceil: '\\u2309',\n\t    lfloor: '\\u230A',\n\t    rfloor: '\\u230B',\n\t    loz: '\\u25CA',\n\t    spades: '\\u2660',\n\t    clubs: '\\u2663',\n\t    hearts: '\\u2665',\n\t    diams: '\\u2666',\n\t    lang: '\\u27E8',\n\t    rang: '\\u27E9'\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar token_1 = __webpack_require__(13);\n\tvar Reader = (function () {\n\t    function Reader() {\n\t        this.values = [];\n\t        this.curly = this.paren = -1;\n\t    }\n\t    // A function following one of those tokens is an expression.\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n\t            'return', 'case', 'delete', 'throw', 'void',\n\t            // assignment operators\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\n\t            '&=', '|=', '^=', ',',\n\t            // binary/unary operators\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\n\t    };\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\n\t    // https://github.com/mozilla/sweet.js/wiki/design\n\t    Reader.prototype.isRegexStart = function () {\n\t        var previous = this.values[this.values.length - 1];\n\t        var regex = (previous !== null);\n\t        switch (previous) {\n\t            case 'this':\n\t            case ']':\n\t                regex = false;\n\t                break;\n\t            case ')':\n\t                var keyword = this.values[this.paren - 1];\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\n\t                break;\n\t            case '}':\n\t                // Dividing a function by anything makes little sense,\n\t                // but we have to check for that.\n\t                regex = false;\n\t                if (this.values[this.curly - 3] === 'function') {\n\t                    // Anonymous function, e.g. function(){} /42\n\t                    var check = this.values[this.curly - 4];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\n\t                }\n\t                else if (this.values[this.curly - 4] === 'function') {\n\t                    // Named function, e.g. function f(){} /42/\n\t                    var check = this.values[this.curly - 5];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\n\t                }\n\t                break;\n\t        }\n\t        return regex;\n\t    };\n\t    Reader.prototype.push = function (token) {\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\n\t            if (token.value === '{') {\n\t                this.curly = this.values.length;\n\t            }\n\t            else if (token.value === '(') {\n\t                this.paren = this.values.length;\n\t            }\n\t            this.values.push(token.value);\n\t        }\n\t        else {\n\t            this.values.push(null);\n\t        }\n\t    };\n\t    return Reader;\n\t}());\n\tvar Tokenizer = (function () {\n\t    function Tokenizer(code, config) {\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\n\t        this.buffer = [];\n\t        this.reader = new Reader();\n\t    }\n\t    Tokenizer.prototype.errors = function () {\n\t        return this.errorHandler.errors;\n\t    };\n\t    Tokenizer.prototype.getNextToken = function () {\n\t        if (this.buffer.length === 0) {\n\t            var comments = this.scanner.scanComments();\n\t            if (this.scanner.trackComment) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\n\t                    var comment = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: value\n\t                    };\n\t                    if (this.trackRange) {\n\t                        comment.range = e.range;\n\t                    }\n\t                    if (this.trackLoc) {\n\t                        comment.loc = e.loc;\n\t                    }\n\t                    this.buffer.push(comment);\n\t                }\n\t            }\n\t            if (!this.scanner.eof()) {\n\t                var loc = void 0;\n\t                if (this.trackLoc) {\n\t                    loc = {\n\t                        start: {\n\t                            line: this.scanner.lineNumber,\n\t                            column: this.scanner.index - this.scanner.lineStart\n\t                        },\n\t                        end: {}\n\t                    };\n\t                }\n\t                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\n\t                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();\n\t                this.reader.push(token);\n\t                var entry = {\n\t                    type: token_1.TokenName[token.type],\n\t                    value: this.scanner.source.slice(token.start, token.end)\n\t                };\n\t                if (this.trackRange) {\n\t                    entry.range = [token.start, token.end];\n\t                }\n\t                if (this.trackLoc) {\n\t                    loc.end = {\n\t                        line: this.scanner.lineNumber,\n\t                        column: this.scanner.index - this.scanner.lineStart\n\t                    };\n\t                    entry.loc = loc;\n\t                }\n\t                if (token.type === 9 /* RegularExpression */) {\n\t                    var pattern = token.pattern;\n\t                    var flags = token.flags;\n\t                    entry.regex = { pattern: pattern, flags: flags };\n\t                }\n\t                this.buffer.push(entry);\n\t            }\n\t        }\n\t        return this.buffer.shift();\n\t    };\n\t    return Tokenizer;\n\t}());\n\texports.Tokenizer = Tokenizer;\n\n\n/***/ }\n/******/ ])\n});\n});\n\nvar __pika_web_default_export_for_treeshaking__ = /*@__PURE__*/getDefaultExportFromCjs(esprima);\n\nexport default __pika_web_default_export_for_treeshaking__;\n", "import esprima from '../../_snowpack/pkg/esprima.js';\nimport { dispatch } from \"../dispatch.js\";\n\nfunction foldImports(state) {\n  const anotherComp = l => l.includes(\"return kicadToObj(\");\n\n  const doc = state.codemirror.view.state.doc;\n  const lines = doc.toString().split(\"\\n\");\n  let i = 0;\n  let count = 0;\n  while (true) {\n    const line = lines[i];\n    if (!line) break;\n    count += line.length;\n    if (i > lines.length) break;\n    if (lines[i] === \"`)})()\" && !anotherComp(lines[i+1])) break;\n    i++;\n  };\n\n  state.codemirror.foldRange(0, count+i);\n}\n\nfunction walk( ast, fn ) {\n\tvar stack = [ ast ], i, j, key, len, node, child, subchild\n\tfor ( i = 0; i < stack.length; i += 1 ) {\n\t\tnode = stack[ i ]\n    if (typeof node == 'number')\n      continue\n\t\tfn( node )\n\t\tfor ( key in node ) {\n\t\t\tif ( key !== 'parent' ) {\n\t\t\t\tchild = node[ key ]\n\t\t\t\tif ( child instanceof Array ) {\n\t\t\t\t\tfor ( j = 0, len = child.length; j < len; j += 1 ) {\n\t\t\t\t\t\tsubchild = child[ j ]\n\t\t\t\t\t\tif( subchild instanceof Object ) {\n\t\t\t\t\t\t\tsubchild.parent = node\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstack.push( subchild )\n\t\t\t\t\t}\n\t\t\t\t} else if ( child != void 0 && typeof child.type === 'string' ) {\n\t\t\t\t\tchild.parent = node\n\t\t\t\t\tstack.push( child )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function addTranslateHandle(state, svgListener) {\n  const svg = document.querySelector(\"svg\");\n\n  let clicked = false;\n  let clickedPoint;\n  let lastX = 0;\n  let lastY = 0;\n  let index;\n\n  svgListener(\"mousedown\", \".translate-handle-trigger\", e => {\n    clicked = true;\n    state.transforming = true;\n    lastX = 0;\n    lastY = 0;\n\n    const svgPoint = svg.panZoomParams.svgPoint;\n    clickedPoint = svgPoint({x: e.offsetX, y: e.offsetY})\n\n    index = e.target.dataset.index;\n\n    const string = state.codemirror.view.state.doc.toString();\n    const esprimaAST = esprima.parseScript(string, { range: true, comment: true });\n\n    let adds = [];\n    walk(esprimaAST, node => {\n      try {\n          if (node.callee.type === \"MemberExpression\" && node.callee.property.name === \"add\") adds.push(node.arguments[1]);\n      } catch (err) { }\n    })\n    // sort by first range\n    const sortedAdds = adds.sort((a, b) => a.range[0] - b.range[0])\n    const sigFigs = num => num.includes(\".\")\n      ? num.split(\".\")[1].length\n      : num.length;\n\n    const step = (num, stepSize) => Math.round(num/stepSize)*stepSize;\n    const round = (num, sigFigs) => Math.round(num*10**sigFigs)/(10**sigFigs);\n    const isDigit = (ch) => /[0-9]/i.test(ch) || ch === \".\";\n\n    // const comp = state.storedPCB.components[index];\n\n    state.transformUpdate = (x, y) => {\n\n      const changes = [];\n\n      sortedAdds[index].properties.forEach( prop => {\n        if (prop.key.name !== \"translate\") return;\n\n        const [ xNode, yNode ] = prop.value.elements;\n\n        let is_sum = false;\n        let is_neg = false;\n        let changed = false;\n\n        let change_x_or_y = function(n, delta) {\n          if (changed) return;\n\n          if (n.type === \"Literal\" && typeof n.value === \"number\") {\n\n            let n_from = n.range[0];\n\n            if (n.parent.operator === \"/\") {\n              return;\n            }\n\n            if (n.parent.operator === \"-\") {\n              is_neg = true;\n            }\n\n            if (n.parent.type === \"BinaryExpression\" && (n.parent.operator === \"+\" || n.parent.operator === \"-\") && n.parent.right == n) {\n              is_sum = true;\n              n_from = n.parent.left.range[1];\n            }\n\n            if (n.parent.type === \"UnaryExpression\" && n.parent.operator === \"-\") {\n              n_from = n.parent.range[0];\n            }\n\n            if (!n.ogValue) n.ogValue = n.value;\n            if (!n.ogRaw) n.ogRaw = n.raw;\n\n            let newNum;\n            if (is_neg) {\n              newNum = -n.ogValue + delta;\n            } else {\n              newNum = n.ogValue + delta;\n            }\n\n            let n_val = state.gridSize === 0 ? round(newNum, sigFigs(n.ogRaw)) : round(step(newNum, state.gridSize), 8);\n\n            let is_neg_new = n_val < 0;\n\n            let n_insert;\n            if (is_neg_new) {\n              n_insert = `-${Math.abs(n_val)}`\n            } else if (is_sum) {\n              n_insert = `+${n_val}`\n            } else {\n              n_insert = `${n_val}`\n            }\n\n            changes.push({\n              from: n_from,\n              to: n.range[1],\n              insert: n_insert\n            });\n\n            changed = true;\n          }\n        }\n\n        walk(xNode, n => change_x_or_y(n, x));\n\n        is_sum = false;\n        is_neg = false;\n        changed = false;\n\n        walk(yNode, n => change_x_or_y(n, y));\n\n        const currentString = state.codemirror.view.state.doc.toString();\n\n        state.codemirror.view.dispatch({\n          changes: { from: 0, to: currentString.length, insert: string }\n        });\n\n        state.codemirror.view.dispatch({ changes });\n      })\n\n      foldImports(state);\n\n    }\n\n    // pauseEvent(e);\n  })\n\n  svgListener(\"mousemove\", \"\", e => {\n    if (!clicked) return;\n\n    const svgPoint = svg.panZoomParams.svgPoint;\n    const currentPoint = svgPoint({x: e.offsetX, y: e.offsetY})\n    const x = currentPoint.x - clickedPoint.x;\n    const y = currentPoint.y - clickedPoint.y;\n    // dispatch(\"TRANSLATE\", { x: x - lastX, y: y - lastY, index });\n    dispatch(\"TRANSLATE\", { x, y, index });\n    lastX = x;\n    lastY = y;\n    // pauseEvent(e);\n  })\n\n  svgListener(\"mouseup\", \"\", e => {\n    clicked = false;\n    state.transforming = false;\n  })\n\n  svgListener(\"mouseleave\", \"\", e => {\n    clicked = false;\n    state.transforming = false;\n  })\n}\n", "import { dispatch } from \"../dispatch.js\";\n\nexport function addVerticalBarDrag(state, listenBody) {\n\tlet moveVerticalBar = false;\n\n\tlistenBody(\"mousedown\", \"#vertical-bar\", e => {\n\t\tmoveVerticalBar = true;\n\t})\n\n\tlistenBody(\"mousemove\", \"\", (e) => {\n\t\tif (!moveVerticalBar) return;\n\n\t\tlet x = e.clientX/window.innerWidth * 100;\n\t\tif (x === 0) return;\n\n\t\tconst minX = 1;\n\t\tconst maxX = 99;\n\n\t\tif (x < minX) x = minX;\n\t\tif (x > maxX) x = maxX;\n\n\t\tdocument.documentElement.style.setProperty(\"--vertical-bar\", `${x}%`);\n\n\t\tpauseEvent(e);\n\t})\n\n\tlistenBody(\"mouseup\", \"\", e => {\n\t\tmoveVerticalBar = false;\n\t\tdispatch(\"RENDER\");\n\t})\n}", "import { dispatch } from \"../dispatch.js\";\n\nexport function addImgPanZoom(state, listen) {\n  let mousedown = false;\n\n  let scale = 1;\n  let pointX = 0;\n  let pointY = 0;\n  let start = { x: 0, y: 0 };\n\n  function setTransform(el) {\n    el.style.transformOrigin = `${0}px ${0}px`;\n    el.style.transform = \"translate(\" + pointX + \"px, \" + pointY + \"px) scale(\" + scale + \")\";\n    if (state.gridSize > 0) dispatch(\"RENDER\");\n  }\n\n  function svgPoint({ x, y }) {\n  \t  let newX = (x - pointX) / scale;\n    \tlet newY = (y - pointY) / scale;\n\n    \treturn { x: newX, y: newY };\n  }\n\n  listen(\"mousedown\", \"\", (e) => {\n    if (e.shiftKey) return;\n\n    mousedown = true;\n\n    start = { x: e.offsetX - pointX, y: e.offsetY - pointY };\n\n    if (e.detail === 2) {\n    \tconsole.log(e.offsetX, e.offsetY, svgPoint({x: e.offsetX, y: e.offsetY}));\n    }\n  })\n\n  listen(\"mousemove\", \"\", (e) => {\n    if (!mousedown) return;\n    if (state.transforming) return;\n\n    pointX = (e.offsetX - start.x);\n    pointY = (e.offsetY - start.y);\n\n    const imgs = document.querySelectorAll(\".transform-group\");\n\n    for (const img of imgs) {\n      setTransform(img);\n    }\n\n  })\n\n  listen(\"mouseup\", \"\", (evt) => {\n    mousedown = false;\n  })\n\n  listen(\"wheel\", \"\", (e) => {\n    \n    let xs = (e.offsetX - pointX) / scale;\n    let ys = (e.offsetY - pointY) / scale;\n\n    if (Math.sign(e.deltaY) < 0) scale *= 1.03;\n    else scale /= 1.03;\n\n    pointX = e.offsetX - xs * scale;\n    pointY = e.offsetY - ys * scale;\n\n    const imgs = document.querySelectorAll(\".transform-group\");\n    for (const img of imgs) {\n      setTransform(img);\n    }\n\n    e.preventDefault();\n  })\n\n  function setScaleXY(limits) {\n    const svg = document.querySelector(\"svg\");\n    const bb = svg.getBoundingClientRect();\n    const xr = limits.x[1] - limits.x[0];\n    const yr = limits.y[1] - limits.y[0];\n    const xScalingFactor = bb.width/xr;\n    const yScalingFactor = bb.height/yr;\n\n    const scalingFactor = Math.min(xScalingFactor, yScalingFactor) * 0.9;\n\n    scale = scalingFactor;\n\n    const center = { \n      x: (limits.x[0] + limits.x[1])/2 * scalingFactor - bb.width/2,\n      y: (limits.y[0] + limits.y[1])/2 * scalingFactor - bb.height/2\n    }\n\n    pointX = -center.x;\n    pointY = -center.y;\n\n    const imgs = document.querySelectorAll(\".transform-group\");\n    for (const img of imgs) {\n      setTransform(img);\n    }\n  }\n\n  function corners() {\n    const svg = document.querySelector(\"svg\"); // what if there were other svgs?\n    if (svg === null) return null;\n    const { left, right, bottom, top, width, height} = svg.getBoundingClientRect();\n    // need rt, lt, rb, lb\n    const rt = svgPoint({ x: width, y: height });\n    // rt.y = -rt.y\n    const lt = svgPoint({ x: 0, y: height });\n    // lt.y = -lt.y\n    const rb = svgPoint({ x: width, y: 0 });\n    // rb.y = -rb.y\n    const lb = svgPoint({ x: 0, y: 0 });\n    // lb.y = -lb.y\n\n    return { rt, lt, rb, lb }\n  }\n\n  return { \n  \tscale: () => scale,\n  \tx: () => pointX,\n  \ty: () => pointY,\n    corners,\n    svgPoint,\n    setScaleXY\n  }\n}", "import { dispatch } from \"../dispatch.js\";\n\nlet count = 0;\n\nfunction readFileUploadComp(file) {\n  var reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onloadend = event => {\n    let text = reader.result;\n    dispatch(\"UPLOAD_COMP\", { text, name: `component${count}` });\n    count++;\n  };\n}\n\nfunction readFileJS(file) {\n  var reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onloadend = event => {\n    let text = reader.result;\n    dispatch(\"UPLOAD_JS\", { text });\n  };\n}\n\nfunction upload(files, extensions = []) {\n  let file = files[0];\n  let fileName = file.name.split(\".\");\n  let name = fileName[0];\n  const extension = fileName[fileName.length - 1];\n\n  // if (extensions.length > 0 && !extensions.includes(extension)) throw \"Extension not recongized: \" + fileName;\n  \n  // TODO: if js then drop and run\n  // TODO: if kicad mod readFile as is\n  if (extension === \"kicad_mod\") {\n    readFileUploadComp(file);\n  } else if (extension === \"js\") {\n    readFileJS(file);\n  } else {\n    throw Error(\"Unknown extension:\", extension);\n  }\n\n};\n\nexport function addDropUpload(state, bodyListener) {\n  bodyListener(\"drop\", \"\", function(evt) {    \n    let dt = evt.dataTransfer;\n    let files = dt.files;\n\n    upload(files);\n\n    pauseEvent(evt);\n  });\n\n  bodyListener(\"dragover\", \"\", function(evt) {    \n    pauseEvent(evt);\n  });\n}", "import { dispatch } from \"../dispatch.js\";\n\nexport function addSelectBox(state, svgListener) {\n  let start = null;\n  let end = null;\n  const svg = document.querySelector(\"svg\");\n\n  svgListener(\"mousedown\", \"\", e => {\n    if (!e.shiftKey) return;\n\n    start = svg.panZoomParams.svgPoint({x: e.offsetX, y: e.offsetY});\n  })\n\n  svgListener(\"mousemove\", \"\", e => {\n  \tdocument.body.classList.add(\"no-select\");\n    if (!e.shiftKey) return;\n    if (start === null) return;\n\n    end = svg.panZoomParams.svgPoint({x: e.offsetX, y: e.offsetY});\n\n    state.selectBox.start = start;\n    state.selectBox.end = end;\n    dispatch(\"RENDER\");\n  })\n\n  function contains (p, selectBox) {\n    // console.log(p, selectBox);\n    let { start, end } = selectBox;\n    return (\n      (p.x > start.x && p.x < end.x && p.y > start.y && p.y < end.y) ||\n      (p.x > start.x && p.x < end.x && p.y < start.y && p.y > end.y) ||\n      (p.x < start.x && p.x > end.x && p.y > start.y && p.y < end.y) ||\n      (p.x < start.x && p.x > end.x && p.y < start.y && p.y > end.y)\n    );\n  };\n\n  svgListener(\"mouseup\", \"\", e => {\n    if (!e.shiftKey) return;\n  \tdocument.body.classList.remove(\"no-select\");\n    if (start && end) {\n      // select\n    }\n    \n    start = null;\n    end = null;\n    state.selectBox.start = start;\n    state.selectBox.end = end;\n    dispatch(\"RENDER\");\n  })\n}", "import { dispatch } from \"../dispatch.js\";\n\nconst isDigit = ch => /[0-9]/i.test(ch) || ch === \".\";\n\nexport function addNumberDragging(state, bodyListener) {\n  let dragged = false;\n  let num, pos_start, pos_end, sigFigs, usePrecision, selectedText;\n\n  let pos_sign = null;\n  let is_sum = false;\n  let is_neg = false;\n\n  bodyListener(\"mousedown\", \".ͼb\", e => {\n    const cm = document.querySelector(\"code-mirror\");\n\n    const s = cm.view.state;\n    const doc = s.doc;\n    const pos = s.selection.main.head;\n    const at = doc.lineAt(pos);\n\n    let { from, to, text} = doc.lineAt(pos)\n    let start = pos, end = pos;\n    // console.log(\"start\", start, text[start - from - 1], \"end\", end, text[end - from]);\n    while (start > from && isDigit(text[start - from - 1], true)) start--\n    while (end < to && isDigit(text[end - from])) end++\n\n    let ch;\n    if (start > from) {\n        let start_sign = start;\n        while (start_sign > from) {\n            start_sign--;\n            ch = text[start_sign - from];\n            if (ch === \" \") {\n                continue;\n            } else if (ch === \"+\") {\n                pos_sign = start_sign;\n            } else if (ch === \"-\") {\n                pos_sign = start_sign;\n                is_neg = true;\n            } else if ([\"(\", \"[\", \",\", \"/\", \"*\", \";\", \"{\", \"=\", \":\"].includes(ch)) {\n                break;\n            } else {\n                is_sum = true;\n                break;\n            }\n        }\n    }\n\n    console.log(is_sum, is_neg, pos_sign);\n\n    selectedText = text.slice(start-from, end-from);\n\n    num = Number(selectedText);\n\n    if (is_neg) {\n        num = -num;\n    }\n    dragged = true;\n    pos_start = start;\n    pos_end = end;\n    usePrecision = selectedText.includes(\".\");\n    sigFigs = selectedText.includes(\".\") ? selectedText.split(\".\")[1].length : 1;\n  })\n\n  bodyListener(\"mousemove\", \"\", e => {\n    if (!dragged) return;\n    const cm = document.querySelector(\"code-mirror\");\n\n        let newValue;\n\n        let textLength = selectedText.length;\n\n\t\tconst sign = 0 > e.movementX ? 1 : -1;\n\t\t// console.log(sign, e.movementX);\n\t\tif (usePrecision) {\n\t\t\tlet rounded = Math.round(num*10**sigFigs);\n\t\t\tlet newNum = rounded + e.movementX;\n\t\t\tnewNum = Math.round(newNum)/(10**sigFigs);\n\n\t\t\tnum = newNum;\n            newValue = `${Math.abs(num).toFixed(sigFigs)}`;\n\t\t} else {\n\t\t\tnum += e.movementX;\n            newValue = `${Math.abs(num)}`;\n\t\t}\n\n        if (is_sum) {\n            if (pos_sign == null) {\n                newValue = (num < 0 ? \"-\" : \"+\") + newValue;\n            }\n            cm.view.dispatch({\n                changes: {from: pos_start, to: pos_start + textLength, insert: newValue}\n            });\n            if (pos_sign != null) {\n                cm.view.dispatch({\n                    changes: {from: pos_sign, to: pos_sign+1, insert: num < 0 ? \"-\" : \"+\"}\n                });\n            }\n        } else {\n            if (pos_sign != null) {\n                if (num < 0) {\n                    cm.view.dispatch({\n                        changes: {from: pos_start, to: pos_start + textLength, insert: newValue}\n                    });\n                    cm.view.dispatch({\n                        changes: {from: pos_sign, to: pos_sign+1, insert: \"-\"}\n                    });\n                } else {\n                    cm.view.dispatch({\n                        changes: {from: pos_sign, to: pos_start + textLength, insert: newValue}\n                    });\n                    pos_start = pos_sign;\n                    pos_sign = null;\n                }\n            } else {\n                if (num < 0) {\n                    newValue = \"-\"+newValue;\n                }\n                cm.view.dispatch({\n                    changes: {from: pos_start, to: pos_start + textLength, insert: newValue}\n                });\n            }\n        }\n\n\t\tselectedText = newValue;\n\n\t\tdispatch(\"RUN\", { dragging: true });\n\t\tpauseEvent(e);\n  })\n\n  bodyListener(\"mouseup\", \"\", e => {\n    dragged = false;\n    pos_sign = null;\n    is_sum = false;\n    is_neg = false;\n  })\n}\n", "export function getFileSection(sectionName, program) {\n  const re = new RegExp(`\\\\/\\\\*\\\\s*--\\\\s*${sectionName}\\\\s*--\\\\s*\\\\*\\\\/`, 'g')\n\n  const matches = program.matchAll(re);\n  const match = matches.next();\n\n  return match.value !== undefined\n    ? match.value.index + match.value[0].length + 1\n    : null;\n}", "import esprima from '../../_snowpack/pkg/esprima.js';\nimport { dispatch } from \"../dispatch.js\";\nimport { getFileSection } from \"../getFileSection.js\"\n\nfunction foldImports(state) {\n  const anotherComp = l => l.includes(\"return kicadToObj(\");\n\n  const doc = state.codemirror.view.state.doc;\n  const lines = doc.toString().split(\"\\n\");\n  let i = 0;\n  let count = 0;\n  while (true) {\n    const line = lines[i];\n    if (!line) break;\n    count += line.length;\n    if (i > lines.length) break;\n    if (lines[i] === \"`)})()\" && !anotherComp(lines[i+1])) break;\n    i++;\n  };\n\n  state.codemirror.foldRange(0, count+i);\n}\n\nfunction walk( ast, fn ) {\n  var stack = [ ast ], i, j, key, len, node, child, subchild\n  for ( i = 0; i < stack.length; i += 1 ) {\n    node = stack[ i ]\n    if (typeof node == 'number')\n      continue\n    fn( node )\n    for ( key in node ) {\n      if ( key !== 'parent' ) {\n        child = node[ key ]\n        if ( child instanceof Array ) {\n          for ( j = 0, len = child.length; j < len; j += 1 ) {\n            subchild = child[ j ]\n            if( subchild instanceof Object ) {\n              subchild.parent = node\n            }\n            stack.push( subchild )\n          }\n        } else if ( child != void 0 && typeof child.type === 'string' ) {\n          child.parent = node\n          stack.push( child )\n        }\n      }\n    }\n  }\n}\n\nexport function addImportDrag(state, listener) {\n  const svg = document.querySelector(\"svg\");\n\n  let clicked = false;\n  let index, string, ast;\n\n  listener(\"mousedown\", \".footprint-svg, .path-footprint\", e => {\n    clicked = true;\n\n    index = e.target.dataset.index;\n\n    string = state.codemirror.view.state.doc.toString();\n    ast = esprima.parseScript(string, { range: true, comment: true });\n\n    // pauseEvent(e);\n  })\n\n  listener(\"mousemove\", \"\", e => {\n    if (!clicked) return;\n\n    const svgPoint = svg.panZoomParams.svgPoint;\n    const currentPoint = svgPoint({x: e.offsetX, y: e.offsetY})\n\n    var path = event.path || (event.composedPath && event.composedPath());\n\n    if (!path) return;\n\n    const overSVG = path.some(el => el.matches && el.matches(\"#viewer\"));\n\n    // want to add footprint with x y currentPoint\n\n    const rect = document.querySelector(\"#viewer\").getBoundingClientRect();\n\n    // Mouse position\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    state.previewFootprint = [\n      state.footprints[index],\n      [ x, y ]\n    ];\n\n    dispatch(\"RENDER\");\n  })\n\n  listener(\"mouseup\", \"\", e => {\n\n    if (state.previewFootprint !== null) {\n\n      const rect = document.querySelector(\"#viewer\").getBoundingClientRect();\n\n      const x = e.clientX - rect.left;\n      const y = rect.bottom - e.clientY;\n\n      const svgPoint = svg.panZoomParams.svgPoint;\n      const pos = svgPoint({ x: x, y: y })\n\n      const string = state.codemirror.view.state.doc.toString();\n      const start = getFileSection(\"ADD_COMPONENTS\", string);\n\n      if (start !== null) {\n        const name = state.previewFootprint[0][0];\n\n        const text = `board.add(${name}, { translate: [${pos.x}, ${pos.y}] })\\n`\n\n        state.codemirror.view.dispatch({\n          changes: {from: start, insert: text}\n        });\n\n        dispatch(\"RUN\");\n      };\n    }\n\n    state.previewFootprint = null;\n    clicked = false;\n  })\n\n  listener(\"mouseleave\", \"\", e => {\n    state.previewFootprint = null;\n    clicked = false;\n  })\n}\n", "import { addTranslateHandle } from \"./events/addTranslateHandle.js\";\nimport { addVerticalBarDrag } from \"./events/addVerticalBarDrag.js\";\nimport { addImgPanZoom } from \"./events/addImgPanZoom.js\";\nimport { addDropUpload } from \"./events/addDropUpload.js\";\nimport { addSelectBox } from \"./events/addSelectBox.js\";\nimport { addNumberDragging } from \"./events/addNumberDragging.js\";\n// import { download } from \"./events/download.js\"\nimport { addImportDrag } from \"./events/addImportDrag.js\";\n\nimport { dispatch } from \"./dispatch.js\";\n\nfunction pauseEvent(e) {\n    if(e.stopPropagation) e.stopPropagation();\n    if(e.preventDefault) e.preventDefault();\n    e.cancelBubble=true;\n    e.returnValue=false;\n    return false;\n}\n\nwindow.pauseEvent = pauseEvent;\n\nconst trigger = e => e.composedPath()[0];\nconst matchesTrigger = (e, selectorString) => trigger(e).matches(selectorString);\n// create on listener\nconst createListener = (target) => (eventName, selectorString, event) => { // focus doesn't work with this, focus doesn't bubble, need focusin\n\ttarget.addEventListener(eventName, (e) => {\n\t\te.trigger = trigger(e); // Do I need this? e.target seems to work in many (all?) cases\n\t\tif (selectorString === \"\" || matchesTrigger(e, selectorString)) event(e);\n\t})\n}\n\nexport function addEvents(state) {\n\tconst svg = document.querySelector(\"svg\");\n\tconst listenSVG = createListener(svg);\n  \n\tsvg.panZoomParams = addImgPanZoom(state, listenSVG);\n  \tstate.panZoomParams = svg.panZoomParams;\n\n\taddSelectBox(state, listenSVG);\n  \taddTranslateHandle(state, listenSVG);\n\n\tconst body = document.querySelector(\"body\");\n\tconst listenBody = createListener(body);\n\taddImportDrag(state, listenBody);\n\taddDropUpload(state, listenBody);\n\taddNumberDragging(state, listenBody);\n\taddVerticalBarDrag(state, listenBody);\n\n\tlistenBody(\"keydown\", \"\", (e) => {\n\t\tlet code = event.code;\n\t\tif (code === \"Enter\" && event.shiftKey) {\n\t\t  event.preventDefault();\n\t\t  dispatch(\"RUN\");\n\t\t} else if (code === \"KeyT\" && event.shiftKey) { // test something\n      \n    \t}\n\t})\n\n\twindow.addEventListener(\"unload\", () => {\n\t\tconst string = state.codemirror.view.state.doc.toString();\n\t\twindow.localStorage.setItem(\"svg-pcb\", string);\n\t})\n\n  // listenBody(\"mousedown\", \".download-button\", () => download(state));\n\n  // listenBody(\"click\", \".center-button\", () => {\n  //   const svg = document.querySelector(\"svg\");\n  //   svg.panZoomParams.setScaleXY(state.limits);\n  // })\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import { Turtle } from \"./Turtle.js\";\n\nconst length = ([x1, y1], [x2, y2]) => Math.sqrt((x2-x1)**2 + (y2-y1)**2);\n\nconst via = (rv, rp) => {\n  return {\n    \"F\": {\n      \"pos\": [0, 0],\n      \"shape\": new Turtle().circle(rp).getPathData(),\n      \"layers\": [\"F.Cu\"],\n      \"index\": 1\n    },\n    \"B\": {\n      \"pos\": [0, 0],\n      \"shape\": new Turtle().circle(rp).getPathData(),\n      \"layers\": [\"B.Cu\"],\n      \"index\": 2\n    },\n    \"drill\": {\n      \"pos\": [0, 0],\n      \"shape\": new Turtle().circle(rv).getPathData(),\n      \"layers\": [\"drill\"]\n    }\n  };\n}\n\nconst vector_add = ([x, y], [dx, dy]) => [x + dx, y + dy];\nconst dot = ([x0, y0], [x1, y1]) => x0*x1 + y0*y1;\nconst vector_rotate = ([x, y], angle) => [\n  x*Math.cos(angle) - y * Math.sin(angle),\n  y*Math.cos(angle) + x * Math.sin(angle)\n]\n\n\nclass Component {\n  constructor({ pads, layers }) {\n    this.pads = pads;\n    this.layers = layers;\n  }\n\n  pad(name) {\n    return this.pads[name];\n  }\n\n  padX(name) {\n    return this.pads[name][0];\n  }\n\n  padY(name) {\n    return this.pads[name][1];\n  }\n\n  get pos() {\n    return this.pads[\"center\"]; // should store this somewhere else\n  }\n\n  get posX() {\n    return this.pads[\"center\"][0]; // should store this somewhere else\n  }\n\n  get posY() {\n    return this.pads[\"center\"][1]; // should store this somewhere else\n  }\n}\n\n// let SWD_4_05 = {\n//   \"RST\": {\n//     \"pos\": [-0.072, -0.025],\n//     \"shape\": \"M 0 0 L 90 90\",\n//     \"layers\": [\"F.Cu\"]\n//   },\n//   \"GND\": {\n//     \"pos\": [0.072, -0.025],\n//     \"shape\": \"M 0 0 L 90 90\",\n//     \"layers\": [\"F.Cu\"]\n//   }\n// }\n\nfunction makeText(text, height, pos, rotate) {\n  let lines = text.split('\\n');\n  let t = new Turtle();\n\n  for (let [i, txt] of lines.entries()) {\n    if (txt.length == 0) {\n      continue;\n    }\n\n    if (txt.localeCompare(\"A\") == 0) {\n        txt = \"A \";\n    }\n\n    // TODO: render text better\n    let t2 = new Turtle().text(txt).scale(0.01*height).originate().translate([0, i*height*1.5]);\n    // let t2 = new Turtle();\n\n    t.group(t2);\n  }\n\n  // return t.originate().translate(pos);\n  return t.originate().translate(pos).rotate(rotate, pos);\n}\n\nfunction makeComponent(comp, options = {}) {\n  let translate = options.translate || [0, 0];\n  let rotate = options.rotate || 0;\n  let padLabelSize = options.padLabelSize || 0.02;\n  // add flip\n\n  const [xOff, yOff] = translate;\n  const rad = (rotate * Math.PI) / 180;\n\n  const pads = {}; // name: pos\n  const padsLabels = [];\n  let results = {};\n\n  for (const pad in comp) {\n    let { pos, shape, layers, origin } = comp[pad];\n\n    shape = typeof shape === \"string\" ? new Turtle().pathD(shape) : shape.copy();\n\n    let offset = [pos[0], pos[1]];\n    if (origin != undefined) {\n      offset[0] = origin[0];\n      offset[1] = origin[1];\n    }\n    shape.translate(offset).translate(translate).rotate(rotate, translate);\n\n    let pad_pos = vector_add(vector_rotate(pos, rad), translate);\n    pads[pad] = pad_pos;\n\n    if (!pad.includes(\"drill\")) {\n      let text = makeText(pad, padLabelSize, pad_pos, rotate);\n      padsLabels.push( text );\n    }\n\n    layers.forEach(l => {\n      if (l in results) results[l] = results[l].group(shape);\n      else results[l] = shape;\n    })\n  }\n\n  pads[\"center\"] = translate;\n\n  results.padLabels = padsLabels.reduce( (acc, cur) => acc.group(cur), new Turtle());\n\n  return new Component({\n    pads,\n    layers: results\n  })\n}\n\nexport {\n  makeText,\n  makeComponent,\n  via\n}\n", "import { Turtle } from \"./Turtle.js\";\n\nconst overlap = (p1, p2) => length(p1, p2) < 0.000001;\nconst length = ([x1, y1], [x2, y2]) => Math.sqrt((x2-x1)**2 + (y2-y1)**2);\nconst magDiff = (p0, p1) => Math.sqrt(\n  (p1[0] - p0[0])**2 +\n  (p1[1] - p0[1])**2\n)\nconst normDiff = (p0, p1) => {\n  const m = magDiff(p0, p1);\n\n  return [ (p1[0] - p0[0])/m, (p1[1] - p0[1])/m ];\n}\n\nconst norm = vec => {\n  const mag = Math.sqrt(vec[0]**2 + vec[1]**2);\n\n  return [vec[0]/mag, vec[1]/mag];\n}\n\nconst slerp = (t, p0, p1, angle) => {\n  const factor1 = Math.sin(angle*(1-t))/Math.sin(angle);\n  const factor2 = Math.sin(angle*t)/Math.sin(angle);\n  return [p0[0]*factor1 + p1[0]*factor2, p0[1]*factor1 + p1[1]*factor2]\n}\n\nfunction getWirePt(cmd) {\n  if (typeof cmd[0] !== \"string\") {\n    return cmd;\n  } else if (cmd[0] === \"chamfer\") {\n    const [ _, radius, pt ] = cmd;\n    return pt;\n  } else if (cmd[0] === \"fillet\") {\n    const [ _, radius, pt ] = cmd;\n    return pt;\n  } else if (cmd[0] === \"handles\") {\n    throw \"Can't begin wire with handles.\";\n  } else {\n    return null;\n  }\n}\n\nfunction mergeHandles(cmds) {\n  const mergedCmds = [];\n  let i = 0;\n  let lastCmdHandles = false;\n  cmds.forEach(cmd => {\n\n    if (cmd[0] === \"handles\" && lastCmdHandles === true) {\n      mergedCmds.at(-1).push(...cmd.slice(1));\n    } else {\n      mergedCmds.push(cmd);\n      lastCmdHandles = false;\n    }\n\n    if (cmd[0] === \"handles\") lastCmdHandles = true;\n  })\n\n  return mergedCmds;\n}\n\nexport function wire(cmds, thickness) {\n  cmds = mergeHandles(cmds);\n\n  let prevPt = getWirePt(cmds[0]);\n  const pts = [ prevPt ];\n\n  for (let i = 1; i < cmds.length; i++) {\n    const cmd = cmds[i];\n\n    let nextPt = null;\n    let j = i + 1;\n    let nextCmd = cmds[j];\n    while (nextCmd && nextCmd[0] !== \"handles\") {\n      nextPt = getWirePt(nextCmd);\n      if (nextPt !== null) break;\n      j++;\n      nextCmd = cmds[j];\n    }\n\n    if (typeof cmd[0] !== \"string\") {\n      if (overlap(cmd, prevPt)) continue;\n\n      pts.push(cmd);\n\n      prevPt = cmd;\n    } else if (cmd[0] === \"chamfer\") {\n      const [ _, dist, pt ] = cmd;\n\n      if (prevPt && nextPt) {\n        if (overlap(pt, prevPt) || overlap(pt, nextPt)) continue;\n\n        const [ dist0, dist1 ] = (Array.isArray(dist))\n          ? dist\n          : [dist, dist];\n\n        const prevNorm = normDiff(pt, prevPt);\n\n        const newPt0 = [\n          pt[0] + prevNorm[0]*dist0,\n          pt[1] + prevNorm[1]*dist0\n        ]\n\n        const nextNorm = normDiff(pt, nextPt);\n\n        const newPt1 = [\n          pt[0] + nextNorm[0]*dist1,\n          pt[1] + nextNorm[1]*dist1\n        ]\n\n        pts.push(newPt0);\n        pts.push(newPt1);\n\n      } else {\n        throw \"Chamfering requires previous and next points.\"\n      }\n\n      prevPt = pts.at(-1);\n    } else if (cmd[0] === \"fillet\") {\n      let [ _, radius, pt ] = cmd;\n\n      if (radius < 0) radius = 0.00000001;\n\n      if (prevPt && nextPt) {\n        if (overlap(pt, prevPt) || overlap(pt, nextPt)) continue;\n\n        const prevNorm = normDiff(pt, prevPt);\n        const nextNorm = normDiff(pt, nextPt);\n\n        const angle = Math.acos(\n          (prevNorm[0] * nextNorm[0]) +\n          (prevNorm[1] * nextNorm[1])\n        )\n\n        let dist = radius/Math.tan(angle/2);\n\n        const maxStartDist = length(prevPt, pt);\n        const maxEndDist = length(nextPt, pt);\n\n        dist = Math.min(maxStartDist, maxEndDist, dist);\n        radius = Math.min(dist*Math.tan(angle/2), radius);\n\n        const start = [\n          pt[0] + prevNorm[0]*dist,\n          pt[1] + prevNorm[1]*dist\n        ]\n\n\n        const end = [\n          pt[0] + nextNorm[0]*dist,\n          pt[1] + nextNorm[1]*dist,\n        ]\n\n        const newPts = [];\n        // newPts.push(start);\n\n        const midNorm = norm([\n          (prevNorm[0] + nextNorm[0]),\n          (prevNorm[1] + nextNorm[1])\n        ]);\n\n        const midDist = Math.sqrt(dist**2 + radius**2);\n\n        const midPt = [\n          pt[0] + midNorm[0]*midDist,\n          pt[1] + midNorm[1]*midDist\n        ];\n\n        const aStart = Math.atan2(\n          start[0] - midPt[0],\n          start[1] - midPt[1],\n        )\n\n        const arcAngle = Math.PI - angle;\n\n        const startMid = [\n          start[0] - midPt[0],\n          start[1] - midPt[1]\n        ]\n\n        const endMid = [\n          end[0] - midPt[0],\n          end[1] - midPt[1]\n        ]\n\n        for (let i = 1/20; i < 1; i += 1/20) {\n          const [ x, y ] = slerp(i, startMid, endMid, arcAngle)\n\n          let pt = [\n            midPt[0] + x,\n            midPt[1] + y\n          ]\n\n          newPts.push(pt);\n        }\n\n\n        // newPts.push(end);\n        pts.push(...newPts);\n      } else {\n        throw \"Filleting requires previous and next points.\"\n      }\n\n      prevPt = pts.at(-1);\n    } else if (cmd[0] === \"handles\") {\n      const [ _, ...controlPts ] = cmd;\n\n      if (prevPt && nextPt) {\n        let bezierPts = bezier([ prevPt, ...controlPts, nextPt ])\n        bezierPts = bezierPts.slice(1, -1);\n        if (bezierPts.length > 0) pts.push(...bezierPts);\n      } else {\n        throw \"Beziers requires previous and next points.\"\n      }\n\n      prevPt = pts.at(-1);\n    }\n\n  }\n\n  // TODO: remove overlapping\n\n  const result = new Turtle();\n\n  pts.forEach((pt, i) => result.goTo(pt, i !== 0));\n\n  result.offset(thickness/2)\n\n  return result;\n}\n\n\n// bezier\n\nconst lerp = (t, p1, p2) => [\n  (1 - t) * p1[0] + t * p2[0],\n  (1 - t) * p1[1] + t * p2[1],\n]\n\nconst reduce = (t, p1, p2, ...ps) => ps.length > 0\n    ? [lerp(t, p1, p2), ...reduce(t, p2, ...ps)]\n    : [lerp(t, p1, p2)];\n\nconst deCasteljau = (t, ps) => ps.length > 1\n    ? deCasteljau(t, reduce(t, ...ps))\n    : ps[0];\n\nfunction bezier(ps) {\n  const pts = [];\n  for (let t = 0; t <= 1; t += 1/64 ) {\n    const pt = deCasteljau(t, ps);\n    pts.push(pt);\n  }\n\n  return pts;\n}\n", "import { makeComponent, makeText } from \"./pcb_helpers.js\";\nimport { wire } from \"./wire.js\";\nimport { Turtle } from \"./Turtle.js\";\n\nexport class PCB {\n  constructor() {\n    this.layers = {}; // maybe should just store shapes, get layer contents on demand\n    this.components = [];\n  }\n\n  add(footprint, ops = {}) {\n    // ops = { translate, rotate, padLabelSize, componentLabelSize, value? }\n    const name = ops.name || \"\";\n    const transform = {\n      translate: ops.translate || [0, 0],\n      rotate: ops.rotate || 0,\n      padLabelSize: ops.padLabelSize || 0.03,\n      componentLabelSize: ops.componentLabelSize || 0.04,\n    };\n\n    const newComp = makeComponent(footprint, transform);\n\n    for ( const layer in newComp.layers) {\n      this.addShape(layer, newComp.layers[layer]);\n    }\n\n    if (name !== \"\" && !name.includes(\"drill\")) {\n      let componentLabels = makeText(name, transform.componentLabelSize, transform.translate, 0);\n\n      this.addShape(\"componentLabels\", componentLabels);\n    }\n\n    this.components.push(newComp);\n\n    return newComp;\n  }\n\n  addShape(layer, shape) {\n    if (!(shape instanceof Turtle)) return console.error(\"Shape isn't Turtle.\");\n\n    if (layer in this.layers) {\n      this.layers[layer] = this.layers[layer].group(shape);\n    } else {\n      this.layers[layer] = shape;\n    }\n\n    return this.layers[layer];\n  }\n\n  subtractShape(layer, shape) {\n    if (!(shape instanceof Turtle)) return console.error(\"Shape isn't Turtle.\");\n\n    if (layer in this.layers) {\n      this.layers[layer] = this.layers[layer].difference(shape);\n    } else {\n      this.layers[layer] = new Turtle();\n    }\n\n    return this.layers[layer];\n  }\n\n  getLayer(layer, flatten = null) { // returns array of path data\n    flatten = flatten ?? ![\"padLabels\", \"componentLabels\"].includes(layer);\n\n    return this.layers[layer]\n      ? flatten\n        ? this.layers[layer].flatten().getPathData() // TODO: this flatten is a bottleneck\n        : this.layers[layer].getPathData()\n      : \"\";\n  }\n\n  wire(pts, thickness, layer = \"F.Cu\") {\n    this.addShape(layer, wire(pts, thickness));\n  }\n}\n", "// https://github.com/fwg/s-expression\n\nfunction SParser(stream) {\n    this._line = this._col = this._pos = 0;\n    this._stream = stream;\n}\n\nSParser.not_whitespace_or_end = /^(\\S|$)/;\nSParser.space_quote_paren_escaped_or_end = /^(\\s|\\\\|\"|'|`|,|\\(|\\)|$)/;\nSParser.string_or_escaped_or_end = /^(\\\\|\"|$)/;\nSParser.string_delimiters = /[\"]/;\nSParser.quotes = /['`,]/;\nSParser.quotes_map = {\n    '\\'': 'quote',\n    '`':  'quasiquote',\n    ',':  'unquote'\n};\n\nSParser.prototype = {\n    peek: peek,\n    consume: consume,\n    until: until,\n    error: error,\n    string: string,\n    atom: atom,\n    quoted: quoted,\n    expr: expr,\n    list: list\n};\n\nexport function sParse(stream) {\n    var parser = new SParser(stream);\n    var expression = parser.expr();\n\n    if (expression instanceof Error) {\n        return expression;\n    }\n\n    // if anything is left to parse, it's a syntax error\n    if (parser.peek() != '') {\n        return parser.error('Superfluous characters after expression: `' + parser.peek() + '`');\n    }\n\n    return expression;\n};\n\nfunction error(msg) {\n    var e = new Error('Syntax error: ' + msg);\n    e.line = this._line + 1;\n    e.col  = this._col + 1;\n    return e;\n}\n\nfunction peek() {\n    if (this._stream.length == this._pos) return '';\n    return this._stream[this._pos];\n}\n\nfunction consume() {\n    if (this._stream.length == this._pos) return '';\n\n    var c = this._stream[this._pos];\n    this._pos += 1;\n\n    if (c == '\\r') {\n        if (this.peek() == '\\n') {\n            this._pos += 1;\n            c += '\\n';\n        }\n        this._line++;\n        this._col = 0;\n    } else if (c == '\\n') {\n        this._line++;\n        this._col = 0;\n    } else {\n        this._col++;\n    }\n\n    return c;\n}\n\nfunction until(regex) {\n    var s = '';\n\n    while (!regex.test(this.peek())) {\n        s += this.consume();\n    }\n\n    return s;\n}\n\nfunction string() {\n    // consume \"\n    var delimiter = this.consume();\n\n    var str = '';\n\n    while (true) {\n        str += this.until(SParser.string_or_escaped_or_end);\n        var next = this.peek();\n\n        if (next == '') {\n            return this.error('Unterminated string literal');\n        }\n\n        if (next == delimiter) {\n            this.consume();\n            break;\n        }\n\n        if (next == '\\\\') {\n            this.consume();\n            next = this.peek();\n\n            if (next == 'r') {\n                this.consume();\n                str += '\\r';\n            } else if (next == 't') {\n                this.consume();\n                str += '\\t';\n            } else if (next == 'n') {\n                this.consume();\n                str += '\\n';\n            } else if (next == 'f') {\n                this.consume();\n                str += '\\f';\n            } else if (next == 'b') {\n                this.consume();\n                str += '\\b';\n            } else {\n                str += this.consume();\n            }\n\n            continue;\n        }\n\n        str += this.consume();\n    }\n\n    // wrap in object to make strings distinct from symbols\n    return new String(str);\n}\n\nfunction atom() {\n    if (SParser.string_delimiters.test(this.peek())) {\n        return this.string();\n    }\n\n    var atom = '';\n\n    while (true) {\n        atom += this.until(SParser.space_quote_paren_escaped_or_end);\n        var next = this.peek();\n\n        if (next == '\\\\') {\n            this.consume();\n            atom += this.consume();\n            continue;\n        }\n\n        break;\n    }\n\n    return atom;\n}\n\nfunction quoted() {\n    var q = this.consume();\n    var quote = SParser.quotes_map[q];\n\n    if (quote == \"unquote\" && this.peek() == \"@\") {\n        this.consume();\n        quote = \"unquote-splicing\";\n        q = ',@';\n    }\n\n    // ignore whitespace\n    this.until(SParser.not_whitespace_or_end);\n    var quotedExpr = this.expr();\n\n    if (quotedExpr instanceof Error) {\n        return quotedExpr;\n    }\n\n    // nothing came after '\n    if (quotedExpr === '') {\n        return this.error('Unexpected `' + this.peek() + '` after `' + q + '`');\n    }\n\n    return [quote, quotedExpr];\n}\n\nfunction expr() {\n    // ignore whitespace\n    this.until(SParser.not_whitespace_or_end);\n\n    if (SParser.quotes.test(this.peek())) {\n        return this.quoted();\n    }\n\n    var expr = this.peek() == '(' ? this.list() : this.atom();\n\n    // ignore whitespace\n    this.until(SParser.not_whitespace_or_end);\n\n    return expr;\n}\n\nfunction list() {\n    if (this.peek() != '(') {\n        return this.error('Expected `(` - saw `' + this.peek() + '` instead.');\n    }\n\n    this.consume();\n\n    var ls = [];\n    var v = this.expr();\n\n    if (v instanceof Error) {\n        return v;\n    }\n\n    if (v !== '') {\n        ls.push(v);\n\n        while ((v = this.expr()) !== '') {\n            if (v instanceof Error) return v;\n            ls.push(v);\n        }\n    }\n\n    if (this.peek() != ')') {\n        return this.error('Expected `)` - saw: `' + this.peek() + '`');\n    }\n\n    // consume that closing paren\n    this.consume();\n\n    return ls;\n}", "import { sParse } from \"./s-expression-parser.js\";\nimport { Turtle } from \"./Turtle.js\";\n\n// parser should take units\n\nconst convertLayers = (layers) => layers.reduce((acc, cur) => {\n  let l = cur.split(\".\");\n  if (l.length === 0) return acc;\n  else if (l[0] !== \"*\") return [...acc, cur];\n  else return [...acc, `F.${l[1]}`, `B.${l[1]}`];\n}, [])\n\nexport function kicadToObj(data) {\n  let r = sParse(data);\n\n  let scale = 1/25.4;\n  const padsToAdd = {};\n\n  for (const line of r) {\n    const isPad = line[0] === \"pad\";\n    const isSmd = line[2] === \"smd\";\n    const isThru = line[2] === \"thru_hole\";\n    const shape = line[3];\n\n    if (isPad && (isSmd || isThru)) {\n      let name = line[1];\n\n      let at = line[4].slice(1).map(x => Number(x)*scale);\n      at[1] = -at[1]; // negative Y axis\n\n      let layers = line[line.length - 1];\n      layers = layers ? layers.slice(1) : [];\n      layers = convertLayers(layers);\n\n  \n      let size = line[5].slice(1).map(x => Number(x)*scale);\n\n      let shapeTurtle = shape === \"rect\"\n        ? new Turtle().rectangle(...size)\n        : new Turtle().circle(size[0]);\n     \n      if (padsToAdd[name] === undefined) padsToAdd[name] = [{ pos: at, shape: shapeTurtle, layers }];\n      else padsToAdd[name].push({ pos: at, shape: shapeTurtle, layers });\n\n      const drill = line[line.length - 2] ? line[line.length - 2][0] === \"drill\" : false;\n\n      if (drill) {\n        let drillDia = Number(line[line.length - 2][1])/25.4;\n        let l = { \n          pos: at, \n          shape: new Turtle().circle(drillDia),\n          layers: [\"drill\"]\n        }\n\n        if (padsToAdd[`${name}_drill`] === undefined) padsToAdd[`${name}_drill`] = [l];\n        else  padsToAdd[`${name}_drill`].push(l);\n      }\n    }\n  }\n\n  let result = Object.entries(padsToAdd).reduce((acc, cur) => {\n    const [key, value] = cur;\n\n    if (value.length === 1) {\n      acc[key] = value[0];\n    } else {\n      value.forEach((v, i) => {\n        acc[`${key}_${i + 1}`] = v;\n      })\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n}\n\n\n\n\n", "import { c as createCommonjsModule, a as commonjsGlobal } from './common/_commonjsHelpers-8c19dec8.js';\n\nvar astring_min = createCommonjsModule(function (module, exports) {\n(function(a,b){b(exports);})(\"undefined\"==typeof globalThis?\"undefined\"==typeof self?commonjsGlobal:self:globalThis,function(a){var b=String.prototype;function c(a,b){if(!(a instanceof b))throw new TypeError(\"Cannot call a class as a function\")}function d(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,\"value\"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c);}function e(a,b,c){return b&&d(a.prototype,b),c&&d(a,c),a}function f(a,b){var c=a.generator;if(a.write(\"(\"),null!=b&&0<b.length){c[b[0].type](b[0],a);for(var d,e=b.length,f=1;f<e;f++)d=b[f],a.write(\", \"),c[d.type](d,a);}a.write(\")\");}function g(a,b,c,d){var e=a.expressionsPrecedence[b.type];if(e===17)return !0;var f=a.expressionsPrecedence[c.type];return e===f?(13===e||14===e)&&(\"**\"===b.operator&&\"**\"===c.operator?!d:d?o[b.operator]<=o[c.operator]:o[b.operator]<o[c.operator]):!d&&15===e&&14===f&&\"**\"===c.operator||e<f}function h(a,b,c,d){var e=a.generator;g(a,b,c,d)?(a.write(\"(\"),e[b.type](b,a),a.write(\")\")):e[b.type](b,a);}function j(a,b,c,d){var e=b.split(\"\\n\"),f=e.length-1;if(a.write(e[0].trim()),0<f){a.write(d);for(var g=1;g<f;g++)a.write(c+e[g].trim()+d);a.write(c+e[f].trim());}}function k(a,b,c,d){for(var e,f=b.length,g=0;g<f;g++)e=b[g],a.write(c),\"L\"===e.type[0]?a.write(\"// \"+e.value.trim()+\"\\n\",e):(a.write(\"/*\"),j(a,e.value,c,d),a.write(\"*/\"+d));}function l(a){for(var d=a;null!=d;){var b=d,c=b.type;if(\"C\"===c[0]&&\"a\"===c[1])return !0;if(\"M\"===c[0]&&\"e\"===c[1]&&\"m\"===c[2])d=d.object;else return !1}}function m(a,b){var c=a.generator,d=b.declarations;a.write(b.kind+\" \");var e=d.length;if(0<e){c.VariableDeclarator(d[0],a);for(var f=1;f<e;f++)a.write(\", \"),c.VariableDeclarator(d[f],a);}}Object.defineProperty(a,\"__esModule\",{value:!0}),a.generate=function(a,b){var c=new z(b);return c.generator[a.type](a,c),c.output},a.baseGenerator=a.GENERATOR=a.EXPRESSIONS_PRECEDENCE=a.NEEDS_PARENTHESES=void 0;var n=JSON.stringify;if(!b.repeat)throw new Error(\"String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation\");if(!b.endsWith)throw new Error(\"String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation\");var o={\"||\":3,\"&&\":4,\"|\":5,\"??\":5,\"^\":6,\"&\":7,\"==\":8,\"!=\":8,\"===\":8,\"!==\":8,\"<\":9,\">\":9,\"<=\":9,\">=\":9,in:9,instanceof:9,\"<<\":10,\">>\":10,\">>>\":10,\"+\":11,\"-\":11,\"*\":12,\"%\":12,\"/\":12,\"**\":13},p=17;a.NEEDS_PARENTHESES=p;var q={ArrayExpression:20,TaggedTemplateExpression:20,ThisExpression:20,Identifier:20,PrivateIdentifier:20,Literal:18,TemplateLiteral:20,Super:20,SequenceExpression:20,MemberExpression:19,ChainExpression:19,CallExpression:19,NewExpression:19,ArrowFunctionExpression:p,ClassExpression:p,FunctionExpression:p,ObjectExpression:p,UpdateExpression:16,UnaryExpression:15,AwaitExpression:15,BinaryExpression:14,LogicalExpression:13,ConditionalExpression:4,AssignmentExpression:3,YieldExpression:2,RestElement:1};a.EXPRESSIONS_PRECEDENCE=q;var r,s,t,u,v,w,x={Program:function Program(a,b){var c=b.indent.repeat(b.indentLevel),d=b.lineEnd,e=b.writeComments;e&&null!=a.comments&&k(b,a.comments,c,d);for(var f,g=a.body,h=g.length,j=0;j<h;j++)f=g[j],e&&null!=f.comments&&k(b,f.comments,c,d),b.write(c),this[f.type](f,b),b.write(d);e&&null!=a.trailingComments&&k(b,a.trailingComments,c,d);},BlockStatement:w=function(a,b){var c=b.indent.repeat(b.indentLevel++),d=b.lineEnd,e=b.writeComments,f=c+b.indent;b.write(\"{\");var g=a.body;if(null!=g&&0<g.length){b.write(d),e&&null!=a.comments&&k(b,a.comments,f,d);for(var h,j=g.length,l=0;l<j;l++)h=g[l],e&&null!=h.comments&&k(b,h.comments,f,d),b.write(f),this[h.type](h,b),b.write(d);b.write(c);}else e&&null!=a.comments&&(b.write(d),k(b,a.comments,f,d),b.write(c));e&&null!=a.trailingComments&&k(b,a.trailingComments,f,d),b.write(\"}\"),b.indentLevel--;},ClassBody:w,StaticBlock:function StaticBlock(a,b){b.write(\"static \"),this.BlockStatement(a,b);},EmptyStatement:function EmptyStatement(a,b){b.write(\";\");},ExpressionStatement:function ExpressionStatement(a,b){var c=b.expressionsPrecedence[a.expression.type];c===p||3===c&&\"O\"===a.expression.left.type[0]?(b.write(\"(\"),this[a.expression.type](a.expression,b),b.write(\")\")):this[a.expression.type](a.expression,b),b.write(\";\");},IfStatement:function IfStatement(a,b){b.write(\"if (\"),this[a.test.type](a.test,b),b.write(\") \"),this[a.consequent.type](a.consequent,b),null!=a.alternate&&(b.write(\" else \"),this[a.alternate.type](a.alternate,b));},LabeledStatement:function LabeledStatement(a,b){this[a.label.type](a.label,b),b.write(\": \"),this[a.body.type](a.body,b);},BreakStatement:function BreakStatement(a,b){b.write(\"break\"),null!=a.label&&(b.write(\" \"),this[a.label.type](a.label,b)),b.write(\";\");},ContinueStatement:function ContinueStatement(a,b){b.write(\"continue\"),null!=a.label&&(b.write(\" \"),this[a.label.type](a.label,b)),b.write(\";\");},WithStatement:function WithStatement(a,b){b.write(\"with (\"),this[a.object.type](a.object,b),b.write(\") \"),this[a.body.type](a.body,b);},SwitchStatement:function SwitchStatement(a,b){var c=b.indent.repeat(b.indentLevel++),d=b.lineEnd,e=b.writeComments;b.indentLevel++;var f=c+b.indent,g=f+b.indent;b.write(\"switch (\"),this[a.discriminant.type](a.discriminant,b),b.write(\") {\"+d);for(var h,j=a.cases,l=j.length,m=0;m<l;m++){h=j[m],e&&null!=h.comments&&k(b,h.comments,f,d),h.test?(b.write(f+\"case \"),this[h.test.type](h.test,b),b.write(\":\"+d)):b.write(f+\"default:\"+d);for(var n,o=h.consequent,p=o.length,q=0;q<p;q++)n=o[q],e&&null!=n.comments&&k(b,n.comments,g,d),b.write(g),this[n.type](n,b),b.write(d);}b.indentLevel-=2,b.write(c+\"}\");},ReturnStatement:function ReturnStatement(a,b){b.write(\"return\"),a.argument&&(b.write(\" \"),this[a.argument.type](a.argument,b)),b.write(\";\");},ThrowStatement:function ThrowStatement(a,b){b.write(\"throw \"),this[a.argument.type](a.argument,b),b.write(\";\");},TryStatement:function TryStatement(a,b){if(b.write(\"try \"),this[a.block.type](a.block,b),a.handler){var c=a.handler;null==c.param?b.write(\" catch \"):(b.write(\" catch (\"),this[c.param.type](c.param,b),b.write(\") \")),this[c.body.type](c.body,b);}a.finalizer&&(b.write(\" finally \"),this[a.finalizer.type](a.finalizer,b));},WhileStatement:function WhileStatement(a,b){b.write(\"while (\"),this[a.test.type](a.test,b),b.write(\") \"),this[a.body.type](a.body,b);},DoWhileStatement:function DoWhileStatement(a,b){b.write(\"do \"),this[a.body.type](a.body,b),b.write(\" while (\"),this[a.test.type](a.test,b),b.write(\");\");},ForStatement:function ForStatement(a,b){if(b.write(\"for (\"),null!=a.init){var c=a.init;\"V\"===c.type[0]?m(b,c):this[c.type](c,b);}b.write(\"; \"),a.test&&this[a.test.type](a.test,b),b.write(\"; \"),a.update&&this[a.update.type](a.update,b),b.write(\") \"),this[a.body.type](a.body,b);},ForInStatement:r=function(a,b){b.write(\"for \".concat(a[\"await\"]?\"await \":\"\",\"(\"));var c=a.left;\"V\"===c.type[0]?m(b,c):this[c.type](c,b),b.write(\"I\"===a.type[3]?\" in \":\" of \"),this[a.right.type](a.right,b),b.write(\") \"),this[a.body.type](a.body,b);},ForOfStatement:r,DebuggerStatement:function DebuggerStatement(a,b){b.write(\"debugger;\",a);},FunctionDeclaration:s=function(a,b){b.write((a.async?\"async \":\"\")+(a.generator?\"function* \":\"function \")+(a.id?a.id.name:\"\"),a),f(b,a.params),b.write(\" \"),this[a.body.type](a.body,b);},FunctionExpression:s,VariableDeclaration:function VariableDeclaration(a,b){m(b,a),b.write(\";\");},VariableDeclarator:function VariableDeclarator(a,b){this[a.id.type](a.id,b),null!=a.init&&(b.write(\" = \"),this[a.init.type](a.init,b));},ClassDeclaration:function ClassDeclaration(a,b){if(b.write(\"class \"+(a.id?\"\".concat(a.id.name,\" \"):\"\"),a),a.superClass){b.write(\"extends \");var c=a.superClass,d=c.type,e=b.expressionsPrecedence[d];(\"C\"!==d[0]||\"l\"!==d[1]||\"E\"!==d[5])&&(e===p||e<b.expressionsPrecedence.ClassExpression)?(b.write(\"(\"),this[a.superClass.type](c,b),b.write(\")\")):this[c.type](c,b),b.write(\" \");}this.ClassBody(a.body,b);},ImportDeclaration:function ImportDeclaration(a,b){b.write(\"import \");var c=a.specifiers,d=c.length,e=0;if(0<d){for(;e<d;){0<e&&b.write(\", \");var f=c[e],g=f.type[6];if(\"D\"===g)b.write(f.local.name,f),e++;else if(\"N\"===g)b.write(\"* as \"+f.local.name,f),e++;else break}if(e<d){for(b.write(\"{\");;){var h=c[e],j=h.imported.name;if(b.write(j,h),j!==h.local.name&&b.write(\" as \"+h.local.name),++e<d)b.write(\", \");else break}b.write(\"}\");}b.write(\" from \");}this.Literal(a.source,b),b.write(\";\");},ImportExpression:function ImportExpression(a,b){b.write(\"import(\"),this[a.source.type](a.source,b),b.write(\")\");},ExportDefaultDeclaration:function ExportDefaultDeclaration(a,b){b.write(\"export default \"),this[a.declaration.type](a.declaration,b),null!=b.expressionsPrecedence[a.declaration.type]&&\"F\"!==a.declaration.type[0]&&b.write(\";\");},ExportNamedDeclaration:function ExportNamedDeclaration(a,b){if(b.write(\"export \"),a.declaration)this[a.declaration.type](a.declaration,b);else {b.write(\"{\");var c=a.specifiers,d=c.length;if(0<d)for(var g=0;;){var e=c[g],f=e.local.name;if(b.write(f,e),f!==e.exported.name&&b.write(\" as \"+e.exported.name),++g<d)b.write(\", \");else break}b.write(\"}\"),a.source&&(b.write(\" from \"),this.Literal(a.source,b)),b.write(\";\");}},ExportAllDeclaration:function ExportAllDeclaration(a,b){null==a.exported?b.write(\"export * from \"):b.write(\"export * as \"+a.exported.name+\" from \"),this.Literal(a.source,b),b.write(\";\");},MethodDefinition:function MethodDefinition(a,b){a[\"static\"]&&b.write(\"static \");var c=a.kind[0];(\"g\"===c||\"s\"===c)&&b.write(a.kind+\" \"),a.value.async&&b.write(\"async \"),a.value.generator&&b.write(\"*\"),a.computed?(b.write(\"[\"),this[a.key.type](a.key,b),b.write(\"]\")):this[a.key.type](a.key,b),f(b,a.value.params),b.write(\" \"),this[a.value.body.type](a.value.body,b);},ClassExpression:function ClassExpression(a,b){this.ClassDeclaration(a,b);},ArrowFunctionExpression:function ArrowFunctionExpression(a,b){b.write(a.async?\"async \":\"\",a);var c=a.params;null!=c&&(1===c.length&&\"I\"===c[0].type[0]?b.write(c[0].name,c[0]):f(b,a.params)),b.write(\" => \"),\"O\"===a.body.type[0]?(b.write(\"(\"),this.ObjectExpression(a.body,b),b.write(\")\")):this[a.body.type](a.body,b);},ThisExpression:function ThisExpression(a,b){b.write(\"this\",a);},Super:function Super(a,b){b.write(\"super\",a);},RestElement:t=function(a,b){b.write(\"...\"),this[a.argument.type](a.argument,b);},SpreadElement:t,YieldExpression:function YieldExpression(a,b){b.write(a.delegate?\"yield*\":\"yield\"),a.argument&&(b.write(\" \"),this[a.argument.type](a.argument,b));},AwaitExpression:function AwaitExpression(a,b){b.write(\"await \",a),h(b,a.argument,a);},TemplateLiteral:function TemplateLiteral(a,b){var c=a.quasis,d=a.expressions;b.write(\"`\");for(var e=d.length,f=0;f<e;f++){var g=d[f],h=c[f];b.write(h.value.raw,h),b.write(\"${\"),this[g.type](g,b),b.write(\"}\");}var j=c[c.length-1];b.write(j.value.raw,j),b.write(\"`\");},TemplateElement:function TemplateElement(a,b){b.write(a.value.raw,a);},TaggedTemplateExpression:function TaggedTemplateExpression(a,b){h(b,a.tag,a),this[a.quasi.type](a.quasi,b);},ArrayExpression:v=function(a,b){if(b.write(\"[\"),0<a.elements.length)for(var c,d=a.elements,e=d.length,f=0;;)if(c=d[f],null!=c&&this[c.type](c,b),++f<e)b.write(\", \");else {null==c&&b.write(\", \");break}b.write(\"]\");},ArrayPattern:v,ObjectExpression:function ObjectExpression(a,b){var c=b.indent.repeat(b.indentLevel++),d=b.lineEnd,e=b.writeComments,f=c+b.indent;if(b.write(\"{\"),0<a.properties.length){b.write(d),e&&null!=a.comments&&k(b,a.comments,f,d);for(var g,h=a.properties,j=h.length,l=0;;)if(g=h[l],e&&null!=g.comments&&k(b,g.comments,f,d),b.write(f),this[g.type](g,b),++l<j)b.write(\",\"+d);else break;b.write(d),e&&null!=a.trailingComments&&k(b,a.trailingComments,f,d),b.write(c+\"}\");}else e?null==a.comments?null==a.trailingComments?b.write(\"}\"):(b.write(d),k(b,a.trailingComments,f,d),b.write(c+\"}\")):(b.write(d),k(b,a.comments,f,d),null!=a.trailingComments&&k(b,a.trailingComments,f,d),b.write(c+\"}\")):b.write(\"}\");b.indentLevel--;},Property:function Property(a,b){a.method||\"i\"!==a.kind[0]?this.MethodDefinition(a,b):(!a.shorthand&&(a.computed?(b.write(\"[\"),this[a.key.type](a.key,b),b.write(\"]\")):this[a.key.type](a.key,b),b.write(\": \")),this[a.value.type](a.value,b));},PropertyDefinition:function PropertyDefinition(a,b){a[\"static\"]&&b.write(\"static \"),this[a.key.type](a.key,b),b.write(\" = \"),this[a.value.type](a.value,b);},ObjectPattern:function ObjectPattern(a,b){if(b.write(\"{\"),0<a.properties.length)for(var c=a.properties,d=c.length,e=0;;)if(this[c[e].type](c[e],b),++e<d)b.write(\", \");else break;b.write(\"}\");},SequenceExpression:function SequenceExpression(a,b){f(b,a.expressions);},UnaryExpression:function UnaryExpression(a,b){if(a.prefix){var c=a.operator,d=a.argument,e=a.argument.type;b.write(c);var f=g(b,d,a);!f&&(1<c.length||\"U\"===e[0]&&(\"n\"===e[1]||\"p\"===e[1])&&d.prefix&&d.operator[0]===c&&(\"+\"===c||\"-\"===c))&&b.write(\" \"),f?(b.write(1<c.length?\" (\":\"(\"),this[e](d,b),b.write(\")\")):this[e](d,b);}else this[a.argument.type](a.argument,b),b.write(a.operator);},UpdateExpression:function UpdateExpression(a,b){a.prefix?(b.write(a.operator),this[a.argument.type](a.argument,b)):(this[a.argument.type](a.argument,b),b.write(a.operator));},AssignmentExpression:function AssignmentExpression(a,b){this[a.left.type](a.left,b),b.write(\" \"+a.operator+\" \"),this[a.right.type](a.right,b);},AssignmentPattern:function AssignmentPattern(a,b){this[a.left.type](a.left,b),b.write(\" = \"),this[a.right.type](a.right,b);},BinaryExpression:u=function(a,b){var c=\"in\"===a.operator;c&&b.write(\"(\"),h(b,a.left,a,!1),b.write(\" \"+a.operator+\" \"),h(b,a.right,a,!0),c&&b.write(\")\");},LogicalExpression:u,ConditionalExpression:function ConditionalExpression(a,b){var c=a.test,d=b.expressionsPrecedence[c.type];d===p||d<=b.expressionsPrecedence.ConditionalExpression?(b.write(\"(\"),this[c.type](c,b),b.write(\")\")):this[c.type](c,b),b.write(\" ? \"),this[a.consequent.type](a.consequent,b),b.write(\" : \"),this[a.alternate.type](a.alternate,b);},NewExpression:function NewExpression(a,b){b.write(\"new \");var c=b.expressionsPrecedence[a.callee.type];c===p||c<b.expressionsPrecedence.CallExpression||l(a.callee)?(b.write(\"(\"),this[a.callee.type](a.callee,b),b.write(\")\")):this[a.callee.type](a.callee,b),f(b,a.arguments);},CallExpression:function CallExpression(a,b){var c=b.expressionsPrecedence[a.callee.type];c===p||c<b.expressionsPrecedence.CallExpression?(b.write(\"(\"),this[a.callee.type](a.callee,b),b.write(\")\")):this[a.callee.type](a.callee,b),a.optional&&b.write(\"?.\"),f(b,a.arguments);},ChainExpression:function ChainExpression(a,b){this[a.expression.type](a.expression,b);},MemberExpression:function MemberExpression(a,b){var c=b.expressionsPrecedence[a.object.type];c===p||c<b.expressionsPrecedence.MemberExpression?(b.write(\"(\"),this[a.object.type](a.object,b),b.write(\")\")):this[a.object.type](a.object,b),a.computed?(a.optional&&b.write(\"?.\"),b.write(\"[\"),this[a.property.type](a.property,b),b.write(\"]\")):(a.optional?b.write(\"?.\"):b.write(\".\"),this[a.property.type](a.property,b));},MetaProperty:function MetaProperty(a,b){b.write(a.meta.name+\".\"+a.property.name,a);},Identifier:function Identifier(a,b){b.write(a.name,a);},PrivateIdentifier:function PrivateIdentifier(a,b){b.write(\"#\".concat(a.name),a);},Literal:function Literal(a,b){null==a.raw?null==a.regex?null==a.bigint?b.write(n(a.value),a):b.write(a.bigint+\"n\",a):this.RegExpLiteral(a,b):b.write(a.raw,a);},RegExpLiteral:function RegExpLiteral(a,b){var c=a.regex;b.write(\"/\".concat(c.pattern,\"/\").concat(c.flags),a);}};a.GENERATOR=x;var y={};a.baseGenerator=x;var z=function(){function a(b){c(this,a);var d=null==b?y:b;this.output=\"\",null==d.output?this.output=\"\":(this.output=d.output,this.write=this.writeToStream),this.generator=null==d.generator?x:d.generator,this.expressionsPrecedence=null==d.expressionsPrecedence?q:d.expressionsPrecedence,this.indent=null==d.indent?\"  \":d.indent,this.lineEnd=null==d.lineEnd?\"\\n\":d.lineEnd,this.indentLevel=null==d.startingIndentLevel?0:d.startingIndentLevel,this.writeComments=!!d.comments&&d.comments,null!=d.sourceMap&&(this.write=null==d.output?this.writeAndMap:this.writeToStreamAndMap,this.sourceMap=d.sourceMap,this.line=1,this.column=0,this.lineEndSize=this.lineEnd.split(\"\\n\").length-1,this.mapping={original:null,generated:this,name:void 0,source:d.sourceMap.file||d.sourceMap._file});}return e(a,[{key:\"write\",value:function write(a){this.output+=a;}},{key:\"writeToStream\",value:function writeToStream(a){this.output.write(a);}},{key:\"writeAndMap\",value:function writeAndMap(a,b){this.output+=a,this.map(a,b);}},{key:\"writeToStreamAndMap\",value:function writeToStreamAndMap(a,b){this.output.write(a),this.map(a,b);}},{key:\"map\",value:function map(a,b){if(null!=b){var c=b.type;if(\"L\"===c[0]&&\"n\"===c[2])return this.column=0,void this.line++;if(null!=b.loc){var d=this.mapping;d.original=b.loc.start,d.name=b.name,this.sourceMap.addMapping(d);}if(\"T\"===c[0]&&\"E\"===c[8]||\"L\"===c[0]&&\"i\"===c[1]&&\"string\"==typeof b.value){for(var e=a.length,f=this.column,g=this.line,h=0;h<e;h++)\"\\n\"===a[h]?(f=0,g++):f++;return this.column=f,void(this.line=g)}}var j=a.length,k=this.lineEnd;0<j&&(0<this.lineEndSize&&(1===k.length?a[j-1]===k:a.endsWith(k))?(this.line+=this.lineEndSize,this.column=0):this.column+=j);}},{key:\"toString\",value:function toString(){return this.output}}]),a}();});\n\n\n});\n\nvar generate = astring_min.generate;\nexport { generate };\n", "import esprima from '../_snowpack/pkg/esprima.js';\nimport { generate } from '../_snowpack/pkg/astring.js';\nimport { Turtle } from \"./Turtle.js\";\n\nfunction makeSvgFootprint(footprintObj) {\n\n  let svg = \"\";\n\n  for (const padName in footprintObj) {\n    const pad = footprintObj[padName];\n\n    if (!pad.layers.includes(\"F.Cu\")) continue;\n\n    const [ dx, dy ] = pad.pos;\n\n    svg += `<path d=\"${pad.shape}\" style=\"transform: translate(${dx}px, ${dy}px);\"></path>`\n  }\n\n\n  return `<g>${svg}</g>`;\n\n}\n\nfunction makeFootprintTurtle(footprintObj) {\n\n   const t =  new Turtle();\n\n  for (const padName in footprintObj) {\n    const pad = footprintObj[padName];\n\n    if (!pad.layers.includes(\"F.Cu\")) continue;\n\n    let offset = [pad.pos[0], pad.pos[1]];\n\n    if (pad.origin != undefined) {\n      offset[0] = pad.origin[0];\n      offset[1] = pad.origin[1];\n    }\n\n    // const [ dx, dy ] = pad.pos;\n\n    t.group(new Turtle().pathD(pad.shape).translate(offset));\n  }\n\n  const w = t.width;\n  const h = t.height;\n  const center = t.cc;\n\n  const maxDim = Math.max(w, h);\n\n  return t\n    .translate(t.cc, [-25, -25])\n    .scale([40/maxDim, 40/maxDim], t.cc)\n    .flatten();\n\n}\n\n\nexport function getFootprints(string) {\n\n  const esprimaAST = esprima.parseScript(string, { range: true, comment: true });\n\n  const footprints = [];\n\n  const isFootprint = (dec) => {\n    let match = false;\n\n    if (dec.type !== \"ObjectExpression\") return false;\n\n    dec.properties.forEach( prop => {\n      if (prop.value.type !== \"ObjectExpression\") return;\n\n      const valueKeys = prop.value.properties.map( x => x.key.value );\n\n      match = match || [\"shape\", \"pos\", \"layers\"].every( x => {\n        return valueKeys.includes(x);\n      })\n    })\n\n    return match;\n  }\n\n  esprimaAST.body.forEach( x => {\n    if (x.type !== \"VariableDeclaration\") return;\n    // it's a variable declaration\n\n\n    x.declarations.forEach(dec => {\n      if (dec.type !== \"VariableDeclarator\") return;\n\n      if (isFootprint(dec.init)) {\n        const footprintString = generate(dec.init);\n\n        try {\n          const footprintObj = JSON.parse(footprintString);\n          footprints.push([ dec.id.name, footprintObj ]);\n        } catch (err) {}\n\n      };\n    })\n  })\n\n\n\n  return footprints.map(\n    footprint => [...footprint, makeFootprintTurtle(footprint[1])]\n  );\n}\n", "import { view } from \"./view.js\";\nimport { render } from \"../_snowpack/pkg/lit-html.js\";\n\nimport { addEvents } from \"./events.js\";\n\nimport { PCB as real_PCB } from \"./pcb.js\";\nimport { via } from \"./pcb_helpers.js\";\nimport { kicadToObj } from \"./ki_cad_parser.js\"\nimport { Turtle } from \"./Turtle.js\";\nimport { getFootprints } from \"./getFootprints.js\";\nimport { getFileSection } from \"./getFileSection.js\"\n\nconst STATE = {\n\tcodemirror: undefined,\n\tstoredPCB: undefined,\n\ttransforming: false,\n\ttransformUpdate: () => {},\n\tselectBox: {},\n\tfootprints: [],\n\tshapes: [],\n\tlimits: {\n\t\tx: [0, 1],\n\t\ty: [0, 1]\n\t},\n\tmm_per_unit: 25.4,\n\tgrid: true,\n\tgridSize: 0.05,\n\tviewHandles: true,\n\tpanZoomParams: undefined,\n\tpreviewFootprint: null,\n}\n\nclass PCB extends real_PCB {\n\tconstructor() {\n\t\tsuper();\n\t\tSTATE.storedPCB = this;\n\t}\n}\n\n// {\n//   board: board,\n//   layerColors: { // have default colors for default layers\n//     \"F.Cu\": \"red\",\n//     \"Vias\": \"rbg(32, 32, 32)\",\n//   },\n//   limits: {\n//     x: [0, 1],\n//     y: [0, 1]\n//   },\n//   mm_per_unit: 25.4\n// }\n\nconst default_renderPCB_params = {\n\tpcb: null,\n\tlayerColors: { \"F.Cu\": \"#ff8c00cc\" },\n\tlimits: {\n\t    x: [0, 1],\n\t    y: [0, 1]\n\t},\n\tmm_per_unit: 25.4,\n}\n\nfunction renderPCB({ pcb, layerColors, limits, mm_per_unit }) {\n\tif (pcb === undefined) console.log(\"renderPCB must include pcb param\");\n\n\tif (layerColors === undefined) layerColors = default_renderPCB_params.layerColors;\n\tif (limits === undefined) limits = default_renderPCB_params.limits;\n\tif (mm_per_unit === undefined) mm_per_unit = default_renderPCB_params.mm_per_unit;\n\n\tconst shapes = [];\n\tfor (const layer in layerColors) {\n\t\tshapes.push({\n\t\t\td: pcb.getLayer(layer),\n\t\t\tcolor: layerColors[layer],\n\t\t\tgroupId: layer\n\t\t});\n\t}\n\n\tSTATE.shapes = shapes; // TODO ??? what should the shape format be { d: path data string, color: hex or valid svg color, classes: []}\n\tSTATE.limits = limits;\n\tSTATE.mm_per_unit = mm_per_unit;\n\n\tdispatch(\"RENDER\");\n}\n\nconst default_renderShapes_params = {\n\tshapes: [],\n\tlimits: {\n\t    x: [0, 1],\n\t    y: [0, 1]\n\t},\n\tmm_per_unit: 25.4,\n}\n\nfunction renderShapes({ shapes, limits, mm_per_unit }) {\n\tif (shapes === undefined) shapes = default_renderShapes_params.shapes;\n\tif (limits === undefined) limits = default_renderShapes_params.limits;\n\tif (mm_per_unit === undefined) mm_per_unit = default_renderShapes_params.mm_per_unit;\n\n\tSTATE.shapes = shapes;\n\tSTATE.limits = limits;\n\tSTATE.mm_per_unit = mm_per_unit;\n\n\tdispatch(\"RENDER\");\n}\n\nconst included = {\n\tkicadToObj,\n\tPCB,\n\tvia,\n\tTurtle,\n\trenderPCB,\n\trenderShapes,\n\tdocument: null,\n\twindow: null,\n\tlocalStorage: null,\n\tFunction: null,\n\teval: null,\n\t// \"import\": null,\n}\n\nasync function urlToCode(file_url, state) {\n\tconst file = await fetch(file_url,  {mode: 'cors'});\n\tconst txt = await file.text();\n\n    state.codemirror.view.dispatch({\n\t  changes: {from: 0, insert: txt}\n\t});\n\n    // fold imports\n\tconst anotherComp = l => l.includes(\"return kicadToObj(\");\n\n\tconst doc = state.codemirror.view.state.doc;\n\tconst lines = doc.toString().split(\"\\n\");\n\tlet i = 0;\n\tlet count = 0;\n\twhile (true) {\n\t\tconst line = lines[i];\n\t\tif (!line) break;\n\t\tcount += line.length;\n\t\tif (i > lines.length) break;\n\t\tif (lines[i] === \"`)})()\" && !anotherComp(lines[i+1])) break;\n\t\ti++;\n\t};\n\n\tstate.codemirror.foldRange(0, count+i);\n\n    dispatch(\"RUN\");\n    document.querySelector(\".center-button\").click();\n}\n\nconst ACTIONS = {\n\tINIT(args, state) {\n\t\tdispatch(\"RENDER\");\n\t\tstate.codemirror = document.querySelector(\"#code-editor\");\n\t\taddEvents(state);\n\n\t\tconst url = new URL(window.location.href);\n\n\t    const search = window.location.search;\n\t    const code = new URLSearchParams(search).get(\"code\");\n\t    const file = new URLSearchParams(search).get(\"file\");\n\t    const handlesOff = new URLSearchParams(search).get(\"handles\") === \"false\";\n\t    const gridOff = new URLSearchParams(search).get(\"grid\") === \"false\";\n\n\t    if (handlesOff) state.viewHandles = false;\n\t    if (gridOff) state.grid = false;\n\n\t    if (code) {\n\n\t    } else if (file) {\n          let file_url = file;\n          if (!file.startsWith(\"http\")) file_url = `examples/${file}`;\n\n          urlToCode(file_url, state);\n\t    } else { // should check before running this\n\t    \tconst saved = window.localStorage.getItem(\"svg-pcb\")\n\t\t\t    state.codemirror.view.dispatch({\n\t\t\t\t  changes: {from: 0, insert: saved ?? \"\"}\n\t\t\t\t});\n\n\t\t\t\tdispatch(\"RUN\");\n\t\t\t\tdocument.querySelector(\".center-button\").click();\n\t    }\n\n\t    dispatch(\"RENDER\");\n\t},\n\tRUN({ dragging = false } = {}, state) {\n\t\tconst string = state.codemirror.view.state.doc.toString();\n\n\t\tif (!dragging) {\n\t\t\tlet footprints = [];\n\t\t\ttry {\n\t\t\t\tfootprints = getFootprints(string);\n\t\t\t} catch (err) {}\n\n\t\t\tstate.footprints = footprints;\n\t\t}\n\n\n\n\t\t// need to sanitize text\n\n\t\tconst BLACK_LISTED_WORDS = []; // import, document, window, localStorage\n\t\tBLACK_LISTED_WORDS.forEach(word => {\n\t\t\tif (string.includes(word))\n\t\t\t\tthrow `\"${word}\" is not permitted due to security concerns.`;\n\t\t});\n\n\t\tconst f = new Function(...Object.keys(included), string)\n\t\tf(...Object.values(included));\n\n\t},\n\tUPLOAD_COMP({ text, name }, state) {\n\t\ttext = text.replaceAll(\"$\", \"\");\n\t\ttext = `const ${name} = (() => { return kicadToObj(\\n\\`${text}\\`)})()\\n`\n\t\tstate.codemirror.view.dispatch({\n\t\t  changes: {from: 0, insert: text}\n\t\t});\n\n\t\tstate.codemirror.foldRange(0, text.length);\n\t\tdispatch(\"RENDER\");\n\t},\n\tUPLOAD_JS({ text }, state) {\n\t\tconst end = state.codemirror.view.state.doc.toString().length;\n\t\tstate.codemirror.view.dispatch({\n\t\t  changes: {from: 0, to: end, insert: text}\n\t\t});\n\n\t\tdispatch(\"RUN\");\n\t\tdocument.querySelector(\".center-button\").click()\n\t},\n\tADD_IMPORT({ text, name }, state) {\n\t\tconst alreadyImported = state.footprints.map(x => x[0]);\n\t\tif (alreadyImported.includes(name)) return;\n\n\t\tconst string = state.codemirror.view.state.doc.toString();\n\t\tconst startIndex = getFileSection(\"DECLARE_COMPONENTS\", string) ?? 0;\n\n\t\ttext = `const ${name} = ${text}\\n`\n\t\tstate.codemirror.view.dispatch({\n\t\t  changes: {from: startIndex, insert: text}\n\t\t});\n\n\t\tdispatch(\"RUN\");\n\t},\n\tTRANSLATE({ x, y, index }, state) {\n\t\tstate.transformUpdate(x, y);\n\t\tdispatch(\"RUN\", { dragging: true });\n\t},\n\tRENDER() {\n\t\trender(view(STATE), document.getElementById(\"root\"));\n\t}\n}\n\nexport function dispatch(action, args = {}) {\n\tconst trigger = ACTIONS[action];\n\tif (trigger) return trigger(args, STATE);\n\telse console.log(\"Action not recongnized:\", action);\n}\n", "import { dispatch } from \"./dispatch.js\";\n\nwindow.addEventListener(\"load\", () => {\n\tdispatch(\"INIT\");\n});"],
  "mappings": "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WAClB,GAAE,MAAM,KAAM,GACd,EAAE,MAAM,EAAG,IAEf,EAAE,SAAS,EAAG,IACN,EAAE,UACV,EAAE,MAAM,EAAG,GAEf,EAAE,SAAS,EAAG,GAElB,KAAM,EAAE,UACJ,EAAE,SAAS,EAAG,GACd,AAAI,EACI,GAAC,EAAE,UAAY,CAAC,EAAE,WAClB,GAAE,MAAM,KAAM,GACd,EAAE,MAAM,EAAG,IAEf,EAAE,SAAS,EAAG,IACN,EAAE,UACV,EAAE,MAAM,EAAG,GAEf,EAAE,SAAS,EAAG,GAElB,AAAI,EAAE,UAAU,IAAM,EAClB,GAAE,MAAM,EAAG,GACP,GACA,EAAE,MAAM,EAAG,GAEf,EAAE,MAAM,EAAG,IAEX,GAAE,MAAM,EAAG,GACP,GACA,EAAE,MAAM,EAAG,GAEf,EAAE,MAAM,EAAG,IAGnB,GAAI,EAAE,UAAU,EAAW,MAAQ,EAC/B,MAAO,GAAW,KAEtB,GAAI,EAAE,UAAU,IAAM,EAClB,MAAO,GAAE,SAAS,GAEtB,GAAI,EAAE,SAAW,EACb,EAAE,MAAM,EAAG,OAEX,OAAO,GAEX,MAAI,GAAE,SAAW,EACN,EAAE,IAAI,GAEN,EAGf,GAAI,IAAY,CACZ,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,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",
  "names": []
}
