const ATtiny412 = {"VCC":{"shape":"M 0.03,0.015L -0.03,0.015L -0.0305,0.015L -0.031,0.015L -0.0321,0.0149L -0.0331,0.0147L -0.0336,0.0146L -0.0347,0.0142L -0.0356,0.0139L -0.0361,0.0137L -0.0366,0.0135L -0.0371,0.0132L -0.0375,0.013L -0.038,0.0127L -0.0384,0.0125L -0.0392,0.0118L -0.0396,0.0115L -0.0401,0.0112L -0.0412,0.0101L -0.0415,0.0096L -0.0418,0.0092L -0.0425,0.0084L -0.0427,0.008L -0.043,0.0075L -0.0432,0.0071L -0.0435,0.0066L -0.0437,0.0061L -0.0439,0.0056L -0.0442,0.0047L -0.0446,0.0036L -0.0447,0.0031L -0.0449,0.0021L -0.045,0.001L -0.045,-0.001L -0.0449,-0.0021L -0.0447,-0.0031L -0.0446,-0.0036L -0.0442,-0.0047L -0.0439,-0.0056L -0.0437,-0.0061L -0.0435,-0.0066L -0.0432,-0.0071L -0.043,-0.0075L -0.0427,-0.008L -0.0425,-0.0084L -0.0418,-0.0092L -0.0415,-0.0096L -0.0412,-0.0101L -0.0401,-0.0112L -0.0396,-0.0115L -0.0392,-0.0118L -0.0384,-0.0125L -0.038,-0.0127L -0.0375,-0.013L -0.0371,-0.0132L -0.0366,-0.0135L -0.0361,-0.0137L -0.0356,-0.0139L -0.0347,-0.0142L -0.0336,-0.0146L -0.0331,-0.0147L -0.0321,-0.0149L -0.031,-0.015L 0.03,-0.015L 0.03,0.015","pos":[-0.11,0.075],"layers":["F.Cu"],"index":1},"PA6":{"shape":"M -0.03,0.015L 0.03,0.015L 0.03,-0.015L -0.03,-0.015L -0.03,0.015","pos":[-0.11,0.025],"layers":["F.Cu"],"index":2},"PA7":{"shape":"M -0.03,0.015L 0.03,0.015L 0.03,-0.015L -0.03,-0.015L -0.03,0.015","pos":[-0.11,-0.025],"layers":["F.Cu"],"index":3},"PA1":{"shape":"M -0.03,0.015L 0.03,0.015L 0.03,-0.015L -0.03,-0.015L -0.03,0.015","pos":[-0.11,-0.075],"layers":["F.Cu"],"index":4},"PA2":{"shape":"M -0.03,0.015L 0.03,0.015L 0.03,-0.015L -0.03,-0.015L -0.03,0.015","pos":[0.11,-0.075],"layers":["F.Cu"],"index":5},"UPDI":{"shape":"M -0.03,0.015L 0.03,0.015L 0.03,-0.015L -0.03,-0.015L -0.03,0.015","pos":[0.11,-0.025],"layers":["F.Cu"],"index":6},"PA3":{"shape":"M -0.03,0.015L 0.03,0.015L 0.03,-0.015L -0.03,-0.015L -0.03,0.015","pos":[0.11,0.025],"layers":["F.Cu"],"index":7},"GND":{"shape":"M -0.03,0.015L 0.03,0.015L 0.03,-0.015L -0.03,-0.015L -0.03,0.015","pos":[0.11,0.075],"layers":["F.Cu"],"index":8}};
const C_1206 = {"1":{"shape":"M -0.032,0.034L 0.032,0.034L 0.032,-0.034L -0.032,-0.034L -0.032,0.034","pos":[-0.06,0],"layers":["F.Cu"],"index":1},"2":{"shape":"M -0.032,0.034L 0.032,0.034L 0.032,-0.034L -0.032,-0.034L -0.032,0.034","pos":[0.06,0],"layers":["F.Cu"],"index":2}};
const header_UPDI_5V = {"UPDI":{"shape":"M -0.05 0.025L 0.05 0.025L 0.05 -0.025L -0.05 -0.025L -0.05 0.025 M 0.05 -0.025L 0.0509 -0.025L 0.0517 -0.0249L 0.0526 -0.0249L 0.0535 -0.0248L 0.0543 -0.0246L 0.0552 -0.0245L 0.056 -0.0243L 0.0569 -0.024L 0.0577 -0.0238L 0.0586 -0.0235L 0.0594 -0.0232L 0.0602 -0.0228L 0.061 -0.0225L 0.0617 -0.0221L 0.0625 -0.0217L 0.0632 -0.0212L 0.064 -0.0207L 0.0647 -0.0202L 0.0654 -0.0197L 0.0661 -0.0192L 0.0667 -0.0186L 0.0674 -0.018L 0.068 -0.0174L 0.0686 -0.0167L 0.0692 -0.0161L 0.0697 -0.0154L 0.0702 -0.0147L 0.0707 -0.014L 0.0712 -0.0132L 0.0717 -0.0125L 0.0721 -0.0117L 0.0725 -0.011L 0.0728 -0.0102L 0.0732 -0.0094L 0.0735 -0.0086L 0.0738 -0.0077L 0.074 -0.0069L 0.0743 -0.006L 0.0745 -0.0052L 0.0746 -0.0043L 0.0748 -0.0035L 0.0749 -0.0026L 0.0749 -0.0017L 0.075 -0.0009L 0.075 -3.4694e-18L 0.075 0.0009L 0.0749 0.0017L 0.0749 0.0026L 0.0748 0.0035L 0.0746 0.0043L 0.0745 0.0052L 0.0743 0.006L 0.074 0.0069L 0.0738 0.0077L 0.0735 0.0086L 0.0732 0.0094L 0.0728 0.0102L 0.0725 0.011L 0.0721 0.0117L 0.0717 0.0125L 0.0712 0.0132L 0.0707 0.014L 0.0702 0.0147L 0.0697 0.0154L 0.0692 0.0161L 0.0686 0.0167L 0.068 0.0174L 0.0674 0.018L 0.0667 0.0186L 0.0661 0.0192L 0.0654 0.0197L 0.0647 0.0202L 0.064 0.0207L 0.0632 0.0212L 0.0625 0.0217L 0.0617 0.0221L 0.061 0.0225L 0.0602 0.0228L 0.0594 0.0232L 0.0586 0.0235L 0.0577 0.0238L 0.0569 0.024L 0.056 0.0243L 0.0552 0.0245L 0.0543 0.0246L 0.0535 0.0248L 0.0526 0.0249L 0.0517 0.0249L 0.0509 0.025L 0.05 0.025L 0.0491 0.025L 0.0483 0.0249L 0.0474 0.0249L 0.0465 0.0248L 0.0457 0.0246L 0.0448 0.0245L 0.044 0.0243L 0.0431 0.024L 0.0423 0.0238L 0.0414 0.0235L 0.0406 0.0232L 0.0398 0.0228L 0.039 0.0225L 0.0383 0.0221L 0.0375 0.0217L 0.0368 0.0212L 0.036 0.0207L 0.0353 0.0202L 0.0346 0.0197L 0.0339 0.0192L 0.0333 0.0186L 0.0326 0.018L 0.032 0.0174L 0.0314 0.0167L 0.0308 0.0161L 0.0303 0.0154L 0.0298 0.0147L 0.0293 0.014L 0.0288 0.0132L 0.0283 0.0125L 0.0279 0.0117L 0.0275 0.011L 0.0272 0.0102L 0.0268 0.0094L 0.0265 0.0086L 0.0262 0.0077L 0.026 0.0069L 0.0257 0.006L 0.0255 0.0052L 0.0254 0.0043L 0.0252 0.0035L 0.0251 0.0026L 0.0251 0.0017L 0.025 0.0009L 0.025 3.4694e-18L 0.025 -0.0009L 0.0251 -0.0017L 0.0251 -0.0026L 0.0252 -0.0035L 0.0254 -0.0043L 0.0255 -0.0052L 0.0257 -0.006L 0.026 -0.0069L 0.0262 -0.0077L 0.0265 -0.0086L 0.0268 -0.0094L 0.0272 -0.0102L 0.0275 -0.011L 0.0279 -0.0117L 0.0283 -0.0125L 0.0288 -0.0132L 0.0293 -0.014L 0.0298 -0.0147L 0.0303 -0.0154L 0.0308 -0.0161L 0.0314 -0.0167L 0.032 -0.0174L 0.0326 -0.018L 0.0333 -0.0186L 0.0339 -0.0192L 0.0346 -0.0197L 0.0353 -0.0202L 0.036 -0.0207L 0.0368 -0.0212L 0.0375 -0.0217L 0.0383 -0.0221L 0.039 -0.0225L 0.0398 -0.0228L 0.0406 -0.0232L 0.0414 -0.0235L 0.0423 -0.0238L 0.0431 -0.024L 0.044 -0.0243L 0.0448 -0.0245L 0.0457 -0.0246L 0.0465 -0.0248L 0.0474 -0.0249L 0.0483 -0.0249L 0.0491 -0.025L 0.05 -0.025","pos":[0,-0.1],"layers":["F.Cu"],"index":1},"GND":{"shape":"M -0.05 0.025L 0.05 0.025L 0.05 -0.025L -0.05 -0.025L -0.05 0.025","pos":[0,0],"layers":["F.Cu"],"index":2},"5V":{"shape":"M -0.05 0.025L 0.05 0.025L 0.05 -0.025L -0.05 -0.025L -0.05 0.025","pos":[0,0.1],"layers":["F.Cu"],"index":3}};
const header_servo = {"G/blk1":{"shape":"M -0.05,-0.025L 0.0517,-0.025L 0.0535,-0.0248L 0.0552,-0.0244L 0.056,-0.0243L 0.0578,-0.0237L 0.0593,-0.0232L 0.0602,-0.0229L 0.061,-0.0225L 0.0618,-0.0221L 0.0625,-0.0216L 0.0633,-0.0212L 0.064,-0.0208L 0.0654,-0.0197L 0.0661,-0.0191L 0.0668,-0.0186L 0.0686,-0.0168L 0.0691,-0.0161L 0.0697,-0.0154L 0.0708,-0.014L 0.0712,-0.0133L 0.0716,-0.0125L 0.0721,-0.0118L 0.0725,-0.011L 0.0729,-0.0102L 0.0732,-0.0093L 0.0737,-0.0078L 0.0743,-0.006L 0.0744,-0.0052L 0.0748,-0.0035L 0.075,-0.0017L 0.075,-0.0009L 0.075,0L 0.075,0.0009L 0.075,0.0017L 0.0748,0.0035L 0.0744,0.0052L 0.0743,0.006L 0.0737,0.0078L 0.0732,0.0093L 0.0729,0.0102L 0.0725,0.011L 0.0721,0.0118L 0.0716,0.0125L 0.0712,0.0133L 0.0708,0.014L 0.0697,0.0154L 0.0691,0.0161L 0.0686,0.0168L 0.0668,0.0186L 0.0661,0.0191L 0.0654,0.0197L 0.064,0.0208L 0.0633,0.0212L 0.0625,0.0216L 0.0618,0.0221L 0.061,0.0225L 0.0602,0.0229L 0.0593,0.0232L 0.0578,0.0237L 0.056,0.0243L 0.0552,0.0244L 0.0535,0.0248L 0.0517,0.025L 0.0509,0.025L 0.05,0.025L -0.05,0.025L -0.05,-0.025","pos":[0.107,-0.1],"layers":["F.Cu"],"index":1},"G/blk2":{"shape":"M -0.05,0.025L 0.05,0.025L 0.05,-0.025L -0.05,-0.025L -0.05,0.025","pos":[-0.107,-0.1],"layers":["F.Cu"],"index":2},"V/red1":{"shape":"M -0.05,0.025L 0.05,0.025L 0.05,-0.025L -0.05,-0.025L -0.05,0.025","pos":[0.107,0],"layers":["F.Cu"],"index":3},"V/red2":{"shape":"M -0.05,0.025L 0.05,0.025L 0.05,-0.025L -0.05,-0.025L -0.05,0.025","pos":[-0.107,0],"layers":["F.Cu"],"index":4},"S0/wht":{"shape":"M -0.05,0.025L 0.05,0.025L 0.05,-0.025L -0.05,-0.025L -0.05,0.025","pos":[0.107,0.1],"layers":["F.Cu"],"index":5},"S1/wht":{"shape":"M -0.05,0.025L 0.05,0.025L 0.05,-0.025L -0.05,-0.025L -0.05,0.025","pos":[-0.107,0.1],"layers":["F.Cu"],"index":6}};


// commands:
//  - SHIFT+ENTER: render
//  - drap & drop file: kicad import


// constants
const width = .67 // board width
const height = .69 // board height
const x = 1 // x origin
const y = 1 // y origin
const zt = 0 // top z
const zb = -0.06 // bottom z
const w = .015 // wire width
const mask = .004 // solder mask size
const border = 0.05 // rendering border


/* -- DECLARE_PCB -- */
let board = new PCB();

let interior = geo.translate(geo.rectangle(width, height), [x+width/2, y+height/2]);


/* -- ADD_COMPONENTS -- */
let IC1 = board.add(ATtiny412, {translate: pt(x+.47, y+.43), name: 'IC1\nt412'});
let C1 = board.add(C_1206, {translate: pt(IC1.posX, IC1.padY("VCC")+.08), name: 'C1 1uF'});
let J1 = board.add(header_UPDI_5V, {translate: pt(IC1.posX, y+.23), rotate: 90, name: 'J1\nUPDI'});
let J2 = board.add(header_servo, {translate: pt(IC1.posX-.32, J1.posY), rotate: -90, name: 'J2\nservos'});

board.addShape("interior", interior);


/* -- ADD_WIRES -- */
board.wire(path(C1.pad("1"),
                pt(IC1.padX("VCC")-.02, C1.posY),
                pt(IC1.padX("VCC")-.02, IC1.padY("VCC")),
                IC1.pad("VCC")), w);

board.wire(path(C1.pad("2"),
                pt(IC1.padX("GND")+.02, C1.posY),
                pt(IC1.padX("GND")+.02, IC1.padY("GND")),
                IC1.pad("GND")), w);

board.wire(path(IC1.pad("UPDI"),
                pt(IC1.posX+.03, IC1.padY("UPDI")),
                pt(IC1.posX+.03, IC1.padY("PA2")-.02),
                pt(J1.padX("UPDI"), IC1.padY("PA2")-.09),
                J1.pad("UPDI")), w);

board.wire(path(IC1.pad("GND"),
                pt(IC1.posX, IC1.padY("GND")),
                J1.pad("GND")), w);

board.wire(path(IC1.pad("VCC"),
                pt(IC1.posX-.03, IC1.padY("VCC")),
                pt(IC1.posX-.03, IC1.padY("PA1")-.02),
                pt(J1.padX("5V"), IC1.padY("PA1")-.09),
                J1.pad("5V")), w);

board.wire(path(J2.pad("G/blk1"),
                J2.pad("G/blk2")), w);

board.wire(path(IC1.pad("GND"),
                pt(IC1.padX("GND")+.02, IC1.padY("GND")),
                pt(IC1.padX("GND")+.02, C1.posY+.07),
                pt(J2.padX("G/blk2"), C1.posY+.07),
                J2.pad("G/blk2")), w);

board.wire(path(J2.pad("V/red1"),
                J2.pad("V/red2")), w);

board.wire(path(IC1.pad("VCC"),
                pt(J2.padX("V/red2"), IC1.padY("VCC")),
                J2.pad("V/red2")), w);

board.wire(path(IC1.pad("PA2"),
                pt(IC1.padX("PA2")+.06, IC1.padY("PA2")),
                pt(IC1.padX("PA2")+.06, J2.padY("S0/wht")),
                J2.pad("S0/wht")), w);

board.wire(path(IC1.pad("PA1"),
                pt(J2.padX("S1/wht"), IC1.padY("PA1")),
                J2.pad("S1/wht")), w);


// rendering
renderPCB({
  pcb: board,
  layerColors: {
    "interior": "#002d00ff",
    "B.Cu": "#ff4c007f",
    "F.Cu": "#ff8c00cc",
    "drill": "#ff3300e5",
    "padLabels": "#ffff99e5",
    "componentLabels": "#00e5e5e5",
  },
  limits: {
    x: [x-border, x+width+border],
    y: [y-border, y+height+border]
  },
  mm_per_unit: 25.4
})
